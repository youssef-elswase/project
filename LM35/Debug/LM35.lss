
LM35.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005618  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000152  00800060  00005618  000056ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  008001b2  008001b2  000057fe  2**0
                  ALLOC
  3 .stab         00002700  00000000  00000000  00005800  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001011  00000000  00000000  00007f00  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001e0  00000000  00000000  00008f11  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000231  00000000  00000000  000090f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003004  00000000  00000000  00009322  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001560  00000000  00000000  0000c326  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014e2  00000000  00000000  0000d886  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000200  00000000  00000000  0000ed68  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000361  00000000  00000000  0000ef68  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000232c  00000000  00000000  0000f2c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  000115f5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 b7 15 	jmp	0x2b6e	; 0x2b6e <__vector_16>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e1       	ldi	r30, 0x18	; 24
      68:	f6 e5       	ldi	r31, 0x56	; 86
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 3b       	cpi	r26, 0xB2	; 178
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a2 eb       	ldi	r26, 0xB2	; 178
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 3b       	cpi	r26, 0xBE	; 190
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 12 2a 	call	0x5424	; 0x5424 <main>
      8a:	0c 94 0a 2b 	jmp	0x5614	; 0x5614 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__ashldi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__ashldi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__ashldi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__ashldi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	49 81       	ldd	r20, Y+1	; 0x01
      e4:	5a 81       	ldd	r21, Y+2	; 0x02
      e6:	6b 81       	ldd	r22, Y+3	; 0x03
      e8:	7c 81       	ldd	r23, Y+4	; 0x04
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__ashldi3+0x7c>
      ee:	19 86       	std	Y+9, r1	; 0x09
      f0:	1a 86       	std	Y+10, r1	; 0x0a
      f2:	1b 86       	std	Y+11, r1	; 0x0b
      f4:	1c 86       	std	Y+12, r1	; 0x0c
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__ashldi3+0x76>
     100:	44 0f       	add	r20, r20
     102:	55 1f       	adc	r21, r21
     104:	66 1f       	adc	r22, r22
     106:	77 1f       	adc	r23, r23
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__ashldi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__ashldi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__ashldi3+0x94>
     11e:	88 0f       	add	r24, r24
     120:	99 1f       	adc	r25, r25
     122:	aa 1f       	adc	r26, r26
     124:	bb 1f       	adc	r27, r27
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__ashldi3+0x8c>
     12a:	89 87       	std	Y+9, r24	; 0x09
     12c:	9a 87       	std	Y+10, r25	; 0x0a
     12e:	ab 87       	std	Y+11, r26	; 0x0b
     130:	bc 87       	std	Y+12, r27	; 0x0c
     132:	04 c0       	rjmp	.+8      	; 0x13c <__ashldi3+0xaa>
     134:	76 95       	lsr	r23
     136:	67 95       	ror	r22
     138:	57 95       	ror	r21
     13a:	47 95       	ror	r20
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__ashldi3+0xa2>
     140:	8d 81       	ldd	r24, Y+5	; 0x05
     142:	9e 81       	ldd	r25, Y+6	; 0x06
     144:	af 81       	ldd	r26, Y+7	; 0x07
     146:	b8 85       	ldd	r27, Y+8	; 0x08
     148:	04 c0       	rjmp	.+8      	; 0x152 <__ashldi3+0xc0>
     14a:	88 0f       	add	r24, r24
     14c:	99 1f       	adc	r25, r25
     14e:	aa 1f       	adc	r26, r26
     150:	bb 1f       	adc	r27, r27
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__ashldi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	4d 87       	std	Y+13, r20	; 0x0d
     160:	5e 87       	std	Y+14, r21	; 0x0e
     162:	6f 87       	std	Y+15, r22	; 0x0f
     164:	78 8b       	std	Y+16, r23	; 0x10
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__fixunssfsi>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	1f 93       	push	r17
     198:	7b 01       	movw	r14, r22
     19a:	8c 01       	movw	r16, r24
     19c:	20 e0       	ldi	r18, 0x00	; 0
     19e:	30 e0       	ldi	r19, 0x00	; 0
     1a0:	40 e0       	ldi	r20, 0x00	; 0
     1a2:	5f e4       	ldi	r21, 0x4F	; 79
     1a4:	0e 94 ad 10 	call	0x215a	; 0x215a <__gesf2>
     1a8:	88 23       	and	r24, r24
     1aa:	8c f0       	brlt	.+34     	; 0x1ce <__fixunssfsi+0x3e>
     1ac:	c8 01       	movw	r24, r16
     1ae:	b7 01       	movw	r22, r14
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	40 e0       	ldi	r20, 0x00	; 0
     1b6:	5f e4       	ldi	r21, 0x4F	; 79
     1b8:	0e 94 25 0f 	call	0x1e4a	; 0x1e4a <__subsf3>
     1bc:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__fixsfsi>
     1c0:	9b 01       	movw	r18, r22
     1c2:	ac 01       	movw	r20, r24
     1c4:	20 50       	subi	r18, 0x00	; 0
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 48       	sbci	r21, 0x80	; 128
     1cc:	06 c0       	rjmp	.+12     	; 0x1da <__fixunssfsi+0x4a>
     1ce:	c8 01       	movw	r24, r16
     1d0:	b7 01       	movw	r22, r14
     1d2:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <__fixsfsi>
     1d6:	9b 01       	movw	r18, r22
     1d8:	ac 01       	movw	r20, r24
     1da:	b9 01       	movw	r22, r18
     1dc:	ca 01       	movw	r24, r20
     1de:	1f 91       	pop	r17
     1e0:	0f 91       	pop	r16
     1e2:	ff 90       	pop	r15
     1e4:	ef 90       	pop	r14
     1e6:	08 95       	ret

000001e8 <__udivdi3>:
     1e8:	ae e5       	ldi	r26, 0x5E	; 94
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	ea ef       	ldi	r30, 0xFA	; 250
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	0c 94 d3 2a 	jmp	0x55a6	; 0x55a6 <__prologue_saves__>
     1f4:	a8 e0       	ldi	r26, 0x08	; 8
     1f6:	4e 01       	movw	r8, r28
     1f8:	08 94       	sec
     1fa:	81 1c       	adc	r8, r1
     1fc:	91 1c       	adc	r9, r1
     1fe:	f4 01       	movw	r30, r8
     200:	6a 2e       	mov	r6, r26
     202:	11 92       	st	Z+, r1
     204:	6a 94       	dec	r6
     206:	e9 f7       	brne	.-6      	; 0x202 <__udivdi3+0x1a>
     208:	29 83       	std	Y+1, r18	; 0x01
     20a:	3a 83       	std	Y+2, r19	; 0x02
     20c:	4b 83       	std	Y+3, r20	; 0x03
     20e:	5c 83       	std	Y+4, r21	; 0x04
     210:	6d 83       	std	Y+5, r22	; 0x05
     212:	7e 83       	std	Y+6, r23	; 0x06
     214:	8f 83       	std	Y+7, r24	; 0x07
     216:	98 87       	std	Y+8, r25	; 0x08
     218:	ce 01       	movw	r24, r28
     21a:	09 96       	adiw	r24, 0x09	; 9
     21c:	fc 01       	movw	r30, r24
     21e:	11 92       	st	Z+, r1
     220:	aa 95       	dec	r26
     222:	e9 f7       	brne	.-6      	; 0x21e <__udivdi3+0x36>
     224:	a9 86       	std	Y+9, r10	; 0x09
     226:	ba 86       	std	Y+10, r11	; 0x0a
     228:	cb 86       	std	Y+11, r12	; 0x0b
     22a:	dc 86       	std	Y+12, r13	; 0x0c
     22c:	ed 86       	std	Y+13, r14	; 0x0d
     22e:	fe 86       	std	Y+14, r15	; 0x0e
     230:	0f 87       	std	Y+15, r16	; 0x0f
     232:	18 8b       	std	Y+16, r17	; 0x10
     234:	29 84       	ldd	r2, Y+9	; 0x09
     236:	3a 84       	ldd	r3, Y+10	; 0x0a
     238:	4b 84       	ldd	r4, Y+11	; 0x0b
     23a:	5c 84       	ldd	r5, Y+12	; 0x0c
     23c:	ed 84       	ldd	r14, Y+13	; 0x0d
     23e:	fe 84       	ldd	r15, Y+14	; 0x0e
     240:	0f 85       	ldd	r16, Y+15	; 0x0f
     242:	18 89       	ldd	r17, Y+16	; 0x10
     244:	69 80       	ldd	r6, Y+1	; 0x01
     246:	7a 80       	ldd	r7, Y+2	; 0x02
     248:	8b 80       	ldd	r8, Y+3	; 0x03
     24a:	9c 80       	ldd	r9, Y+4	; 0x04
     24c:	6d a6       	std	Y+45, r6	; 0x2d
     24e:	7e a6       	std	Y+46, r7	; 0x2e
     250:	8f a6       	std	Y+47, r8	; 0x2f
     252:	98 aa       	std	Y+48, r9	; 0x30
     254:	6d 80       	ldd	r6, Y+5	; 0x05
     256:	7e 80       	ldd	r7, Y+6	; 0x06
     258:	8f 80       	ldd	r8, Y+7	; 0x07
     25a:	98 84       	ldd	r9, Y+8	; 0x08
     25c:	e1 14       	cp	r14, r1
     25e:	f1 04       	cpc	r15, r1
     260:	01 05       	cpc	r16, r1
     262:	11 05       	cpc	r17, r1
     264:	09 f0       	breq	.+2      	; 0x268 <__udivdi3+0x80>
     266:	b3 c3       	rjmp	.+1894   	; 0x9ce <__stack+0x16f>
     268:	62 14       	cp	r6, r2
     26a:	73 04       	cpc	r7, r3
     26c:	84 04       	cpc	r8, r4
     26e:	95 04       	cpc	r9, r5
     270:	08 f0       	brcs	.+2      	; 0x274 <__udivdi3+0x8c>
     272:	3d c1       	rjmp	.+634    	; 0x4ee <__udivdi3+0x306>
     274:	00 e0       	ldi	r16, 0x00	; 0
     276:	20 16       	cp	r2, r16
     278:	00 e0       	ldi	r16, 0x00	; 0
     27a:	30 06       	cpc	r3, r16
     27c:	01 e0       	ldi	r16, 0x01	; 1
     27e:	40 06       	cpc	r4, r16
     280:	00 e0       	ldi	r16, 0x00	; 0
     282:	50 06       	cpc	r5, r16
     284:	88 f4       	brcc	.+34     	; 0x2a8 <__udivdi3+0xc0>
     286:	1f ef       	ldi	r17, 0xFF	; 255
     288:	21 16       	cp	r2, r17
     28a:	31 04       	cpc	r3, r1
     28c:	41 04       	cpc	r4, r1
     28e:	51 04       	cpc	r5, r1
     290:	39 f0       	breq	.+14     	; 0x2a0 <__udivdi3+0xb8>
     292:	30 f0       	brcs	.+12     	; 0x2a0 <__udivdi3+0xb8>
     294:	48 e0       	ldi	r20, 0x08	; 8
     296:	e4 2e       	mov	r14, r20
     298:	f1 2c       	mov	r15, r1
     29a:	01 2d       	mov	r16, r1
     29c:	11 2d       	mov	r17, r1
     29e:	18 c0       	rjmp	.+48     	; 0x2d0 <__udivdi3+0xe8>
     2a0:	ee 24       	eor	r14, r14
     2a2:	ff 24       	eor	r15, r15
     2a4:	87 01       	movw	r16, r14
     2a6:	14 c0       	rjmp	.+40     	; 0x2d0 <__udivdi3+0xe8>
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	22 16       	cp	r2, r18
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	32 06       	cpc	r3, r18
     2b0:	20 e0       	ldi	r18, 0x00	; 0
     2b2:	42 06       	cpc	r4, r18
     2b4:	21 e0       	ldi	r18, 0x01	; 1
     2b6:	52 06       	cpc	r5, r18
     2b8:	30 f0       	brcs	.+12     	; 0x2c6 <__udivdi3+0xde>
     2ba:	38 e1       	ldi	r19, 0x18	; 24
     2bc:	e3 2e       	mov	r14, r19
     2be:	f1 2c       	mov	r15, r1
     2c0:	01 2d       	mov	r16, r1
     2c2:	11 2d       	mov	r17, r1
     2c4:	05 c0       	rjmp	.+10     	; 0x2d0 <__udivdi3+0xe8>
     2c6:	20 e1       	ldi	r18, 0x10	; 16
     2c8:	e2 2e       	mov	r14, r18
     2ca:	f1 2c       	mov	r15, r1
     2cc:	01 2d       	mov	r16, r1
     2ce:	11 2d       	mov	r17, r1
     2d0:	d2 01       	movw	r26, r4
     2d2:	c1 01       	movw	r24, r2
     2d4:	0e 2c       	mov	r0, r14
     2d6:	04 c0       	rjmp	.+8      	; 0x2e0 <__udivdi3+0xf8>
     2d8:	b6 95       	lsr	r27
     2da:	a7 95       	ror	r26
     2dc:	97 95       	ror	r25
     2de:	87 95       	ror	r24
     2e0:	0a 94       	dec	r0
     2e2:	d2 f7       	brpl	.-12     	; 0x2d8 <__udivdi3+0xf0>
     2e4:	82 59       	subi	r24, 0x92	; 146
     2e6:	9f 4f       	sbci	r25, 0xFF	; 255
     2e8:	dc 01       	movw	r26, r24
     2ea:	2c 91       	ld	r18, X
     2ec:	80 e2       	ldi	r24, 0x20	; 32
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	a0 e0       	ldi	r26, 0x00	; 0
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	8e 19       	sub	r24, r14
     2f6:	9f 09       	sbc	r25, r15
     2f8:	a0 0b       	sbc	r26, r16
     2fa:	b1 0b       	sbc	r27, r17
     2fc:	7c 01       	movw	r14, r24
     2fe:	8d 01       	movw	r16, r26
     300:	e2 1a       	sub	r14, r18
     302:	f1 08       	sbc	r15, r1
     304:	01 09       	sbc	r16, r1
     306:	11 09       	sbc	r17, r1
     308:	e1 14       	cp	r14, r1
     30a:	f1 04       	cpc	r15, r1
     30c:	01 05       	cpc	r16, r1
     30e:	11 05       	cpc	r17, r1
     310:	a1 f1       	breq	.+104    	; 0x37a <__udivdi3+0x192>
     312:	0e 2c       	mov	r0, r14
     314:	04 c0       	rjmp	.+8      	; 0x31e <__udivdi3+0x136>
     316:	22 0c       	add	r2, r2
     318:	33 1c       	adc	r3, r3
     31a:	44 1c       	adc	r4, r4
     31c:	55 1c       	adc	r5, r5
     31e:	0a 94       	dec	r0
     320:	d2 f7       	brpl	.-12     	; 0x316 <__udivdi3+0x12e>
     322:	a4 01       	movw	r20, r8
     324:	93 01       	movw	r18, r6
     326:	0e 2c       	mov	r0, r14
     328:	04 c0       	rjmp	.+8      	; 0x332 <__udivdi3+0x14a>
     32a:	22 0f       	add	r18, r18
     32c:	33 1f       	adc	r19, r19
     32e:	44 1f       	adc	r20, r20
     330:	55 1f       	adc	r21, r21
     332:	0a 94       	dec	r0
     334:	d2 f7       	brpl	.-12     	; 0x32a <__udivdi3+0x142>
     336:	80 e2       	ldi	r24, 0x20	; 32
     338:	90 e0       	ldi	r25, 0x00	; 0
     33a:	8e 19       	sub	r24, r14
     33c:	9f 09       	sbc	r25, r15
     33e:	6d a4       	ldd	r6, Y+45	; 0x2d
     340:	7e a4       	ldd	r7, Y+46	; 0x2e
     342:	8f a4       	ldd	r8, Y+47	; 0x2f
     344:	98 a8       	ldd	r9, Y+48	; 0x30
     346:	04 c0       	rjmp	.+8      	; 0x350 <__udivdi3+0x168>
     348:	96 94       	lsr	r9
     34a:	87 94       	ror	r8
     34c:	77 94       	ror	r7
     34e:	67 94       	ror	r6
     350:	8a 95       	dec	r24
     352:	d2 f7       	brpl	.-12     	; 0x348 <__udivdi3+0x160>
     354:	62 2a       	or	r6, r18
     356:	73 2a       	or	r7, r19
     358:	84 2a       	or	r8, r20
     35a:	95 2a       	or	r9, r21
     35c:	ad a4       	ldd	r10, Y+45	; 0x2d
     35e:	be a4       	ldd	r11, Y+46	; 0x2e
     360:	cf a4       	ldd	r12, Y+47	; 0x2f
     362:	d8 a8       	ldd	r13, Y+48	; 0x30
     364:	04 c0       	rjmp	.+8      	; 0x36e <__udivdi3+0x186>
     366:	aa 0c       	add	r10, r10
     368:	bb 1c       	adc	r11, r11
     36a:	cc 1c       	adc	r12, r12
     36c:	dd 1c       	adc	r13, r13
     36e:	ea 94       	dec	r14
     370:	d2 f7       	brpl	.-12     	; 0x366 <__udivdi3+0x17e>
     372:	ad a6       	std	Y+45, r10	; 0x2d
     374:	be a6       	std	Y+46, r11	; 0x2e
     376:	cf a6       	std	Y+47, r12	; 0x2f
     378:	d8 aa       	std	Y+48, r13	; 0x30
     37a:	62 01       	movw	r12, r4
     37c:	ee 24       	eor	r14, r14
     37e:	ff 24       	eor	r15, r15
     380:	cd aa       	std	Y+53, r12	; 0x35
     382:	de aa       	std	Y+54, r13	; 0x36
     384:	ef aa       	std	Y+55, r14	; 0x37
     386:	f8 ae       	std	Y+56, r15	; 0x38
     388:	92 01       	movw	r18, r4
     38a:	81 01       	movw	r16, r2
     38c:	20 70       	andi	r18, 0x00	; 0
     38e:	30 70       	andi	r19, 0x00	; 0
     390:	09 af       	std	Y+57, r16	; 0x39
     392:	1a af       	std	Y+58, r17	; 0x3a
     394:	2b af       	std	Y+59, r18	; 0x3b
     396:	3c af       	std	Y+60, r19	; 0x3c
     398:	c4 01       	movw	r24, r8
     39a:	b3 01       	movw	r22, r6
     39c:	a7 01       	movw	r20, r14
     39e:	96 01       	movw	r18, r12
     3a0:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     3a4:	7b 01       	movw	r14, r22
     3a6:	8c 01       	movw	r16, r24
     3a8:	c4 01       	movw	r24, r8
     3aa:	b3 01       	movw	r22, r6
     3ac:	2d a9       	ldd	r18, Y+53	; 0x35
     3ae:	3e a9       	ldd	r19, Y+54	; 0x36
     3b0:	4f a9       	ldd	r20, Y+55	; 0x37
     3b2:	58 ad       	ldd	r21, Y+56	; 0x38
     3b4:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     3b8:	c9 01       	movw	r24, r18
     3ba:	da 01       	movw	r26, r20
     3bc:	3c 01       	movw	r6, r24
     3be:	4d 01       	movw	r8, r26
     3c0:	c4 01       	movw	r24, r8
     3c2:	b3 01       	movw	r22, r6
     3c4:	29 ad       	ldd	r18, Y+57	; 0x39
     3c6:	3a ad       	ldd	r19, Y+58	; 0x3a
     3c8:	4b ad       	ldd	r20, Y+59	; 0x3b
     3ca:	5c ad       	ldd	r21, Y+60	; 0x3c
     3cc:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     3d0:	9b 01       	movw	r18, r22
     3d2:	ac 01       	movw	r20, r24
     3d4:	87 01       	movw	r16, r14
     3d6:	ff 24       	eor	r15, r15
     3d8:	ee 24       	eor	r14, r14
     3da:	ad a4       	ldd	r10, Y+45	; 0x2d
     3dc:	be a4       	ldd	r11, Y+46	; 0x2e
     3de:	cf a4       	ldd	r12, Y+47	; 0x2f
     3e0:	d8 a8       	ldd	r13, Y+48	; 0x30
     3e2:	c6 01       	movw	r24, r12
     3e4:	aa 27       	eor	r26, r26
     3e6:	bb 27       	eor	r27, r27
     3e8:	57 01       	movw	r10, r14
     3ea:	68 01       	movw	r12, r16
     3ec:	a8 2a       	or	r10, r24
     3ee:	b9 2a       	or	r11, r25
     3f0:	ca 2a       	or	r12, r26
     3f2:	db 2a       	or	r13, r27
     3f4:	a2 16       	cp	r10, r18
     3f6:	b3 06       	cpc	r11, r19
     3f8:	c4 06       	cpc	r12, r20
     3fa:	d5 06       	cpc	r13, r21
     3fc:	e0 f4       	brcc	.+56     	; 0x436 <__udivdi3+0x24e>
     3fe:	08 94       	sec
     400:	61 08       	sbc	r6, r1
     402:	71 08       	sbc	r7, r1
     404:	81 08       	sbc	r8, r1
     406:	91 08       	sbc	r9, r1
     408:	a2 0c       	add	r10, r2
     40a:	b3 1c       	adc	r11, r3
     40c:	c4 1c       	adc	r12, r4
     40e:	d5 1c       	adc	r13, r5
     410:	a2 14       	cp	r10, r2
     412:	b3 04       	cpc	r11, r3
     414:	c4 04       	cpc	r12, r4
     416:	d5 04       	cpc	r13, r5
     418:	70 f0       	brcs	.+28     	; 0x436 <__udivdi3+0x24e>
     41a:	a2 16       	cp	r10, r18
     41c:	b3 06       	cpc	r11, r19
     41e:	c4 06       	cpc	r12, r20
     420:	d5 06       	cpc	r13, r21
     422:	48 f4       	brcc	.+18     	; 0x436 <__udivdi3+0x24e>
     424:	08 94       	sec
     426:	61 08       	sbc	r6, r1
     428:	71 08       	sbc	r7, r1
     42a:	81 08       	sbc	r8, r1
     42c:	91 08       	sbc	r9, r1
     42e:	a2 0c       	add	r10, r2
     430:	b3 1c       	adc	r11, r3
     432:	c4 1c       	adc	r12, r4
     434:	d5 1c       	adc	r13, r5
     436:	a2 1a       	sub	r10, r18
     438:	b3 0a       	sbc	r11, r19
     43a:	c4 0a       	sbc	r12, r20
     43c:	d5 0a       	sbc	r13, r21
     43e:	c6 01       	movw	r24, r12
     440:	b5 01       	movw	r22, r10
     442:	2d a9       	ldd	r18, Y+53	; 0x35
     444:	3e a9       	ldd	r19, Y+54	; 0x36
     446:	4f a9       	ldd	r20, Y+55	; 0x37
     448:	58 ad       	ldd	r21, Y+56	; 0x38
     44a:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     44e:	7b 01       	movw	r14, r22
     450:	8c 01       	movw	r16, r24
     452:	c6 01       	movw	r24, r12
     454:	b5 01       	movw	r22, r10
     456:	2d a9       	ldd	r18, Y+53	; 0x35
     458:	3e a9       	ldd	r19, Y+54	; 0x36
     45a:	4f a9       	ldd	r20, Y+55	; 0x37
     45c:	58 ad       	ldd	r21, Y+56	; 0x38
     45e:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     462:	c9 01       	movw	r24, r18
     464:	da 01       	movw	r26, r20
     466:	5c 01       	movw	r10, r24
     468:	6d 01       	movw	r12, r26
     46a:	c6 01       	movw	r24, r12
     46c:	b5 01       	movw	r22, r10
     46e:	29 ad       	ldd	r18, Y+57	; 0x39
     470:	3a ad       	ldd	r19, Y+58	; 0x3a
     472:	4b ad       	ldd	r20, Y+59	; 0x3b
     474:	5c ad       	ldd	r21, Y+60	; 0x3c
     476:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     47a:	9b 01       	movw	r18, r22
     47c:	ac 01       	movw	r20, r24
     47e:	87 01       	movw	r16, r14
     480:	ff 24       	eor	r15, r15
     482:	ee 24       	eor	r14, r14
     484:	8d a5       	ldd	r24, Y+45	; 0x2d
     486:	9e a5       	ldd	r25, Y+46	; 0x2e
     488:	af a5       	ldd	r26, Y+47	; 0x2f
     48a:	b8 a9       	ldd	r27, Y+48	; 0x30
     48c:	a0 70       	andi	r26, 0x00	; 0
     48e:	b0 70       	andi	r27, 0x00	; 0
     490:	e8 2a       	or	r14, r24
     492:	f9 2a       	or	r15, r25
     494:	0a 2b       	or	r16, r26
     496:	1b 2b       	or	r17, r27
     498:	e2 16       	cp	r14, r18
     49a:	f3 06       	cpc	r15, r19
     49c:	04 07       	cpc	r16, r20
     49e:	15 07       	cpc	r17, r21
     4a0:	c0 f4       	brcc	.+48     	; 0x4d2 <__udivdi3+0x2ea>
     4a2:	08 94       	sec
     4a4:	a1 08       	sbc	r10, r1
     4a6:	b1 08       	sbc	r11, r1
     4a8:	c1 08       	sbc	r12, r1
     4aa:	d1 08       	sbc	r13, r1
     4ac:	e2 0c       	add	r14, r2
     4ae:	f3 1c       	adc	r15, r3
     4b0:	04 1d       	adc	r16, r4
     4b2:	15 1d       	adc	r17, r5
     4b4:	e2 14       	cp	r14, r2
     4b6:	f3 04       	cpc	r15, r3
     4b8:	04 05       	cpc	r16, r4
     4ba:	15 05       	cpc	r17, r5
     4bc:	50 f0       	brcs	.+20     	; 0x4d2 <__udivdi3+0x2ea>
     4be:	e2 16       	cp	r14, r18
     4c0:	f3 06       	cpc	r15, r19
     4c2:	04 07       	cpc	r16, r20
     4c4:	15 07       	cpc	r17, r21
     4c6:	28 f4       	brcc	.+10     	; 0x4d2 <__udivdi3+0x2ea>
     4c8:	08 94       	sec
     4ca:	a1 08       	sbc	r10, r1
     4cc:	b1 08       	sbc	r11, r1
     4ce:	c1 08       	sbc	r12, r1
     4d0:	d1 08       	sbc	r13, r1
     4d2:	d3 01       	movw	r26, r6
     4d4:	99 27       	eor	r25, r25
     4d6:	88 27       	eor	r24, r24
     4d8:	86 01       	movw	r16, r12
     4da:	75 01       	movw	r14, r10
     4dc:	e8 2a       	or	r14, r24
     4de:	f9 2a       	or	r15, r25
     4e0:	0a 2b       	or	r16, r26
     4e2:	1b 2b       	or	r17, r27
     4e4:	e9 aa       	std	Y+49, r14	; 0x31
     4e6:	fa aa       	std	Y+50, r15	; 0x32
     4e8:	0b ab       	std	Y+51, r16	; 0x33
     4ea:	1c ab       	std	Y+52, r17	; 0x34
     4ec:	cf c4       	rjmp	.+2462   	; 0xe8c <__stack+0x62d>
     4ee:	21 14       	cp	r2, r1
     4f0:	31 04       	cpc	r3, r1
     4f2:	41 04       	cpc	r4, r1
     4f4:	51 04       	cpc	r5, r1
     4f6:	71 f4       	brne	.+28     	; 0x514 <__udivdi3+0x32c>
     4f8:	61 e0       	ldi	r22, 0x01	; 1
     4fa:	70 e0       	ldi	r23, 0x00	; 0
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	40 e0       	ldi	r20, 0x00	; 0
     506:	50 e0       	ldi	r21, 0x00	; 0
     508:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     50c:	c9 01       	movw	r24, r18
     50e:	da 01       	movw	r26, r20
     510:	1c 01       	movw	r2, r24
     512:	2d 01       	movw	r4, r26
     514:	00 e0       	ldi	r16, 0x00	; 0
     516:	20 16       	cp	r2, r16
     518:	00 e0       	ldi	r16, 0x00	; 0
     51a:	30 06       	cpc	r3, r16
     51c:	01 e0       	ldi	r16, 0x01	; 1
     51e:	40 06       	cpc	r4, r16
     520:	00 e0       	ldi	r16, 0x00	; 0
     522:	50 06       	cpc	r5, r16
     524:	88 f4       	brcc	.+34     	; 0x548 <__udivdi3+0x360>
     526:	1f ef       	ldi	r17, 0xFF	; 255
     528:	21 16       	cp	r2, r17
     52a:	31 04       	cpc	r3, r1
     52c:	41 04       	cpc	r4, r1
     52e:	51 04       	cpc	r5, r1
     530:	31 f0       	breq	.+12     	; 0x53e <__udivdi3+0x356>
     532:	28 f0       	brcs	.+10     	; 0x53e <__udivdi3+0x356>
     534:	48 e0       	ldi	r20, 0x08	; 8
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	60 e0       	ldi	r22, 0x00	; 0
     53a:	70 e0       	ldi	r23, 0x00	; 0
     53c:	17 c0       	rjmp	.+46     	; 0x56c <__udivdi3+0x384>
     53e:	40 e0       	ldi	r20, 0x00	; 0
     540:	50 e0       	ldi	r21, 0x00	; 0
     542:	60 e0       	ldi	r22, 0x00	; 0
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	12 c0       	rjmp	.+36     	; 0x56c <__udivdi3+0x384>
     548:	20 e0       	ldi	r18, 0x00	; 0
     54a:	22 16       	cp	r2, r18
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	32 06       	cpc	r3, r18
     550:	20 e0       	ldi	r18, 0x00	; 0
     552:	42 06       	cpc	r4, r18
     554:	21 e0       	ldi	r18, 0x01	; 1
     556:	52 06       	cpc	r5, r18
     558:	28 f0       	brcs	.+10     	; 0x564 <__udivdi3+0x37c>
     55a:	48 e1       	ldi	r20, 0x18	; 24
     55c:	50 e0       	ldi	r21, 0x00	; 0
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	04 c0       	rjmp	.+8      	; 0x56c <__udivdi3+0x384>
     564:	40 e1       	ldi	r20, 0x10	; 16
     566:	50 e0       	ldi	r21, 0x00	; 0
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	70 e0       	ldi	r23, 0x00	; 0
     56c:	d2 01       	movw	r26, r4
     56e:	c1 01       	movw	r24, r2
     570:	04 2e       	mov	r0, r20
     572:	04 c0       	rjmp	.+8      	; 0x57c <__udivdi3+0x394>
     574:	b6 95       	lsr	r27
     576:	a7 95       	ror	r26
     578:	97 95       	ror	r25
     57a:	87 95       	ror	r24
     57c:	0a 94       	dec	r0
     57e:	d2 f7       	brpl	.-12     	; 0x574 <__udivdi3+0x38c>
     580:	82 59       	subi	r24, 0x92	; 146
     582:	9f 4f       	sbci	r25, 0xFF	; 255
     584:	dc 01       	movw	r26, r24
     586:	2c 91       	ld	r18, X
     588:	e0 e2       	ldi	r30, 0x20	; 32
     58a:	ee 2e       	mov	r14, r30
     58c:	f1 2c       	mov	r15, r1
     58e:	01 2d       	mov	r16, r1
     590:	11 2d       	mov	r17, r1
     592:	d8 01       	movw	r26, r16
     594:	c7 01       	movw	r24, r14
     596:	84 1b       	sub	r24, r20
     598:	95 0b       	sbc	r25, r21
     59a:	a6 0b       	sbc	r26, r22
     59c:	b7 0b       	sbc	r27, r23
     59e:	82 1b       	sub	r24, r18
     5a0:	91 09       	sbc	r25, r1
     5a2:	a1 09       	sbc	r26, r1
     5a4:	b1 09       	sbc	r27, r1
     5a6:	00 97       	sbiw	r24, 0x00	; 0
     5a8:	a1 05       	cpc	r26, r1
     5aa:	b1 05       	cpc	r27, r1
     5ac:	61 f4       	brne	.+24     	; 0x5c6 <__udivdi3+0x3de>
     5ae:	64 01       	movw	r12, r8
     5b0:	53 01       	movw	r10, r6
     5b2:	a2 18       	sub	r10, r2
     5b4:	b3 08       	sbc	r11, r3
     5b6:	c4 08       	sbc	r12, r4
     5b8:	d5 08       	sbc	r13, r5
     5ba:	31 e0       	ldi	r19, 0x01	; 1
     5bc:	63 2e       	mov	r6, r19
     5be:	71 2c       	mov	r7, r1
     5c0:	81 2c       	mov	r8, r1
     5c2:	91 2c       	mov	r9, r1
     5c4:	1e c1       	rjmp	.+572    	; 0x802 <__udivdi3+0x61a>
     5c6:	6f 96       	adiw	r28, 0x1f	; 31
     5c8:	8f af       	std	Y+63, r24	; 0x3f
     5ca:	6f 97       	sbiw	r28, 0x1f	; 31
     5cc:	08 2e       	mov	r0, r24
     5ce:	04 c0       	rjmp	.+8      	; 0x5d8 <__udivdi3+0x3f0>
     5d0:	22 0c       	add	r2, r2
     5d2:	33 1c       	adc	r3, r3
     5d4:	44 1c       	adc	r4, r4
     5d6:	55 1c       	adc	r5, r5
     5d8:	0a 94       	dec	r0
     5da:	d2 f7       	brpl	.-12     	; 0x5d0 <__udivdi3+0x3e8>
     5dc:	ee 2d       	mov	r30, r14
     5de:	e8 1b       	sub	r30, r24
     5e0:	64 01       	movw	r12, r8
     5e2:	53 01       	movw	r10, r6
     5e4:	0e 2e       	mov	r0, r30
     5e6:	04 c0       	rjmp	.+8      	; 0x5f0 <__udivdi3+0x408>
     5e8:	d6 94       	lsr	r13
     5ea:	c7 94       	ror	r12
     5ec:	b7 94       	ror	r11
     5ee:	a7 94       	ror	r10
     5f0:	0a 94       	dec	r0
     5f2:	d2 f7       	brpl	.-12     	; 0x5e8 <__udivdi3+0x400>
     5f4:	a4 01       	movw	r20, r8
     5f6:	93 01       	movw	r18, r6
     5f8:	6f 96       	adiw	r28, 0x1f	; 31
     5fa:	0f ac       	ldd	r0, Y+63	; 0x3f
     5fc:	6f 97       	sbiw	r28, 0x1f	; 31
     5fe:	04 c0       	rjmp	.+8      	; 0x608 <__udivdi3+0x420>
     600:	22 0f       	add	r18, r18
     602:	33 1f       	adc	r19, r19
     604:	44 1f       	adc	r20, r20
     606:	55 1f       	adc	r21, r21
     608:	0a 94       	dec	r0
     60a:	d2 f7       	brpl	.-12     	; 0x600 <__udivdi3+0x418>
     60c:	6d a4       	ldd	r6, Y+45	; 0x2d
     60e:	7e a4       	ldd	r7, Y+46	; 0x2e
     610:	8f a4       	ldd	r8, Y+47	; 0x2f
     612:	98 a8       	ldd	r9, Y+48	; 0x30
     614:	0e 2e       	mov	r0, r30
     616:	04 c0       	rjmp	.+8      	; 0x620 <__udivdi3+0x438>
     618:	96 94       	lsr	r9
     61a:	87 94       	ror	r8
     61c:	77 94       	ror	r7
     61e:	67 94       	ror	r6
     620:	0a 94       	dec	r0
     622:	d2 f7       	brpl	.-12     	; 0x618 <__udivdi3+0x430>
     624:	84 01       	movw	r16, r8
     626:	73 01       	movw	r14, r6
     628:	e2 2a       	or	r14, r18
     62a:	f3 2a       	or	r15, r19
     62c:	04 2b       	or	r16, r20
     62e:	15 2b       	or	r17, r21
     630:	e9 a6       	std	Y+41, r14	; 0x29
     632:	fa a6       	std	Y+42, r15	; 0x2a
     634:	0b a7       	std	Y+43, r16	; 0x2b
     636:	1c a7       	std	Y+44, r17	; 0x2c
     638:	32 01       	movw	r6, r4
     63a:	88 24       	eor	r8, r8
     63c:	99 24       	eor	r9, r9
     63e:	92 01       	movw	r18, r4
     640:	81 01       	movw	r16, r2
     642:	20 70       	andi	r18, 0x00	; 0
     644:	30 70       	andi	r19, 0x00	; 0
     646:	21 96       	adiw	r28, 0x01	; 1
     648:	0c af       	std	Y+60, r16	; 0x3c
     64a:	1d af       	std	Y+61, r17	; 0x3d
     64c:	2e af       	std	Y+62, r18	; 0x3e
     64e:	3f af       	std	Y+63, r19	; 0x3f
     650:	21 97       	sbiw	r28, 0x01	; 1
     652:	c6 01       	movw	r24, r12
     654:	b5 01       	movw	r22, r10
     656:	a4 01       	movw	r20, r8
     658:	93 01       	movw	r18, r6
     65a:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     65e:	7b 01       	movw	r14, r22
     660:	8c 01       	movw	r16, r24
     662:	c6 01       	movw	r24, r12
     664:	b5 01       	movw	r22, r10
     666:	a4 01       	movw	r20, r8
     668:	93 01       	movw	r18, r6
     66a:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     66e:	c9 01       	movw	r24, r18
     670:	da 01       	movw	r26, r20
     672:	25 96       	adiw	r28, 0x05	; 5
     674:	8c af       	std	Y+60, r24	; 0x3c
     676:	9d af       	std	Y+61, r25	; 0x3d
     678:	ae af       	std	Y+62, r26	; 0x3e
     67a:	bf af       	std	Y+63, r27	; 0x3f
     67c:	25 97       	sbiw	r28, 0x05	; 5
     67e:	bc 01       	movw	r22, r24
     680:	cd 01       	movw	r24, r26
     682:	21 96       	adiw	r28, 0x01	; 1
     684:	2c ad       	ldd	r18, Y+60	; 0x3c
     686:	3d ad       	ldd	r19, Y+61	; 0x3d
     688:	4e ad       	ldd	r20, Y+62	; 0x3e
     68a:	5f ad       	ldd	r21, Y+63	; 0x3f
     68c:	21 97       	sbiw	r28, 0x01	; 1
     68e:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     692:	9b 01       	movw	r18, r22
     694:	ac 01       	movw	r20, r24
     696:	87 01       	movw	r16, r14
     698:	ff 24       	eor	r15, r15
     69a:	ee 24       	eor	r14, r14
     69c:	a9 a4       	ldd	r10, Y+41	; 0x29
     69e:	ba a4       	ldd	r11, Y+42	; 0x2a
     6a0:	cb a4       	ldd	r12, Y+43	; 0x2b
     6a2:	dc a4       	ldd	r13, Y+44	; 0x2c
     6a4:	c6 01       	movw	r24, r12
     6a6:	aa 27       	eor	r26, r26
     6a8:	bb 27       	eor	r27, r27
     6aa:	5c 01       	movw	r10, r24
     6ac:	6d 01       	movw	r12, r26
     6ae:	ae 28       	or	r10, r14
     6b0:	bf 28       	or	r11, r15
     6b2:	c0 2a       	or	r12, r16
     6b4:	d1 2a       	or	r13, r17
     6b6:	a2 16       	cp	r10, r18
     6b8:	b3 06       	cpc	r11, r19
     6ba:	c4 06       	cpc	r12, r20
     6bc:	d5 06       	cpc	r13, r21
     6be:	60 f5       	brcc	.+88     	; 0x718 <__udivdi3+0x530>
     6c0:	25 96       	adiw	r28, 0x05	; 5
     6c2:	6c ad       	ldd	r22, Y+60	; 0x3c
     6c4:	7d ad       	ldd	r23, Y+61	; 0x3d
     6c6:	8e ad       	ldd	r24, Y+62	; 0x3e
     6c8:	9f ad       	ldd	r25, Y+63	; 0x3f
     6ca:	25 97       	sbiw	r28, 0x05	; 5
     6cc:	61 50       	subi	r22, 0x01	; 1
     6ce:	70 40       	sbci	r23, 0x00	; 0
     6d0:	80 40       	sbci	r24, 0x00	; 0
     6d2:	90 40       	sbci	r25, 0x00	; 0
     6d4:	25 96       	adiw	r28, 0x05	; 5
     6d6:	6c af       	std	Y+60, r22	; 0x3c
     6d8:	7d af       	std	Y+61, r23	; 0x3d
     6da:	8e af       	std	Y+62, r24	; 0x3e
     6dc:	9f af       	std	Y+63, r25	; 0x3f
     6de:	25 97       	sbiw	r28, 0x05	; 5
     6e0:	a2 0c       	add	r10, r2
     6e2:	b3 1c       	adc	r11, r3
     6e4:	c4 1c       	adc	r12, r4
     6e6:	d5 1c       	adc	r13, r5
     6e8:	a2 14       	cp	r10, r2
     6ea:	b3 04       	cpc	r11, r3
     6ec:	c4 04       	cpc	r12, r4
     6ee:	d5 04       	cpc	r13, r5
     6f0:	98 f0       	brcs	.+38     	; 0x718 <__udivdi3+0x530>
     6f2:	a2 16       	cp	r10, r18
     6f4:	b3 06       	cpc	r11, r19
     6f6:	c4 06       	cpc	r12, r20
     6f8:	d5 06       	cpc	r13, r21
     6fa:	70 f4       	brcc	.+28     	; 0x718 <__udivdi3+0x530>
     6fc:	61 50       	subi	r22, 0x01	; 1
     6fe:	70 40       	sbci	r23, 0x00	; 0
     700:	80 40       	sbci	r24, 0x00	; 0
     702:	90 40       	sbci	r25, 0x00	; 0
     704:	25 96       	adiw	r28, 0x05	; 5
     706:	6c af       	std	Y+60, r22	; 0x3c
     708:	7d af       	std	Y+61, r23	; 0x3d
     70a:	8e af       	std	Y+62, r24	; 0x3e
     70c:	9f af       	std	Y+63, r25	; 0x3f
     70e:	25 97       	sbiw	r28, 0x05	; 5
     710:	a2 0c       	add	r10, r2
     712:	b3 1c       	adc	r11, r3
     714:	c4 1c       	adc	r12, r4
     716:	d5 1c       	adc	r13, r5
     718:	a2 1a       	sub	r10, r18
     71a:	b3 0a       	sbc	r11, r19
     71c:	c4 0a       	sbc	r12, r20
     71e:	d5 0a       	sbc	r13, r21
     720:	c6 01       	movw	r24, r12
     722:	b5 01       	movw	r22, r10
     724:	a4 01       	movw	r20, r8
     726:	93 01       	movw	r18, r6
     728:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     72c:	7b 01       	movw	r14, r22
     72e:	8c 01       	movw	r16, r24
     730:	c6 01       	movw	r24, r12
     732:	b5 01       	movw	r22, r10
     734:	a4 01       	movw	r20, r8
     736:	93 01       	movw	r18, r6
     738:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     73c:	c9 01       	movw	r24, r18
     73e:	da 01       	movw	r26, r20
     740:	3c 01       	movw	r6, r24
     742:	4d 01       	movw	r8, r26
     744:	c4 01       	movw	r24, r8
     746:	b3 01       	movw	r22, r6
     748:	21 96       	adiw	r28, 0x01	; 1
     74a:	2c ad       	ldd	r18, Y+60	; 0x3c
     74c:	3d ad       	ldd	r19, Y+61	; 0x3d
     74e:	4e ad       	ldd	r20, Y+62	; 0x3e
     750:	5f ad       	ldd	r21, Y+63	; 0x3f
     752:	21 97       	sbiw	r28, 0x01	; 1
     754:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     758:	9b 01       	movw	r18, r22
     75a:	ac 01       	movw	r20, r24
     75c:	87 01       	movw	r16, r14
     75e:	ff 24       	eor	r15, r15
     760:	ee 24       	eor	r14, r14
     762:	89 a5       	ldd	r24, Y+41	; 0x29
     764:	9a a5       	ldd	r25, Y+42	; 0x2a
     766:	ab a5       	ldd	r26, Y+43	; 0x2b
     768:	bc a5       	ldd	r27, Y+44	; 0x2c
     76a:	a0 70       	andi	r26, 0x00	; 0
     76c:	b0 70       	andi	r27, 0x00	; 0
     76e:	57 01       	movw	r10, r14
     770:	68 01       	movw	r12, r16
     772:	a8 2a       	or	r10, r24
     774:	b9 2a       	or	r11, r25
     776:	ca 2a       	or	r12, r26
     778:	db 2a       	or	r13, r27
     77a:	a2 16       	cp	r10, r18
     77c:	b3 06       	cpc	r11, r19
     77e:	c4 06       	cpc	r12, r20
     780:	d5 06       	cpc	r13, r21
     782:	e0 f4       	brcc	.+56     	; 0x7bc <__udivdi3+0x5d4>
     784:	08 94       	sec
     786:	61 08       	sbc	r6, r1
     788:	71 08       	sbc	r7, r1
     78a:	81 08       	sbc	r8, r1
     78c:	91 08       	sbc	r9, r1
     78e:	a2 0c       	add	r10, r2
     790:	b3 1c       	adc	r11, r3
     792:	c4 1c       	adc	r12, r4
     794:	d5 1c       	adc	r13, r5
     796:	a2 14       	cp	r10, r2
     798:	b3 04       	cpc	r11, r3
     79a:	c4 04       	cpc	r12, r4
     79c:	d5 04       	cpc	r13, r5
     79e:	70 f0       	brcs	.+28     	; 0x7bc <__udivdi3+0x5d4>
     7a0:	a2 16       	cp	r10, r18
     7a2:	b3 06       	cpc	r11, r19
     7a4:	c4 06       	cpc	r12, r20
     7a6:	d5 06       	cpc	r13, r21
     7a8:	48 f4       	brcc	.+18     	; 0x7bc <__udivdi3+0x5d4>
     7aa:	08 94       	sec
     7ac:	61 08       	sbc	r6, r1
     7ae:	71 08       	sbc	r7, r1
     7b0:	81 08       	sbc	r8, r1
     7b2:	91 08       	sbc	r9, r1
     7b4:	a2 0c       	add	r10, r2
     7b6:	b3 1c       	adc	r11, r3
     7b8:	c4 1c       	adc	r12, r4
     7ba:	d5 1c       	adc	r13, r5
     7bc:	8d a5       	ldd	r24, Y+45	; 0x2d
     7be:	9e a5       	ldd	r25, Y+46	; 0x2e
     7c0:	af a5       	ldd	r26, Y+47	; 0x2f
     7c2:	b8 a9       	ldd	r27, Y+48	; 0x30
     7c4:	6f 96       	adiw	r28, 0x1f	; 31
     7c6:	0f ac       	ldd	r0, Y+63	; 0x3f
     7c8:	6f 97       	sbiw	r28, 0x1f	; 31
     7ca:	04 c0       	rjmp	.+8      	; 0x7d4 <__udivdi3+0x5ec>
     7cc:	88 0f       	add	r24, r24
     7ce:	99 1f       	adc	r25, r25
     7d0:	aa 1f       	adc	r26, r26
     7d2:	bb 1f       	adc	r27, r27
     7d4:	0a 94       	dec	r0
     7d6:	d2 f7       	brpl	.-12     	; 0x7cc <__udivdi3+0x5e4>
     7d8:	8d a7       	std	Y+45, r24	; 0x2d
     7da:	9e a7       	std	Y+46, r25	; 0x2e
     7dc:	af a7       	std	Y+47, r26	; 0x2f
     7de:	b8 ab       	std	Y+48, r27	; 0x30
     7e0:	a2 1a       	sub	r10, r18
     7e2:	b3 0a       	sbc	r11, r19
     7e4:	c4 0a       	sbc	r12, r20
     7e6:	d5 0a       	sbc	r13, r21
     7e8:	25 96       	adiw	r28, 0x05	; 5
     7ea:	ec ac       	ldd	r14, Y+60	; 0x3c
     7ec:	fd ac       	ldd	r15, Y+61	; 0x3d
     7ee:	0e ad       	ldd	r16, Y+62	; 0x3e
     7f0:	1f ad       	ldd	r17, Y+63	; 0x3f
     7f2:	25 97       	sbiw	r28, 0x05	; 5
     7f4:	d7 01       	movw	r26, r14
     7f6:	99 27       	eor	r25, r25
     7f8:	88 27       	eor	r24, r24
     7fa:	68 2a       	or	r6, r24
     7fc:	79 2a       	or	r7, r25
     7fe:	8a 2a       	or	r8, r26
     800:	9b 2a       	or	r9, r27
     802:	82 01       	movw	r16, r4
     804:	22 27       	eor	r18, r18
     806:	33 27       	eor	r19, r19
     808:	29 96       	adiw	r28, 0x09	; 9
     80a:	0c af       	std	Y+60, r16	; 0x3c
     80c:	1d af       	std	Y+61, r17	; 0x3d
     80e:	2e af       	std	Y+62, r18	; 0x3e
     810:	3f af       	std	Y+63, r19	; 0x3f
     812:	29 97       	sbiw	r28, 0x09	; 9
     814:	a2 01       	movw	r20, r4
     816:	91 01       	movw	r18, r2
     818:	40 70       	andi	r20, 0x00	; 0
     81a:	50 70       	andi	r21, 0x00	; 0
     81c:	2d 96       	adiw	r28, 0x0d	; 13
     81e:	2c af       	std	Y+60, r18	; 0x3c
     820:	3d af       	std	Y+61, r19	; 0x3d
     822:	4e af       	std	Y+62, r20	; 0x3e
     824:	5f af       	std	Y+63, r21	; 0x3f
     826:	2d 97       	sbiw	r28, 0x0d	; 13
     828:	c6 01       	movw	r24, r12
     82a:	b5 01       	movw	r22, r10
     82c:	29 96       	adiw	r28, 0x09	; 9
     82e:	2c ad       	ldd	r18, Y+60	; 0x3c
     830:	3d ad       	ldd	r19, Y+61	; 0x3d
     832:	4e ad       	ldd	r20, Y+62	; 0x3e
     834:	5f ad       	ldd	r21, Y+63	; 0x3f
     836:	29 97       	sbiw	r28, 0x09	; 9
     838:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     83c:	7b 01       	movw	r14, r22
     83e:	8c 01       	movw	r16, r24
     840:	c6 01       	movw	r24, r12
     842:	b5 01       	movw	r22, r10
     844:	29 96       	adiw	r28, 0x09	; 9
     846:	2c ad       	ldd	r18, Y+60	; 0x3c
     848:	3d ad       	ldd	r19, Y+61	; 0x3d
     84a:	4e ad       	ldd	r20, Y+62	; 0x3e
     84c:	5f ad       	ldd	r21, Y+63	; 0x3f
     84e:	29 97       	sbiw	r28, 0x09	; 9
     850:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     854:	c9 01       	movw	r24, r18
     856:	da 01       	movw	r26, r20
     858:	61 96       	adiw	r28, 0x11	; 17
     85a:	8c af       	std	Y+60, r24	; 0x3c
     85c:	9d af       	std	Y+61, r25	; 0x3d
     85e:	ae af       	std	Y+62, r26	; 0x3e
     860:	bf af       	std	Y+63, r27	; 0x3f
     862:	61 97       	sbiw	r28, 0x11	; 17
     864:	bc 01       	movw	r22, r24
     866:	cd 01       	movw	r24, r26
     868:	2d 96       	adiw	r28, 0x0d	; 13
     86a:	2c ad       	ldd	r18, Y+60	; 0x3c
     86c:	3d ad       	ldd	r19, Y+61	; 0x3d
     86e:	4e ad       	ldd	r20, Y+62	; 0x3e
     870:	5f ad       	ldd	r21, Y+63	; 0x3f
     872:	2d 97       	sbiw	r28, 0x0d	; 13
     874:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     878:	9b 01       	movw	r18, r22
     87a:	ac 01       	movw	r20, r24
     87c:	87 01       	movw	r16, r14
     87e:	ff 24       	eor	r15, r15
     880:	ee 24       	eor	r14, r14
     882:	ad a4       	ldd	r10, Y+45	; 0x2d
     884:	be a4       	ldd	r11, Y+46	; 0x2e
     886:	cf a4       	ldd	r12, Y+47	; 0x2f
     888:	d8 a8       	ldd	r13, Y+48	; 0x30
     88a:	c6 01       	movw	r24, r12
     88c:	aa 27       	eor	r26, r26
     88e:	bb 27       	eor	r27, r27
     890:	57 01       	movw	r10, r14
     892:	68 01       	movw	r12, r16
     894:	a8 2a       	or	r10, r24
     896:	b9 2a       	or	r11, r25
     898:	ca 2a       	or	r12, r26
     89a:	db 2a       	or	r13, r27
     89c:	a2 16       	cp	r10, r18
     89e:	b3 06       	cpc	r11, r19
     8a0:	c4 06       	cpc	r12, r20
     8a2:	d5 06       	cpc	r13, r21
     8a4:	60 f5       	brcc	.+88     	; 0x8fe <__stack+0x9f>
     8a6:	61 96       	adiw	r28, 0x11	; 17
     8a8:	6c ad       	ldd	r22, Y+60	; 0x3c
     8aa:	7d ad       	ldd	r23, Y+61	; 0x3d
     8ac:	8e ad       	ldd	r24, Y+62	; 0x3e
     8ae:	9f ad       	ldd	r25, Y+63	; 0x3f
     8b0:	61 97       	sbiw	r28, 0x11	; 17
     8b2:	61 50       	subi	r22, 0x01	; 1
     8b4:	70 40       	sbci	r23, 0x00	; 0
     8b6:	80 40       	sbci	r24, 0x00	; 0
     8b8:	90 40       	sbci	r25, 0x00	; 0
     8ba:	61 96       	adiw	r28, 0x11	; 17
     8bc:	6c af       	std	Y+60, r22	; 0x3c
     8be:	7d af       	std	Y+61, r23	; 0x3d
     8c0:	8e af       	std	Y+62, r24	; 0x3e
     8c2:	9f af       	std	Y+63, r25	; 0x3f
     8c4:	61 97       	sbiw	r28, 0x11	; 17
     8c6:	a2 0c       	add	r10, r2
     8c8:	b3 1c       	adc	r11, r3
     8ca:	c4 1c       	adc	r12, r4
     8cc:	d5 1c       	adc	r13, r5
     8ce:	a2 14       	cp	r10, r2
     8d0:	b3 04       	cpc	r11, r3
     8d2:	c4 04       	cpc	r12, r4
     8d4:	d5 04       	cpc	r13, r5
     8d6:	98 f0       	brcs	.+38     	; 0x8fe <__stack+0x9f>
     8d8:	a2 16       	cp	r10, r18
     8da:	b3 06       	cpc	r11, r19
     8dc:	c4 06       	cpc	r12, r20
     8de:	d5 06       	cpc	r13, r21
     8e0:	70 f4       	brcc	.+28     	; 0x8fe <__stack+0x9f>
     8e2:	61 50       	subi	r22, 0x01	; 1
     8e4:	70 40       	sbci	r23, 0x00	; 0
     8e6:	80 40       	sbci	r24, 0x00	; 0
     8e8:	90 40       	sbci	r25, 0x00	; 0
     8ea:	61 96       	adiw	r28, 0x11	; 17
     8ec:	6c af       	std	Y+60, r22	; 0x3c
     8ee:	7d af       	std	Y+61, r23	; 0x3d
     8f0:	8e af       	std	Y+62, r24	; 0x3e
     8f2:	9f af       	std	Y+63, r25	; 0x3f
     8f4:	61 97       	sbiw	r28, 0x11	; 17
     8f6:	a2 0c       	add	r10, r2
     8f8:	b3 1c       	adc	r11, r3
     8fa:	c4 1c       	adc	r12, r4
     8fc:	d5 1c       	adc	r13, r5
     8fe:	a2 1a       	sub	r10, r18
     900:	b3 0a       	sbc	r11, r19
     902:	c4 0a       	sbc	r12, r20
     904:	d5 0a       	sbc	r13, r21
     906:	c6 01       	movw	r24, r12
     908:	b5 01       	movw	r22, r10
     90a:	29 96       	adiw	r28, 0x09	; 9
     90c:	2c ad       	ldd	r18, Y+60	; 0x3c
     90e:	3d ad       	ldd	r19, Y+61	; 0x3d
     910:	4e ad       	ldd	r20, Y+62	; 0x3e
     912:	5f ad       	ldd	r21, Y+63	; 0x3f
     914:	29 97       	sbiw	r28, 0x09	; 9
     916:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     91a:	7b 01       	movw	r14, r22
     91c:	8c 01       	movw	r16, r24
     91e:	c6 01       	movw	r24, r12
     920:	b5 01       	movw	r22, r10
     922:	29 96       	adiw	r28, 0x09	; 9
     924:	2c ad       	ldd	r18, Y+60	; 0x3c
     926:	3d ad       	ldd	r19, Y+61	; 0x3d
     928:	4e ad       	ldd	r20, Y+62	; 0x3e
     92a:	5f ad       	ldd	r21, Y+63	; 0x3f
     92c:	29 97       	sbiw	r28, 0x09	; 9
     92e:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     932:	c9 01       	movw	r24, r18
     934:	da 01       	movw	r26, r20
     936:	5c 01       	movw	r10, r24
     938:	6d 01       	movw	r12, r26
     93a:	c6 01       	movw	r24, r12
     93c:	b5 01       	movw	r22, r10
     93e:	2d 96       	adiw	r28, 0x0d	; 13
     940:	2c ad       	ldd	r18, Y+60	; 0x3c
     942:	3d ad       	ldd	r19, Y+61	; 0x3d
     944:	4e ad       	ldd	r20, Y+62	; 0x3e
     946:	5f ad       	ldd	r21, Y+63	; 0x3f
     948:	2d 97       	sbiw	r28, 0x0d	; 13
     94a:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     94e:	9b 01       	movw	r18, r22
     950:	ac 01       	movw	r20, r24
     952:	87 01       	movw	r16, r14
     954:	ff 24       	eor	r15, r15
     956:	ee 24       	eor	r14, r14
     958:	8d a5       	ldd	r24, Y+45	; 0x2d
     95a:	9e a5       	ldd	r25, Y+46	; 0x2e
     95c:	af a5       	ldd	r26, Y+47	; 0x2f
     95e:	b8 a9       	ldd	r27, Y+48	; 0x30
     960:	a0 70       	andi	r26, 0x00	; 0
     962:	b0 70       	andi	r27, 0x00	; 0
     964:	e8 2a       	or	r14, r24
     966:	f9 2a       	or	r15, r25
     968:	0a 2b       	or	r16, r26
     96a:	1b 2b       	or	r17, r27
     96c:	e2 16       	cp	r14, r18
     96e:	f3 06       	cpc	r15, r19
     970:	04 07       	cpc	r16, r20
     972:	15 07       	cpc	r17, r21
     974:	c0 f4       	brcc	.+48     	; 0x9a6 <__stack+0x147>
     976:	08 94       	sec
     978:	a1 08       	sbc	r10, r1
     97a:	b1 08       	sbc	r11, r1
     97c:	c1 08       	sbc	r12, r1
     97e:	d1 08       	sbc	r13, r1
     980:	e2 0c       	add	r14, r2
     982:	f3 1c       	adc	r15, r3
     984:	04 1d       	adc	r16, r4
     986:	15 1d       	adc	r17, r5
     988:	e2 14       	cp	r14, r2
     98a:	f3 04       	cpc	r15, r3
     98c:	04 05       	cpc	r16, r4
     98e:	15 05       	cpc	r17, r5
     990:	50 f0       	brcs	.+20     	; 0x9a6 <__stack+0x147>
     992:	e2 16       	cp	r14, r18
     994:	f3 06       	cpc	r15, r19
     996:	04 07       	cpc	r16, r20
     998:	15 07       	cpc	r17, r21
     99a:	28 f4       	brcc	.+10     	; 0x9a6 <__stack+0x147>
     99c:	08 94       	sec
     99e:	a1 08       	sbc	r10, r1
     9a0:	b1 08       	sbc	r11, r1
     9a2:	c1 08       	sbc	r12, r1
     9a4:	d1 08       	sbc	r13, r1
     9a6:	61 96       	adiw	r28, 0x11	; 17
     9a8:	ec ac       	ldd	r14, Y+60	; 0x3c
     9aa:	fd ac       	ldd	r15, Y+61	; 0x3d
     9ac:	0e ad       	ldd	r16, Y+62	; 0x3e
     9ae:	1f ad       	ldd	r17, Y+63	; 0x3f
     9b0:	61 97       	sbiw	r28, 0x11	; 17
     9b2:	d7 01       	movw	r26, r14
     9b4:	99 27       	eor	r25, r25
     9b6:	88 27       	eor	r24, r24
     9b8:	96 01       	movw	r18, r12
     9ba:	85 01       	movw	r16, r10
     9bc:	08 2b       	or	r16, r24
     9be:	19 2b       	or	r17, r25
     9c0:	2a 2b       	or	r18, r26
     9c2:	3b 2b       	or	r19, r27
     9c4:	09 ab       	std	Y+49, r16	; 0x31
     9c6:	1a ab       	std	Y+50, r17	; 0x32
     9c8:	2b ab       	std	Y+51, r18	; 0x33
     9ca:	3c ab       	std	Y+52, r19	; 0x34
     9cc:	62 c2       	rjmp	.+1220   	; 0xe92 <__stack+0x633>
     9ce:	6e 14       	cp	r6, r14
     9d0:	7f 04       	cpc	r7, r15
     9d2:	80 06       	cpc	r8, r16
     9d4:	91 06       	cpc	r9, r17
     9d6:	08 f4       	brcc	.+2      	; 0x9da <__stack+0x17b>
     9d8:	51 c2       	rjmp	.+1186   	; 0xe7c <__stack+0x61d>
     9da:	20 e0       	ldi	r18, 0x00	; 0
     9dc:	e2 16       	cp	r14, r18
     9de:	20 e0       	ldi	r18, 0x00	; 0
     9e0:	f2 06       	cpc	r15, r18
     9e2:	21 e0       	ldi	r18, 0x01	; 1
     9e4:	02 07       	cpc	r16, r18
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	12 07       	cpc	r17, r18
     9ea:	88 f4       	brcc	.+34     	; 0xa0e <__stack+0x1af>
     9ec:	3f ef       	ldi	r19, 0xFF	; 255
     9ee:	e3 16       	cp	r14, r19
     9f0:	f1 04       	cpc	r15, r1
     9f2:	01 05       	cpc	r16, r1
     9f4:	11 05       	cpc	r17, r1
     9f6:	31 f0       	breq	.+12     	; 0xa04 <__stack+0x1a5>
     9f8:	28 f0       	brcs	.+10     	; 0xa04 <__stack+0x1a5>
     9fa:	48 e0       	ldi	r20, 0x08	; 8
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	60 e0       	ldi	r22, 0x00	; 0
     a00:	70 e0       	ldi	r23, 0x00	; 0
     a02:	17 c0       	rjmp	.+46     	; 0xa32 <__stack+0x1d3>
     a04:	40 e0       	ldi	r20, 0x00	; 0
     a06:	50 e0       	ldi	r21, 0x00	; 0
     a08:	60 e0       	ldi	r22, 0x00	; 0
     a0a:	70 e0       	ldi	r23, 0x00	; 0
     a0c:	12 c0       	rjmp	.+36     	; 0xa32 <__stack+0x1d3>
     a0e:	40 e0       	ldi	r20, 0x00	; 0
     a10:	e4 16       	cp	r14, r20
     a12:	40 e0       	ldi	r20, 0x00	; 0
     a14:	f4 06       	cpc	r15, r20
     a16:	40 e0       	ldi	r20, 0x00	; 0
     a18:	04 07       	cpc	r16, r20
     a1a:	41 e0       	ldi	r20, 0x01	; 1
     a1c:	14 07       	cpc	r17, r20
     a1e:	28 f0       	brcs	.+10     	; 0xa2a <__stack+0x1cb>
     a20:	48 e1       	ldi	r20, 0x18	; 24
     a22:	50 e0       	ldi	r21, 0x00	; 0
     a24:	60 e0       	ldi	r22, 0x00	; 0
     a26:	70 e0       	ldi	r23, 0x00	; 0
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <__stack+0x1d3>
     a2a:	40 e1       	ldi	r20, 0x10	; 16
     a2c:	50 e0       	ldi	r21, 0x00	; 0
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	d8 01       	movw	r26, r16
     a34:	c7 01       	movw	r24, r14
     a36:	04 2e       	mov	r0, r20
     a38:	04 c0       	rjmp	.+8      	; 0xa42 <__stack+0x1e3>
     a3a:	b6 95       	lsr	r27
     a3c:	a7 95       	ror	r26
     a3e:	97 95       	ror	r25
     a40:	87 95       	ror	r24
     a42:	0a 94       	dec	r0
     a44:	d2 f7       	brpl	.-12     	; 0xa3a <__stack+0x1db>
     a46:	82 59       	subi	r24, 0x92	; 146
     a48:	9f 4f       	sbci	r25, 0xFF	; 255
     a4a:	dc 01       	movw	r26, r24
     a4c:	2c 91       	ld	r18, X
     a4e:	30 e2       	ldi	r19, 0x20	; 32
     a50:	a3 2e       	mov	r10, r19
     a52:	b1 2c       	mov	r11, r1
     a54:	c1 2c       	mov	r12, r1
     a56:	d1 2c       	mov	r13, r1
     a58:	d6 01       	movw	r26, r12
     a5a:	c5 01       	movw	r24, r10
     a5c:	84 1b       	sub	r24, r20
     a5e:	95 0b       	sbc	r25, r21
     a60:	a6 0b       	sbc	r26, r22
     a62:	b7 0b       	sbc	r27, r23
     a64:	82 1b       	sub	r24, r18
     a66:	91 09       	sbc	r25, r1
     a68:	a1 09       	sbc	r26, r1
     a6a:	b1 09       	sbc	r27, r1
     a6c:	00 97       	sbiw	r24, 0x00	; 0
     a6e:	a1 05       	cpc	r26, r1
     a70:	b1 05       	cpc	r27, r1
     a72:	89 f4       	brne	.+34     	; 0xa96 <__stack+0x237>
     a74:	e6 14       	cp	r14, r6
     a76:	f7 04       	cpc	r15, r7
     a78:	08 05       	cpc	r16, r8
     a7a:	19 05       	cpc	r17, r9
     a7c:	08 f4       	brcc	.+2      	; 0xa80 <__stack+0x221>
     a7e:	f2 c1       	rjmp	.+996    	; 0xe64 <__stack+0x605>
     a80:	6d a4       	ldd	r6, Y+45	; 0x2d
     a82:	7e a4       	ldd	r7, Y+46	; 0x2e
     a84:	8f a4       	ldd	r8, Y+47	; 0x2f
     a86:	98 a8       	ldd	r9, Y+48	; 0x30
     a88:	62 14       	cp	r6, r2
     a8a:	73 04       	cpc	r7, r3
     a8c:	84 04       	cpc	r8, r4
     a8e:	95 04       	cpc	r9, r5
     a90:	08 f0       	brcs	.+2      	; 0xa94 <__stack+0x235>
     a92:	e8 c1       	rjmp	.+976    	; 0xe64 <__stack+0x605>
     a94:	f3 c1       	rjmp	.+998    	; 0xe7c <__stack+0x61d>
     a96:	6e 96       	adiw	r28, 0x1e	; 30
     a98:	8f af       	std	Y+63, r24	; 0x3f
     a9a:	6e 97       	sbiw	r28, 0x1e	; 30
     a9c:	08 2e       	mov	r0, r24
     a9e:	04 c0       	rjmp	.+8      	; 0xaa8 <__stack+0x249>
     aa0:	ee 0c       	add	r14, r14
     aa2:	ff 1c       	adc	r15, r15
     aa4:	00 1f       	adc	r16, r16
     aa6:	11 1f       	adc	r17, r17
     aa8:	0a 94       	dec	r0
     aaa:	d2 f7       	brpl	.-12     	; 0xaa0 <__stack+0x241>
     aac:	6a 2d       	mov	r22, r10
     aae:	68 1b       	sub	r22, r24
     ab0:	d2 01       	movw	r26, r4
     ab2:	c1 01       	movw	r24, r2
     ab4:	06 2e       	mov	r0, r22
     ab6:	04 c0       	rjmp	.+8      	; 0xac0 <__stack+0x261>
     ab8:	b6 95       	lsr	r27
     aba:	a7 95       	ror	r26
     abc:	97 95       	ror	r25
     abe:	87 95       	ror	r24
     ac0:	0a 94       	dec	r0
     ac2:	d2 f7       	brpl	.-12     	; 0xab8 <__stack+0x259>
     ac4:	5c 01       	movw	r10, r24
     ac6:	6d 01       	movw	r12, r26
     ac8:	ae 28       	or	r10, r14
     aca:	bf 28       	or	r11, r15
     acc:	c0 2a       	or	r12, r16
     ace:	d1 2a       	or	r13, r17
     ad0:	ad a2       	std	Y+37, r10	; 0x25
     ad2:	be a2       	std	Y+38, r11	; 0x26
     ad4:	cf a2       	std	Y+39, r12	; 0x27
     ad6:	d8 a6       	std	Y+40, r13	; 0x28
     ad8:	72 01       	movw	r14, r4
     ada:	61 01       	movw	r12, r2
     adc:	6e 96       	adiw	r28, 0x1e	; 30
     ade:	0f ac       	ldd	r0, Y+63	; 0x3f
     ae0:	6e 97       	sbiw	r28, 0x1e	; 30
     ae2:	04 c0       	rjmp	.+8      	; 0xaec <__stack+0x28d>
     ae4:	cc 0c       	add	r12, r12
     ae6:	dd 1c       	adc	r13, r13
     ae8:	ee 1c       	adc	r14, r14
     aea:	ff 1c       	adc	r15, r15
     aec:	0a 94       	dec	r0
     aee:	d2 f7       	brpl	.-12     	; 0xae4 <__stack+0x285>
     af0:	c9 a2       	std	Y+33, r12	; 0x21
     af2:	da a2       	std	Y+34, r13	; 0x22
     af4:	eb a2       	std	Y+35, r14	; 0x23
     af6:	fc a2       	std	Y+36, r15	; 0x24
     af8:	64 01       	movw	r12, r8
     afa:	53 01       	movw	r10, r6
     afc:	06 2e       	mov	r0, r22
     afe:	04 c0       	rjmp	.+8      	; 0xb08 <__stack+0x2a9>
     b00:	d6 94       	lsr	r13
     b02:	c7 94       	ror	r12
     b04:	b7 94       	ror	r11
     b06:	a7 94       	ror	r10
     b08:	0a 94       	dec	r0
     b0a:	d2 f7       	brpl	.-12     	; 0xb00 <__stack+0x2a1>
     b0c:	d4 01       	movw	r26, r8
     b0e:	c3 01       	movw	r24, r6
     b10:	6e 96       	adiw	r28, 0x1e	; 30
     b12:	0f ac       	ldd	r0, Y+63	; 0x3f
     b14:	6e 97       	sbiw	r28, 0x1e	; 30
     b16:	04 c0       	rjmp	.+8      	; 0xb20 <__stack+0x2c1>
     b18:	88 0f       	add	r24, r24
     b1a:	99 1f       	adc	r25, r25
     b1c:	aa 1f       	adc	r26, r26
     b1e:	bb 1f       	adc	r27, r27
     b20:	0a 94       	dec	r0
     b22:	d2 f7       	brpl	.-12     	; 0xb18 <__stack+0x2b9>
     b24:	ed a4       	ldd	r14, Y+45	; 0x2d
     b26:	fe a4       	ldd	r15, Y+46	; 0x2e
     b28:	0f a5       	ldd	r16, Y+47	; 0x2f
     b2a:	18 a9       	ldd	r17, Y+48	; 0x30
     b2c:	04 c0       	rjmp	.+8      	; 0xb36 <__stack+0x2d7>
     b2e:	16 95       	lsr	r17
     b30:	07 95       	ror	r16
     b32:	f7 94       	ror	r15
     b34:	e7 94       	ror	r14
     b36:	6a 95       	dec	r22
     b38:	d2 f7       	brpl	.-12     	; 0xb2e <__stack+0x2cf>
     b3a:	37 01       	movw	r6, r14
     b3c:	48 01       	movw	r8, r16
     b3e:	68 2a       	or	r6, r24
     b40:	79 2a       	or	r7, r25
     b42:	8a 2a       	or	r8, r26
     b44:	9b 2a       	or	r9, r27
     b46:	6d 8e       	std	Y+29, r6	; 0x1d
     b48:	7e 8e       	std	Y+30, r7	; 0x1e
     b4a:	8f 8e       	std	Y+31, r8	; 0x1f
     b4c:	98 a2       	std	Y+32, r9	; 0x20
     b4e:	ed a0       	ldd	r14, Y+37	; 0x25
     b50:	fe a0       	ldd	r15, Y+38	; 0x26
     b52:	0f a1       	ldd	r16, Y+39	; 0x27
     b54:	18 a5       	ldd	r17, Y+40	; 0x28
     b56:	38 01       	movw	r6, r16
     b58:	88 24       	eor	r8, r8
     b5a:	99 24       	eor	r9, r9
     b5c:	98 01       	movw	r18, r16
     b5e:	87 01       	movw	r16, r14
     b60:	20 70       	andi	r18, 0x00	; 0
     b62:	30 70       	andi	r19, 0x00	; 0
     b64:	65 96       	adiw	r28, 0x15	; 21
     b66:	0c af       	std	Y+60, r16	; 0x3c
     b68:	1d af       	std	Y+61, r17	; 0x3d
     b6a:	2e af       	std	Y+62, r18	; 0x3e
     b6c:	3f af       	std	Y+63, r19	; 0x3f
     b6e:	65 97       	sbiw	r28, 0x15	; 21
     b70:	c6 01       	movw	r24, r12
     b72:	b5 01       	movw	r22, r10
     b74:	a4 01       	movw	r20, r8
     b76:	93 01       	movw	r18, r6
     b78:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     b7c:	7b 01       	movw	r14, r22
     b7e:	8c 01       	movw	r16, r24
     b80:	c6 01       	movw	r24, r12
     b82:	b5 01       	movw	r22, r10
     b84:	a4 01       	movw	r20, r8
     b86:	93 01       	movw	r18, r6
     b88:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     b8c:	c9 01       	movw	r24, r18
     b8e:	da 01       	movw	r26, r20
     b90:	1c 01       	movw	r2, r24
     b92:	2d 01       	movw	r4, r26
     b94:	c2 01       	movw	r24, r4
     b96:	b1 01       	movw	r22, r2
     b98:	65 96       	adiw	r28, 0x15	; 21
     b9a:	2c ad       	ldd	r18, Y+60	; 0x3c
     b9c:	3d ad       	ldd	r19, Y+61	; 0x3d
     b9e:	4e ad       	ldd	r20, Y+62	; 0x3e
     ba0:	5f ad       	ldd	r21, Y+63	; 0x3f
     ba2:	65 97       	sbiw	r28, 0x15	; 21
     ba4:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     ba8:	9b 01       	movw	r18, r22
     baa:	ac 01       	movw	r20, r24
     bac:	87 01       	movw	r16, r14
     bae:	ff 24       	eor	r15, r15
     bb0:	ee 24       	eor	r14, r14
     bb2:	ad 8c       	ldd	r10, Y+29	; 0x1d
     bb4:	be 8c       	ldd	r11, Y+30	; 0x1e
     bb6:	cf 8c       	ldd	r12, Y+31	; 0x1f
     bb8:	d8 a0       	ldd	r13, Y+32	; 0x20
     bba:	c6 01       	movw	r24, r12
     bbc:	aa 27       	eor	r26, r26
     bbe:	bb 27       	eor	r27, r27
     bc0:	57 01       	movw	r10, r14
     bc2:	68 01       	movw	r12, r16
     bc4:	a8 2a       	or	r10, r24
     bc6:	b9 2a       	or	r11, r25
     bc8:	ca 2a       	or	r12, r26
     bca:	db 2a       	or	r13, r27
     bcc:	a2 16       	cp	r10, r18
     bce:	b3 06       	cpc	r11, r19
     bd0:	c4 06       	cpc	r12, r20
     bd2:	d5 06       	cpc	r13, r21
     bd4:	00 f5       	brcc	.+64     	; 0xc16 <__stack+0x3b7>
     bd6:	08 94       	sec
     bd8:	21 08       	sbc	r2, r1
     bda:	31 08       	sbc	r3, r1
     bdc:	41 08       	sbc	r4, r1
     bde:	51 08       	sbc	r5, r1
     be0:	ed a0       	ldd	r14, Y+37	; 0x25
     be2:	fe a0       	ldd	r15, Y+38	; 0x26
     be4:	0f a1       	ldd	r16, Y+39	; 0x27
     be6:	18 a5       	ldd	r17, Y+40	; 0x28
     be8:	ae 0c       	add	r10, r14
     bea:	bf 1c       	adc	r11, r15
     bec:	c0 1e       	adc	r12, r16
     bee:	d1 1e       	adc	r13, r17
     bf0:	ae 14       	cp	r10, r14
     bf2:	bf 04       	cpc	r11, r15
     bf4:	c0 06       	cpc	r12, r16
     bf6:	d1 06       	cpc	r13, r17
     bf8:	70 f0       	brcs	.+28     	; 0xc16 <__stack+0x3b7>
     bfa:	a2 16       	cp	r10, r18
     bfc:	b3 06       	cpc	r11, r19
     bfe:	c4 06       	cpc	r12, r20
     c00:	d5 06       	cpc	r13, r21
     c02:	48 f4       	brcc	.+18     	; 0xc16 <__stack+0x3b7>
     c04:	08 94       	sec
     c06:	21 08       	sbc	r2, r1
     c08:	31 08       	sbc	r3, r1
     c0a:	41 08       	sbc	r4, r1
     c0c:	51 08       	sbc	r5, r1
     c0e:	ae 0c       	add	r10, r14
     c10:	bf 1c       	adc	r11, r15
     c12:	c0 1e       	adc	r12, r16
     c14:	d1 1e       	adc	r13, r17
     c16:	a2 1a       	sub	r10, r18
     c18:	b3 0a       	sbc	r11, r19
     c1a:	c4 0a       	sbc	r12, r20
     c1c:	d5 0a       	sbc	r13, r21
     c1e:	c6 01       	movw	r24, r12
     c20:	b5 01       	movw	r22, r10
     c22:	a4 01       	movw	r20, r8
     c24:	93 01       	movw	r18, r6
     c26:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     c2a:	7b 01       	movw	r14, r22
     c2c:	8c 01       	movw	r16, r24
     c2e:	c6 01       	movw	r24, r12
     c30:	b5 01       	movw	r22, r10
     c32:	a4 01       	movw	r20, r8
     c34:	93 01       	movw	r18, r6
     c36:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
     c3a:	c9 01       	movw	r24, r18
     c3c:	da 01       	movw	r26, r20
     c3e:	3c 01       	movw	r6, r24
     c40:	4d 01       	movw	r8, r26
     c42:	c4 01       	movw	r24, r8
     c44:	b3 01       	movw	r22, r6
     c46:	65 96       	adiw	r28, 0x15	; 21
     c48:	2c ad       	ldd	r18, Y+60	; 0x3c
     c4a:	3d ad       	ldd	r19, Y+61	; 0x3d
     c4c:	4e ad       	ldd	r20, Y+62	; 0x3e
     c4e:	5f ad       	ldd	r21, Y+63	; 0x3f
     c50:	65 97       	sbiw	r28, 0x15	; 21
     c52:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     c56:	9b 01       	movw	r18, r22
     c58:	ac 01       	movw	r20, r24
     c5a:	87 01       	movw	r16, r14
     c5c:	ff 24       	eor	r15, r15
     c5e:	ee 24       	eor	r14, r14
     c60:	8d 8d       	ldd	r24, Y+29	; 0x1d
     c62:	9e 8d       	ldd	r25, Y+30	; 0x1e
     c64:	af 8d       	ldd	r26, Y+31	; 0x1f
     c66:	b8 a1       	ldd	r27, Y+32	; 0x20
     c68:	a0 70       	andi	r26, 0x00	; 0
     c6a:	b0 70       	andi	r27, 0x00	; 0
     c6c:	57 01       	movw	r10, r14
     c6e:	68 01       	movw	r12, r16
     c70:	a8 2a       	or	r10, r24
     c72:	b9 2a       	or	r11, r25
     c74:	ca 2a       	or	r12, r26
     c76:	db 2a       	or	r13, r27
     c78:	a2 16       	cp	r10, r18
     c7a:	b3 06       	cpc	r11, r19
     c7c:	c4 06       	cpc	r12, r20
     c7e:	d5 06       	cpc	r13, r21
     c80:	00 f5       	brcc	.+64     	; 0xcc2 <__stack+0x463>
     c82:	08 94       	sec
     c84:	61 08       	sbc	r6, r1
     c86:	71 08       	sbc	r7, r1
     c88:	81 08       	sbc	r8, r1
     c8a:	91 08       	sbc	r9, r1
     c8c:	6d a1       	ldd	r22, Y+37	; 0x25
     c8e:	7e a1       	ldd	r23, Y+38	; 0x26
     c90:	8f a1       	ldd	r24, Y+39	; 0x27
     c92:	98 a5       	ldd	r25, Y+40	; 0x28
     c94:	a6 0e       	add	r10, r22
     c96:	b7 1e       	adc	r11, r23
     c98:	c8 1e       	adc	r12, r24
     c9a:	d9 1e       	adc	r13, r25
     c9c:	a6 16       	cp	r10, r22
     c9e:	b7 06       	cpc	r11, r23
     ca0:	c8 06       	cpc	r12, r24
     ca2:	d9 06       	cpc	r13, r25
     ca4:	70 f0       	brcs	.+28     	; 0xcc2 <__stack+0x463>
     ca6:	a2 16       	cp	r10, r18
     ca8:	b3 06       	cpc	r11, r19
     caa:	c4 06       	cpc	r12, r20
     cac:	d5 06       	cpc	r13, r21
     cae:	48 f4       	brcc	.+18     	; 0xcc2 <__stack+0x463>
     cb0:	08 94       	sec
     cb2:	61 08       	sbc	r6, r1
     cb4:	71 08       	sbc	r7, r1
     cb6:	81 08       	sbc	r8, r1
     cb8:	91 08       	sbc	r9, r1
     cba:	a6 0e       	add	r10, r22
     cbc:	b7 1e       	adc	r11, r23
     cbe:	c8 1e       	adc	r12, r24
     cc0:	d9 1e       	adc	r13, r25
     cc2:	d6 01       	movw	r26, r12
     cc4:	c5 01       	movw	r24, r10
     cc6:	82 1b       	sub	r24, r18
     cc8:	93 0b       	sbc	r25, r19
     cca:	a4 0b       	sbc	r26, r20
     ccc:	b5 0b       	sbc	r27, r21
     cce:	89 8f       	std	Y+25, r24	; 0x19
     cd0:	9a 8f       	std	Y+26, r25	; 0x1a
     cd2:	ab 8f       	std	Y+27, r26	; 0x1b
     cd4:	bc 8f       	std	Y+28, r27	; 0x1c
     cd6:	d1 01       	movw	r26, r2
     cd8:	99 27       	eor	r25, r25
     cda:	88 27       	eor	r24, r24
     cdc:	64 01       	movw	r12, r8
     cde:	53 01       	movw	r10, r6
     ce0:	a8 2a       	or	r10, r24
     ce2:	b9 2a       	or	r11, r25
     ce4:	ca 2a       	or	r12, r26
     ce6:	db 2a       	or	r13, r27
     ce8:	a9 aa       	std	Y+49, r10	; 0x31
     cea:	ba aa       	std	Y+50, r11	; 0x32
     cec:	cb aa       	std	Y+51, r12	; 0x33
     cee:	dc aa       	std	Y+52, r13	; 0x34
     cf0:	86 01       	movw	r16, r12
     cf2:	75 01       	movw	r14, r10
     cf4:	2f ef       	ldi	r18, 0xFF	; 255
     cf6:	3f ef       	ldi	r19, 0xFF	; 255
     cf8:	40 e0       	ldi	r20, 0x00	; 0
     cfa:	50 e0       	ldi	r21, 0x00	; 0
     cfc:	e2 22       	and	r14, r18
     cfe:	f3 22       	and	r15, r19
     d00:	04 23       	and	r16, r20
     d02:	15 23       	and	r17, r21
     d04:	a6 01       	movw	r20, r12
     d06:	66 27       	eor	r22, r22
     d08:	77 27       	eor	r23, r23
     d0a:	6d 96       	adiw	r28, 0x1d	; 29
     d0c:	4c af       	std	Y+60, r20	; 0x3c
     d0e:	5d af       	std	Y+61, r21	; 0x3d
     d10:	6e af       	std	Y+62, r22	; 0x3e
     d12:	7f af       	std	Y+63, r23	; 0x3f
     d14:	6d 97       	sbiw	r28, 0x1d	; 29
     d16:	a9 a0       	ldd	r10, Y+33	; 0x21
     d18:	ba a0       	ldd	r11, Y+34	; 0x22
     d1a:	cb a0       	ldd	r12, Y+35	; 0x23
     d1c:	dc a0       	ldd	r13, Y+36	; 0x24
     d1e:	6f ef       	ldi	r22, 0xFF	; 255
     d20:	7f ef       	ldi	r23, 0xFF	; 255
     d22:	80 e0       	ldi	r24, 0x00	; 0
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	a6 22       	and	r10, r22
     d28:	b7 22       	and	r11, r23
     d2a:	c8 22       	and	r12, r24
     d2c:	d9 22       	and	r13, r25
     d2e:	89 a1       	ldd	r24, Y+33	; 0x21
     d30:	9a a1       	ldd	r25, Y+34	; 0x22
     d32:	ab a1       	ldd	r26, Y+35	; 0x23
     d34:	bc a1       	ldd	r27, Y+36	; 0x24
     d36:	1d 01       	movw	r2, r26
     d38:	44 24       	eor	r4, r4
     d3a:	55 24       	eor	r5, r5
     d3c:	c8 01       	movw	r24, r16
     d3e:	b7 01       	movw	r22, r14
     d40:	a6 01       	movw	r20, r12
     d42:	95 01       	movw	r18, r10
     d44:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     d48:	69 96       	adiw	r28, 0x19	; 25
     d4a:	6c af       	std	Y+60, r22	; 0x3c
     d4c:	7d af       	std	Y+61, r23	; 0x3d
     d4e:	8e af       	std	Y+62, r24	; 0x3e
     d50:	9f af       	std	Y+63, r25	; 0x3f
     d52:	69 97       	sbiw	r28, 0x19	; 25
     d54:	c8 01       	movw	r24, r16
     d56:	b7 01       	movw	r22, r14
     d58:	a2 01       	movw	r20, r4
     d5a:	91 01       	movw	r18, r2
     d5c:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     d60:	3b 01       	movw	r6, r22
     d62:	4c 01       	movw	r8, r24
     d64:	6d 96       	adiw	r28, 0x1d	; 29
     d66:	6c ad       	ldd	r22, Y+60	; 0x3c
     d68:	7d ad       	ldd	r23, Y+61	; 0x3d
     d6a:	8e ad       	ldd	r24, Y+62	; 0x3e
     d6c:	9f ad       	ldd	r25, Y+63	; 0x3f
     d6e:	6d 97       	sbiw	r28, 0x1d	; 29
     d70:	a6 01       	movw	r20, r12
     d72:	95 01       	movw	r18, r10
     d74:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     d78:	7b 01       	movw	r14, r22
     d7a:	8c 01       	movw	r16, r24
     d7c:	6d 96       	adiw	r28, 0x1d	; 29
     d7e:	6c ad       	ldd	r22, Y+60	; 0x3c
     d80:	7d ad       	ldd	r23, Y+61	; 0x3d
     d82:	8e ad       	ldd	r24, Y+62	; 0x3e
     d84:	9f ad       	ldd	r25, Y+63	; 0x3f
     d86:	6d 97       	sbiw	r28, 0x1d	; 29
     d88:	a2 01       	movw	r20, r4
     d8a:	91 01       	movw	r18, r2
     d8c:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
     d90:	5b 01       	movw	r10, r22
     d92:	6c 01       	movw	r12, r24
     d94:	a8 01       	movw	r20, r16
     d96:	97 01       	movw	r18, r14
     d98:	26 0d       	add	r18, r6
     d9a:	37 1d       	adc	r19, r7
     d9c:	48 1d       	adc	r20, r8
     d9e:	59 1d       	adc	r21, r9
     da0:	69 96       	adiw	r28, 0x19	; 25
     da2:	6c ac       	ldd	r6, Y+60	; 0x3c
     da4:	7d ac       	ldd	r7, Y+61	; 0x3d
     da6:	8e ac       	ldd	r8, Y+62	; 0x3e
     da8:	9f ac       	ldd	r9, Y+63	; 0x3f
     daa:	69 97       	sbiw	r28, 0x19	; 25
     dac:	c4 01       	movw	r24, r8
     dae:	aa 27       	eor	r26, r26
     db0:	bb 27       	eor	r27, r27
     db2:	28 0f       	add	r18, r24
     db4:	39 1f       	adc	r19, r25
     db6:	4a 1f       	adc	r20, r26
     db8:	5b 1f       	adc	r21, r27
     dba:	2e 15       	cp	r18, r14
     dbc:	3f 05       	cpc	r19, r15
     dbe:	40 07       	cpc	r20, r16
     dc0:	51 07       	cpc	r21, r17
     dc2:	48 f4       	brcc	.+18     	; 0xdd6 <__stack+0x577>
     dc4:	e1 2c       	mov	r14, r1
     dc6:	f1 2c       	mov	r15, r1
     dc8:	61 e0       	ldi	r22, 0x01	; 1
     dca:	06 2f       	mov	r16, r22
     dcc:	11 2d       	mov	r17, r1
     dce:	ae 0c       	add	r10, r14
     dd0:	bf 1c       	adc	r11, r15
     dd2:	c0 1e       	adc	r12, r16
     dd4:	d1 1e       	adc	r13, r17
     dd6:	ca 01       	movw	r24, r20
     dd8:	aa 27       	eor	r26, r26
     dda:	bb 27       	eor	r27, r27
     ddc:	bc 01       	movw	r22, r24
     dde:	cd 01       	movw	r24, r26
     de0:	6a 0d       	add	r22, r10
     de2:	7b 1d       	adc	r23, r11
     de4:	8c 1d       	adc	r24, r12
     de6:	9d 1d       	adc	r25, r13
     de8:	69 8c       	ldd	r6, Y+25	; 0x19
     dea:	7a 8c       	ldd	r7, Y+26	; 0x1a
     dec:	8b 8c       	ldd	r8, Y+27	; 0x1b
     dee:	9c 8c       	ldd	r9, Y+28	; 0x1c
     df0:	66 16       	cp	r6, r22
     df2:	77 06       	cpc	r7, r23
     df4:	88 06       	cpc	r8, r24
     df6:	99 06       	cpc	r9, r25
     df8:	40 f1       	brcs	.+80     	; 0xe4a <__stack+0x5eb>
     dfa:	66 15       	cp	r22, r6
     dfc:	77 05       	cpc	r23, r7
     dfe:	88 05       	cpc	r24, r8
     e00:	99 05       	cpc	r25, r9
     e02:	09 f0       	breq	.+2      	; 0xe06 <__stack+0x5a7>
     e04:	43 c0       	rjmp	.+134    	; 0xe8c <__stack+0x62d>
     e06:	d9 01       	movw	r26, r18
     e08:	99 27       	eor	r25, r25
     e0a:	88 27       	eor	r24, r24
     e0c:	69 96       	adiw	r28, 0x19	; 25
     e0e:	2c ad       	ldd	r18, Y+60	; 0x3c
     e10:	3d ad       	ldd	r19, Y+61	; 0x3d
     e12:	4e ad       	ldd	r20, Y+62	; 0x3e
     e14:	5f ad       	ldd	r21, Y+63	; 0x3f
     e16:	69 97       	sbiw	r28, 0x19	; 25
     e18:	40 70       	andi	r20, 0x00	; 0
     e1a:	50 70       	andi	r21, 0x00	; 0
     e1c:	82 0f       	add	r24, r18
     e1e:	93 1f       	adc	r25, r19
     e20:	a4 1f       	adc	r26, r20
     e22:	b5 1f       	adc	r27, r21
     e24:	2d a5       	ldd	r18, Y+45	; 0x2d
     e26:	3e a5       	ldd	r19, Y+46	; 0x2e
     e28:	4f a5       	ldd	r20, Y+47	; 0x2f
     e2a:	58 a9       	ldd	r21, Y+48	; 0x30
     e2c:	6e 96       	adiw	r28, 0x1e	; 30
     e2e:	0f ac       	ldd	r0, Y+63	; 0x3f
     e30:	6e 97       	sbiw	r28, 0x1e	; 30
     e32:	04 c0       	rjmp	.+8      	; 0xe3c <__stack+0x5dd>
     e34:	22 0f       	add	r18, r18
     e36:	33 1f       	adc	r19, r19
     e38:	44 1f       	adc	r20, r20
     e3a:	55 1f       	adc	r21, r21
     e3c:	0a 94       	dec	r0
     e3e:	d2 f7       	brpl	.-12     	; 0xe34 <__stack+0x5d5>
     e40:	28 17       	cp	r18, r24
     e42:	39 07       	cpc	r19, r25
     e44:	4a 07       	cpc	r20, r26
     e46:	5b 07       	cpc	r21, r27
     e48:	08 f5       	brcc	.+66     	; 0xe8c <__stack+0x62d>
     e4a:	09 a9       	ldd	r16, Y+49	; 0x31
     e4c:	1a a9       	ldd	r17, Y+50	; 0x32
     e4e:	2b a9       	ldd	r18, Y+51	; 0x33
     e50:	3c a9       	ldd	r19, Y+52	; 0x34
     e52:	01 50       	subi	r16, 0x01	; 1
     e54:	10 40       	sbci	r17, 0x00	; 0
     e56:	20 40       	sbci	r18, 0x00	; 0
     e58:	30 40       	sbci	r19, 0x00	; 0
     e5a:	09 ab       	std	Y+49, r16	; 0x31
     e5c:	1a ab       	std	Y+50, r17	; 0x32
     e5e:	2b ab       	std	Y+51, r18	; 0x33
     e60:	3c ab       	std	Y+52, r19	; 0x34
     e62:	14 c0       	rjmp	.+40     	; 0xe8c <__stack+0x62d>
     e64:	66 24       	eor	r6, r6
     e66:	77 24       	eor	r7, r7
     e68:	43 01       	movw	r8, r6
     e6a:	21 e0       	ldi	r18, 0x01	; 1
     e6c:	30 e0       	ldi	r19, 0x00	; 0
     e6e:	40 e0       	ldi	r20, 0x00	; 0
     e70:	50 e0       	ldi	r21, 0x00	; 0
     e72:	29 ab       	std	Y+49, r18	; 0x31
     e74:	3a ab       	std	Y+50, r19	; 0x32
     e76:	4b ab       	std	Y+51, r20	; 0x33
     e78:	5c ab       	std	Y+52, r21	; 0x34
     e7a:	0b c0       	rjmp	.+22     	; 0xe92 <__stack+0x633>
     e7c:	66 24       	eor	r6, r6
     e7e:	77 24       	eor	r7, r7
     e80:	43 01       	movw	r8, r6
     e82:	19 aa       	std	Y+49, r1	; 0x31
     e84:	1a aa       	std	Y+50, r1	; 0x32
     e86:	1b aa       	std	Y+51, r1	; 0x33
     e88:	1c aa       	std	Y+52, r1	; 0x34
     e8a:	03 c0       	rjmp	.+6      	; 0xe92 <__stack+0x633>
     e8c:	66 24       	eor	r6, r6
     e8e:	77 24       	eor	r7, r7
     e90:	43 01       	movw	r8, r6
     e92:	fe 01       	movw	r30, r28
     e94:	71 96       	adiw	r30, 0x11	; 17
     e96:	88 e0       	ldi	r24, 0x08	; 8
     e98:	df 01       	movw	r26, r30
     e9a:	1d 92       	st	X+, r1
     e9c:	8a 95       	dec	r24
     e9e:	e9 f7       	brne	.-6      	; 0xe9a <__stack+0x63b>
     ea0:	a9 a8       	ldd	r10, Y+49	; 0x31
     ea2:	ba a8       	ldd	r11, Y+50	; 0x32
     ea4:	cb a8       	ldd	r12, Y+51	; 0x33
     ea6:	dc a8       	ldd	r13, Y+52	; 0x34
     ea8:	a9 8a       	std	Y+17, r10	; 0x11
     eaa:	ba 8a       	std	Y+18, r11	; 0x12
     eac:	cb 8a       	std	Y+19, r12	; 0x13
     eae:	dc 8a       	std	Y+20, r13	; 0x14
     eb0:	6d 8a       	std	Y+21, r6	; 0x15
     eb2:	7e 8a       	std	Y+22, r7	; 0x16
     eb4:	8f 8a       	std	Y+23, r8	; 0x17
     eb6:	98 8e       	std	Y+24, r9	; 0x18
     eb8:	29 a9       	ldd	r18, Y+49	; 0x31
     eba:	3a 89       	ldd	r19, Y+18	; 0x12
     ebc:	4b 89       	ldd	r20, Y+19	; 0x13
     ebe:	5c 89       	ldd	r21, Y+20	; 0x14
     ec0:	66 2d       	mov	r22, r6
     ec2:	7e 89       	ldd	r23, Y+22	; 0x16
     ec4:	8f 89       	ldd	r24, Y+23	; 0x17
     ec6:	98 8d       	ldd	r25, Y+24	; 0x18
     ec8:	c2 5a       	subi	r28, 0xA2	; 162
     eca:	df 4f       	sbci	r29, 0xFF	; 255
     ecc:	e2 e1       	ldi	r30, 0x12	; 18
     ece:	0c 94 ef 2a 	jmp	0x55de	; 0x55de <__epilogue_restores__>

00000ed2 <__umoddi3>:
     ed2:	ab e5       	ldi	r26, 0x5B	; 91
     ed4:	b0 e0       	ldi	r27, 0x00	; 0
     ed6:	ef e6       	ldi	r30, 0x6F	; 111
     ed8:	f7 e0       	ldi	r31, 0x07	; 7
     eda:	0c 94 d3 2a 	jmp	0x55a6	; 0x55a6 <__prologue_saves__>
     ede:	a8 e0       	ldi	r26, 0x08	; 8
     ee0:	4e 01       	movw	r8, r28
     ee2:	08 94       	sec
     ee4:	81 1c       	adc	r8, r1
     ee6:	91 1c       	adc	r9, r1
     ee8:	f4 01       	movw	r30, r8
     eea:	6a 2e       	mov	r6, r26
     eec:	11 92       	st	Z+, r1
     eee:	6a 94       	dec	r6
     ef0:	e9 f7       	brne	.-6      	; 0xeec <__umoddi3+0x1a>
     ef2:	29 83       	std	Y+1, r18	; 0x01
     ef4:	3a 83       	std	Y+2, r19	; 0x02
     ef6:	4b 83       	std	Y+3, r20	; 0x03
     ef8:	5c 83       	std	Y+4, r21	; 0x04
     efa:	6d 83       	std	Y+5, r22	; 0x05
     efc:	7e 83       	std	Y+6, r23	; 0x06
     efe:	8f 83       	std	Y+7, r24	; 0x07
     f00:	98 87       	std	Y+8, r25	; 0x08
     f02:	ce 01       	movw	r24, r28
     f04:	09 96       	adiw	r24, 0x09	; 9
     f06:	fc 01       	movw	r30, r24
     f08:	11 92       	st	Z+, r1
     f0a:	aa 95       	dec	r26
     f0c:	e9 f7       	brne	.-6      	; 0xf08 <__umoddi3+0x36>
     f0e:	a9 86       	std	Y+9, r10	; 0x09
     f10:	ba 86       	std	Y+10, r11	; 0x0a
     f12:	cb 86       	std	Y+11, r12	; 0x0b
     f14:	dc 86       	std	Y+12, r13	; 0x0c
     f16:	ed 86       	std	Y+13, r14	; 0x0d
     f18:	fe 86       	std	Y+14, r15	; 0x0e
     f1a:	0f 87       	std	Y+15, r16	; 0x0f
     f1c:	18 8b       	std	Y+16, r17	; 0x10
     f1e:	29 84       	ldd	r2, Y+9	; 0x09
     f20:	3a 84       	ldd	r3, Y+10	; 0x0a
     f22:	4b 84       	ldd	r4, Y+11	; 0x0b
     f24:	5c 84       	ldd	r5, Y+12	; 0x0c
     f26:	ad 84       	ldd	r10, Y+13	; 0x0d
     f28:	be 84       	ldd	r11, Y+14	; 0x0e
     f2a:	cf 84       	ldd	r12, Y+15	; 0x0f
     f2c:	d8 88       	ldd	r13, Y+16	; 0x10
     f2e:	29 81       	ldd	r18, Y+1	; 0x01
     f30:	3a 81       	ldd	r19, Y+2	; 0x02
     f32:	4b 81       	ldd	r20, Y+3	; 0x03
     f34:	5c 81       	ldd	r21, Y+4	; 0x04
     f36:	69 96       	adiw	r28, 0x19	; 25
     f38:	2f af       	std	Y+63, r18	; 0x3f
     f3a:	69 97       	sbiw	r28, 0x19	; 25
     f3c:	6a 96       	adiw	r28, 0x1a	; 26
     f3e:	3f af       	std	Y+63, r19	; 0x3f
     f40:	6a 97       	sbiw	r28, 0x1a	; 26
     f42:	6b 96       	adiw	r28, 0x1b	; 27
     f44:	4f af       	std	Y+63, r20	; 0x3f
     f46:	6b 97       	sbiw	r28, 0x1b	; 27
     f48:	6c 96       	adiw	r28, 0x1c	; 28
     f4a:	5f af       	std	Y+63, r21	; 0x3f
     f4c:	6c 97       	sbiw	r28, 0x1c	; 28
     f4e:	6c 96       	adiw	r28, 0x1c	; 28
     f50:	6c ac       	ldd	r6, Y+60	; 0x3c
     f52:	7d ac       	ldd	r7, Y+61	; 0x3d
     f54:	8e ac       	ldd	r8, Y+62	; 0x3e
     f56:	9f ac       	ldd	r9, Y+63	; 0x3f
     f58:	6c 97       	sbiw	r28, 0x1c	; 28
     f5a:	69 aa       	std	Y+49, r6	; 0x31
     f5c:	7a aa       	std	Y+50, r7	; 0x32
     f5e:	8b aa       	std	Y+51, r8	; 0x33
     f60:	9c aa       	std	Y+52, r9	; 0x34
     f62:	6d 81       	ldd	r22, Y+5	; 0x05
     f64:	7e 81       	ldd	r23, Y+6	; 0x06
     f66:	8f 81       	ldd	r24, Y+7	; 0x07
     f68:	98 85       	ldd	r25, Y+8	; 0x08
     f6a:	3b 01       	movw	r6, r22
     f6c:	4c 01       	movw	r8, r24
     f6e:	6d aa       	std	Y+53, r6	; 0x35
     f70:	7e aa       	std	Y+54, r7	; 0x36
     f72:	8f aa       	std	Y+55, r8	; 0x37
     f74:	98 ae       	std	Y+56, r9	; 0x38
     f76:	a1 14       	cp	r10, r1
     f78:	b1 04       	cpc	r11, r1
     f7a:	c1 04       	cpc	r12, r1
     f7c:	d1 04       	cpc	r13, r1
     f7e:	09 f0       	breq	.+2      	; 0xf82 <__umoddi3+0xb0>
     f80:	04 c3       	rjmp	.+1544   	; 0x158a <__umoddi3+0x6b8>
     f82:	62 14       	cp	r6, r2
     f84:	73 04       	cpc	r7, r3
     f86:	84 04       	cpc	r8, r4
     f88:	95 04       	cpc	r9, r5
     f8a:	08 f0       	brcs	.+2      	; 0xf8e <__umoddi3+0xbc>
     f8c:	00 c1       	rjmp	.+512    	; 0x118e <__umoddi3+0x2bc>
     f8e:	00 e0       	ldi	r16, 0x00	; 0
     f90:	20 16       	cp	r2, r16
     f92:	00 e0       	ldi	r16, 0x00	; 0
     f94:	30 06       	cpc	r3, r16
     f96:	01 e0       	ldi	r16, 0x01	; 1
     f98:	40 06       	cpc	r4, r16
     f9a:	00 e0       	ldi	r16, 0x00	; 0
     f9c:	50 06       	cpc	r5, r16
     f9e:	88 f4       	brcc	.+34     	; 0xfc2 <__umoddi3+0xf0>
     fa0:	1f ef       	ldi	r17, 0xFF	; 255
     fa2:	21 16       	cp	r2, r17
     fa4:	31 04       	cpc	r3, r1
     fa6:	41 04       	cpc	r4, r1
     fa8:	51 04       	cpc	r5, r1
     faa:	39 f0       	breq	.+14     	; 0xfba <__umoddi3+0xe8>
     fac:	30 f0       	brcs	.+12     	; 0xfba <__umoddi3+0xe8>
     fae:	88 e0       	ldi	r24, 0x08	; 8
     fb0:	e8 2e       	mov	r14, r24
     fb2:	f1 2c       	mov	r15, r1
     fb4:	01 2d       	mov	r16, r1
     fb6:	11 2d       	mov	r17, r1
     fb8:	18 c0       	rjmp	.+48     	; 0xfea <__umoddi3+0x118>
     fba:	ee 24       	eor	r14, r14
     fbc:	ff 24       	eor	r15, r15
     fbe:	87 01       	movw	r16, r14
     fc0:	14 c0       	rjmp	.+40     	; 0xfea <__umoddi3+0x118>
     fc2:	40 e0       	ldi	r20, 0x00	; 0
     fc4:	24 16       	cp	r2, r20
     fc6:	40 e0       	ldi	r20, 0x00	; 0
     fc8:	34 06       	cpc	r3, r20
     fca:	40 e0       	ldi	r20, 0x00	; 0
     fcc:	44 06       	cpc	r4, r20
     fce:	41 e0       	ldi	r20, 0x01	; 1
     fd0:	54 06       	cpc	r5, r20
     fd2:	30 f0       	brcs	.+12     	; 0xfe0 <__umoddi3+0x10e>
     fd4:	b8 e1       	ldi	r27, 0x18	; 24
     fd6:	eb 2e       	mov	r14, r27
     fd8:	f1 2c       	mov	r15, r1
     fda:	01 2d       	mov	r16, r1
     fdc:	11 2d       	mov	r17, r1
     fde:	05 c0       	rjmp	.+10     	; 0xfea <__umoddi3+0x118>
     fe0:	a0 e1       	ldi	r26, 0x10	; 16
     fe2:	ea 2e       	mov	r14, r26
     fe4:	f1 2c       	mov	r15, r1
     fe6:	01 2d       	mov	r16, r1
     fe8:	11 2d       	mov	r17, r1
     fea:	d2 01       	movw	r26, r4
     fec:	c1 01       	movw	r24, r2
     fee:	0e 2c       	mov	r0, r14
     ff0:	04 c0       	rjmp	.+8      	; 0xffa <__umoddi3+0x128>
     ff2:	b6 95       	lsr	r27
     ff4:	a7 95       	ror	r26
     ff6:	97 95       	ror	r25
     ff8:	87 95       	ror	r24
     ffa:	0a 94       	dec	r0
     ffc:	d2 f7       	brpl	.-12     	; 0xff2 <__umoddi3+0x120>
     ffe:	82 59       	subi	r24, 0x92	; 146
    1000:	9f 4f       	sbci	r25, 0xFF	; 255
    1002:	dc 01       	movw	r26, r24
    1004:	2c 91       	ld	r18, X
    1006:	80 e2       	ldi	r24, 0x20	; 32
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	a0 e0       	ldi	r26, 0x00	; 0
    100c:	b0 e0       	ldi	r27, 0x00	; 0
    100e:	8e 19       	sub	r24, r14
    1010:	9f 09       	sbc	r25, r15
    1012:	a0 0b       	sbc	r26, r16
    1014:	b1 0b       	sbc	r27, r17
    1016:	5c 01       	movw	r10, r24
    1018:	6d 01       	movw	r12, r26
    101a:	a2 1a       	sub	r10, r18
    101c:	b1 08       	sbc	r11, r1
    101e:	c1 08       	sbc	r12, r1
    1020:	d1 08       	sbc	r13, r1
    1022:	a9 ae       	std	Y+57, r10	; 0x39
    1024:	ba ae       	std	Y+58, r11	; 0x3a
    1026:	cb ae       	std	Y+59, r12	; 0x3b
    1028:	dc ae       	std	Y+60, r13	; 0x3c
    102a:	a1 14       	cp	r10, r1
    102c:	b1 04       	cpc	r11, r1
    102e:	c1 04       	cpc	r12, r1
    1030:	d1 04       	cpc	r13, r1
    1032:	09 f4       	brne	.+2      	; 0x1036 <__umoddi3+0x164>
    1034:	3f c0       	rjmp	.+126    	; 0x10b4 <__umoddi3+0x1e2>
    1036:	69 ad       	ldd	r22, Y+57	; 0x39
    1038:	06 2e       	mov	r0, r22
    103a:	04 c0       	rjmp	.+8      	; 0x1044 <__umoddi3+0x172>
    103c:	22 0c       	add	r2, r2
    103e:	33 1c       	adc	r3, r3
    1040:	44 1c       	adc	r4, r4
    1042:	55 1c       	adc	r5, r5
    1044:	0a 94       	dec	r0
    1046:	d2 f7       	brpl	.-12     	; 0x103c <__umoddi3+0x16a>
    1048:	a4 01       	movw	r20, r8
    104a:	93 01       	movw	r18, r6
    104c:	06 2e       	mov	r0, r22
    104e:	04 c0       	rjmp	.+8      	; 0x1058 <__umoddi3+0x186>
    1050:	22 0f       	add	r18, r18
    1052:	33 1f       	adc	r19, r19
    1054:	44 1f       	adc	r20, r20
    1056:	55 1f       	adc	r21, r21
    1058:	0a 94       	dec	r0
    105a:	d2 f7       	brpl	.-12     	; 0x1050 <__umoddi3+0x17e>
    105c:	80 e2       	ldi	r24, 0x20	; 32
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	8a 19       	sub	r24, r10
    1062:	9b 09       	sbc	r25, r11
    1064:	6c 96       	adiw	r28, 0x1c	; 28
    1066:	cc ac       	ldd	r12, Y+60	; 0x3c
    1068:	dd ac       	ldd	r13, Y+61	; 0x3d
    106a:	ee ac       	ldd	r14, Y+62	; 0x3e
    106c:	ff ac       	ldd	r15, Y+63	; 0x3f
    106e:	6c 97       	sbiw	r28, 0x1c	; 28
    1070:	04 c0       	rjmp	.+8      	; 0x107a <__umoddi3+0x1a8>
    1072:	f6 94       	lsr	r15
    1074:	e7 94       	ror	r14
    1076:	d7 94       	ror	r13
    1078:	c7 94       	ror	r12
    107a:	8a 95       	dec	r24
    107c:	d2 f7       	brpl	.-12     	; 0x1072 <__umoddi3+0x1a0>
    107e:	87 01       	movw	r16, r14
    1080:	76 01       	movw	r14, r12
    1082:	e2 2a       	or	r14, r18
    1084:	f3 2a       	or	r15, r19
    1086:	04 2b       	or	r16, r20
    1088:	15 2b       	or	r17, r21
    108a:	ed aa       	std	Y+53, r14	; 0x35
    108c:	fe aa       	std	Y+54, r15	; 0x36
    108e:	0f ab       	std	Y+55, r16	; 0x37
    1090:	18 af       	std	Y+56, r17	; 0x38
    1092:	6c 96       	adiw	r28, 0x1c	; 28
    1094:	8c ad       	ldd	r24, Y+60	; 0x3c
    1096:	9d ad       	ldd	r25, Y+61	; 0x3d
    1098:	ae ad       	ldd	r26, Y+62	; 0x3e
    109a:	bf ad       	ldd	r27, Y+63	; 0x3f
    109c:	6c 97       	sbiw	r28, 0x1c	; 28
    109e:	04 c0       	rjmp	.+8      	; 0x10a8 <__umoddi3+0x1d6>
    10a0:	88 0f       	add	r24, r24
    10a2:	99 1f       	adc	r25, r25
    10a4:	aa 1f       	adc	r26, r26
    10a6:	bb 1f       	adc	r27, r27
    10a8:	6a 95       	dec	r22
    10aa:	d2 f7       	brpl	.-12     	; 0x10a0 <__umoddi3+0x1ce>
    10ac:	89 ab       	std	Y+49, r24	; 0x31
    10ae:	9a ab       	std	Y+50, r25	; 0x32
    10b0:	ab ab       	std	Y+51, r26	; 0x33
    10b2:	bc ab       	std	Y+52, r27	; 0x34
    10b4:	32 01       	movw	r6, r4
    10b6:	88 24       	eor	r8, r8
    10b8:	99 24       	eor	r9, r9
    10ba:	b2 01       	movw	r22, r4
    10bc:	a1 01       	movw	r20, r2
    10be:	60 70       	andi	r22, 0x00	; 0
    10c0:	70 70       	andi	r23, 0x00	; 0
    10c2:	21 96       	adiw	r28, 0x01	; 1
    10c4:	4c af       	std	Y+60, r20	; 0x3c
    10c6:	5d af       	std	Y+61, r21	; 0x3d
    10c8:	6e af       	std	Y+62, r22	; 0x3e
    10ca:	7f af       	std	Y+63, r23	; 0x3f
    10cc:	21 97       	sbiw	r28, 0x01	; 1
    10ce:	6d a9       	ldd	r22, Y+53	; 0x35
    10d0:	7e a9       	ldd	r23, Y+54	; 0x36
    10d2:	8f a9       	ldd	r24, Y+55	; 0x37
    10d4:	98 ad       	ldd	r25, Y+56	; 0x38
    10d6:	a4 01       	movw	r20, r8
    10d8:	93 01       	movw	r18, r6
    10da:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    10de:	7b 01       	movw	r14, r22
    10e0:	8c 01       	movw	r16, r24
    10e2:	6d a9       	ldd	r22, Y+53	; 0x35
    10e4:	7e a9       	ldd	r23, Y+54	; 0x36
    10e6:	8f a9       	ldd	r24, Y+55	; 0x37
    10e8:	98 ad       	ldd	r25, Y+56	; 0x38
    10ea:	a4 01       	movw	r20, r8
    10ec:	93 01       	movw	r18, r6
    10ee:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    10f2:	ca 01       	movw	r24, r20
    10f4:	b9 01       	movw	r22, r18
    10f6:	21 96       	adiw	r28, 0x01	; 1
    10f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    10fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    10fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    10fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1100:	21 97       	sbiw	r28, 0x01	; 1
    1102:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    1106:	9b 01       	movw	r18, r22
    1108:	ac 01       	movw	r20, r24
    110a:	87 01       	movw	r16, r14
    110c:	ff 24       	eor	r15, r15
    110e:	ee 24       	eor	r14, r14
    1110:	a9 a8       	ldd	r10, Y+49	; 0x31
    1112:	ba a8       	ldd	r11, Y+50	; 0x32
    1114:	cb a8       	ldd	r12, Y+51	; 0x33
    1116:	dc a8       	ldd	r13, Y+52	; 0x34
    1118:	c6 01       	movw	r24, r12
    111a:	aa 27       	eor	r26, r26
    111c:	bb 27       	eor	r27, r27
    111e:	57 01       	movw	r10, r14
    1120:	68 01       	movw	r12, r16
    1122:	a8 2a       	or	r10, r24
    1124:	b9 2a       	or	r11, r25
    1126:	ca 2a       	or	r12, r26
    1128:	db 2a       	or	r13, r27
    112a:	a2 16       	cp	r10, r18
    112c:	b3 06       	cpc	r11, r19
    112e:	c4 06       	cpc	r12, r20
    1130:	d5 06       	cpc	r13, r21
    1132:	90 f4       	brcc	.+36     	; 0x1158 <__umoddi3+0x286>
    1134:	a2 0c       	add	r10, r2
    1136:	b3 1c       	adc	r11, r3
    1138:	c4 1c       	adc	r12, r4
    113a:	d5 1c       	adc	r13, r5
    113c:	a2 14       	cp	r10, r2
    113e:	b3 04       	cpc	r11, r3
    1140:	c4 04       	cpc	r12, r4
    1142:	d5 04       	cpc	r13, r5
    1144:	48 f0       	brcs	.+18     	; 0x1158 <__umoddi3+0x286>
    1146:	a2 16       	cp	r10, r18
    1148:	b3 06       	cpc	r11, r19
    114a:	c4 06       	cpc	r12, r20
    114c:	d5 06       	cpc	r13, r21
    114e:	20 f4       	brcc	.+8      	; 0x1158 <__umoddi3+0x286>
    1150:	a2 0c       	add	r10, r2
    1152:	b3 1c       	adc	r11, r3
    1154:	c4 1c       	adc	r12, r4
    1156:	d5 1c       	adc	r13, r5
    1158:	a2 1a       	sub	r10, r18
    115a:	b3 0a       	sbc	r11, r19
    115c:	c4 0a       	sbc	r12, r20
    115e:	d5 0a       	sbc	r13, r21
    1160:	c6 01       	movw	r24, r12
    1162:	b5 01       	movw	r22, r10
    1164:	a4 01       	movw	r20, r8
    1166:	93 01       	movw	r18, r6
    1168:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    116c:	7b 01       	movw	r14, r22
    116e:	8c 01       	movw	r16, r24
    1170:	c6 01       	movw	r24, r12
    1172:	b5 01       	movw	r22, r10
    1174:	a4 01       	movw	r20, r8
    1176:	93 01       	movw	r18, r6
    1178:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    117c:	ca 01       	movw	r24, r20
    117e:	b9 01       	movw	r22, r18
    1180:	21 96       	adiw	r28, 0x01	; 1
    1182:	2c ad       	ldd	r18, Y+60	; 0x3c
    1184:	3d ad       	ldd	r19, Y+61	; 0x3d
    1186:	4e ad       	ldd	r20, Y+62	; 0x3e
    1188:	5f ad       	ldd	r21, Y+63	; 0x3f
    118a:	21 97       	sbiw	r28, 0x01	; 1
    118c:	ba c1       	rjmp	.+884    	; 0x1502 <__umoddi3+0x630>
    118e:	21 14       	cp	r2, r1
    1190:	31 04       	cpc	r3, r1
    1192:	41 04       	cpc	r4, r1
    1194:	51 04       	cpc	r5, r1
    1196:	71 f4       	brne	.+28     	; 0x11b4 <__umoddi3+0x2e2>
    1198:	61 e0       	ldi	r22, 0x01	; 1
    119a:	70 e0       	ldi	r23, 0x00	; 0
    119c:	80 e0       	ldi	r24, 0x00	; 0
    119e:	90 e0       	ldi	r25, 0x00	; 0
    11a0:	20 e0       	ldi	r18, 0x00	; 0
    11a2:	30 e0       	ldi	r19, 0x00	; 0
    11a4:	40 e0       	ldi	r20, 0x00	; 0
    11a6:	50 e0       	ldi	r21, 0x00	; 0
    11a8:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    11ac:	c9 01       	movw	r24, r18
    11ae:	da 01       	movw	r26, r20
    11b0:	1c 01       	movw	r2, r24
    11b2:	2d 01       	movw	r4, r26
    11b4:	00 e0       	ldi	r16, 0x00	; 0
    11b6:	20 16       	cp	r2, r16
    11b8:	00 e0       	ldi	r16, 0x00	; 0
    11ba:	30 06       	cpc	r3, r16
    11bc:	01 e0       	ldi	r16, 0x01	; 1
    11be:	40 06       	cpc	r4, r16
    11c0:	00 e0       	ldi	r16, 0x00	; 0
    11c2:	50 06       	cpc	r5, r16
    11c4:	88 f4       	brcc	.+34     	; 0x11e8 <__umoddi3+0x316>
    11c6:	1f ef       	ldi	r17, 0xFF	; 255
    11c8:	21 16       	cp	r2, r17
    11ca:	31 04       	cpc	r3, r1
    11cc:	41 04       	cpc	r4, r1
    11ce:	51 04       	cpc	r5, r1
    11d0:	39 f0       	breq	.+14     	; 0x11e0 <__umoddi3+0x30e>
    11d2:	30 f0       	brcs	.+12     	; 0x11e0 <__umoddi3+0x30e>
    11d4:	68 e0       	ldi	r22, 0x08	; 8
    11d6:	e6 2e       	mov	r14, r22
    11d8:	f1 2c       	mov	r15, r1
    11da:	01 2d       	mov	r16, r1
    11dc:	11 2d       	mov	r17, r1
    11de:	18 c0       	rjmp	.+48     	; 0x1210 <__umoddi3+0x33e>
    11e0:	ee 24       	eor	r14, r14
    11e2:	ff 24       	eor	r15, r15
    11e4:	87 01       	movw	r16, r14
    11e6:	14 c0       	rjmp	.+40     	; 0x1210 <__umoddi3+0x33e>
    11e8:	40 e0       	ldi	r20, 0x00	; 0
    11ea:	24 16       	cp	r2, r20
    11ec:	40 e0       	ldi	r20, 0x00	; 0
    11ee:	34 06       	cpc	r3, r20
    11f0:	40 e0       	ldi	r20, 0x00	; 0
    11f2:	44 06       	cpc	r4, r20
    11f4:	41 e0       	ldi	r20, 0x01	; 1
    11f6:	54 06       	cpc	r5, r20
    11f8:	30 f0       	brcs	.+12     	; 0x1206 <__umoddi3+0x334>
    11fa:	58 e1       	ldi	r21, 0x18	; 24
    11fc:	e5 2e       	mov	r14, r21
    11fe:	f1 2c       	mov	r15, r1
    1200:	01 2d       	mov	r16, r1
    1202:	11 2d       	mov	r17, r1
    1204:	05 c0       	rjmp	.+10     	; 0x1210 <__umoddi3+0x33e>
    1206:	40 e1       	ldi	r20, 0x10	; 16
    1208:	e4 2e       	mov	r14, r20
    120a:	f1 2c       	mov	r15, r1
    120c:	01 2d       	mov	r16, r1
    120e:	11 2d       	mov	r17, r1
    1210:	d2 01       	movw	r26, r4
    1212:	c1 01       	movw	r24, r2
    1214:	0e 2c       	mov	r0, r14
    1216:	04 c0       	rjmp	.+8      	; 0x1220 <__umoddi3+0x34e>
    1218:	b6 95       	lsr	r27
    121a:	a7 95       	ror	r26
    121c:	97 95       	ror	r25
    121e:	87 95       	ror	r24
    1220:	0a 94       	dec	r0
    1222:	d2 f7       	brpl	.-12     	; 0x1218 <__umoddi3+0x346>
    1224:	82 59       	subi	r24, 0x92	; 146
    1226:	9f 4f       	sbci	r25, 0xFF	; 255
    1228:	dc 01       	movw	r26, r24
    122a:	2c 91       	ld	r18, X
    122c:	30 e2       	ldi	r19, 0x20	; 32
    122e:	a3 2e       	mov	r10, r19
    1230:	b1 2c       	mov	r11, r1
    1232:	c1 2c       	mov	r12, r1
    1234:	d1 2c       	mov	r13, r1
    1236:	d6 01       	movw	r26, r12
    1238:	c5 01       	movw	r24, r10
    123a:	8e 19       	sub	r24, r14
    123c:	9f 09       	sbc	r25, r15
    123e:	a0 0b       	sbc	r26, r16
    1240:	b1 0b       	sbc	r27, r17
    1242:	7c 01       	movw	r14, r24
    1244:	8d 01       	movw	r16, r26
    1246:	e2 1a       	sub	r14, r18
    1248:	f1 08       	sbc	r15, r1
    124a:	01 09       	sbc	r16, r1
    124c:	11 09       	sbc	r17, r1
    124e:	e9 ae       	std	Y+57, r14	; 0x39
    1250:	fa ae       	std	Y+58, r15	; 0x3a
    1252:	0b af       	std	Y+59, r16	; 0x3b
    1254:	1c af       	std	Y+60, r17	; 0x3c
    1256:	e1 14       	cp	r14, r1
    1258:	f1 04       	cpc	r15, r1
    125a:	01 05       	cpc	r16, r1
    125c:	11 05       	cpc	r17, r1
    125e:	39 f4       	brne	.+14     	; 0x126e <__umoddi3+0x39c>
    1260:	64 01       	movw	r12, r8
    1262:	53 01       	movw	r10, r6
    1264:	a2 18       	sub	r10, r2
    1266:	b3 08       	sbc	r11, r3
    1268:	c4 08       	sbc	r12, r4
    126a:	d5 08       	sbc	r13, r5
    126c:	e2 c0       	rjmp	.+452    	; 0x1432 <__umoddi3+0x560>
    126e:	f9 ac       	ldd	r15, Y+57	; 0x39
    1270:	68 96       	adiw	r28, 0x18	; 24
    1272:	ff ae       	std	Y+63, r15	; 0x3f
    1274:	68 97       	sbiw	r28, 0x18	; 24
    1276:	0f 2c       	mov	r0, r15
    1278:	04 c0       	rjmp	.+8      	; 0x1282 <__umoddi3+0x3b0>
    127a:	22 0c       	add	r2, r2
    127c:	33 1c       	adc	r3, r3
    127e:	44 1c       	adc	r4, r4
    1280:	55 1c       	adc	r5, r5
    1282:	0a 94       	dec	r0
    1284:	d2 f7       	brpl	.-12     	; 0x127a <__umoddi3+0x3a8>
    1286:	8a 2d       	mov	r24, r10
    1288:	8f 19       	sub	r24, r15
    128a:	64 01       	movw	r12, r8
    128c:	53 01       	movw	r10, r6
    128e:	08 2e       	mov	r0, r24
    1290:	04 c0       	rjmp	.+8      	; 0x129a <__umoddi3+0x3c8>
    1292:	d6 94       	lsr	r13
    1294:	c7 94       	ror	r12
    1296:	b7 94       	ror	r11
    1298:	a7 94       	ror	r10
    129a:	0a 94       	dec	r0
    129c:	d2 f7       	brpl	.-12     	; 0x1292 <__umoddi3+0x3c0>
    129e:	a4 01       	movw	r20, r8
    12a0:	93 01       	movw	r18, r6
    12a2:	04 c0       	rjmp	.+8      	; 0x12ac <__umoddi3+0x3da>
    12a4:	22 0f       	add	r18, r18
    12a6:	33 1f       	adc	r19, r19
    12a8:	44 1f       	adc	r20, r20
    12aa:	55 1f       	adc	r21, r21
    12ac:	fa 94       	dec	r15
    12ae:	d2 f7       	brpl	.-12     	; 0x12a4 <__umoddi3+0x3d2>
    12b0:	6c 96       	adiw	r28, 0x1c	; 28
    12b2:	6c ac       	ldd	r6, Y+60	; 0x3c
    12b4:	7d ac       	ldd	r7, Y+61	; 0x3d
    12b6:	8e ac       	ldd	r8, Y+62	; 0x3e
    12b8:	9f ac       	ldd	r9, Y+63	; 0x3f
    12ba:	6c 97       	sbiw	r28, 0x1c	; 28
    12bc:	04 c0       	rjmp	.+8      	; 0x12c6 <__umoddi3+0x3f4>
    12be:	96 94       	lsr	r9
    12c0:	87 94       	ror	r8
    12c2:	77 94       	ror	r7
    12c4:	67 94       	ror	r6
    12c6:	8a 95       	dec	r24
    12c8:	d2 f7       	brpl	.-12     	; 0x12be <__umoddi3+0x3ec>
    12ca:	84 01       	movw	r16, r8
    12cc:	73 01       	movw	r14, r6
    12ce:	e2 2a       	or	r14, r18
    12d0:	f3 2a       	or	r15, r19
    12d2:	04 2b       	or	r16, r20
    12d4:	15 2b       	or	r17, r21
    12d6:	ed a6       	std	Y+45, r14	; 0x2d
    12d8:	fe a6       	std	Y+46, r15	; 0x2e
    12da:	0f a7       	std	Y+47, r16	; 0x2f
    12dc:	18 ab       	std	Y+48, r17	; 0x30
    12de:	32 01       	movw	r6, r4
    12e0:	88 24       	eor	r8, r8
    12e2:	99 24       	eor	r9, r9
    12e4:	b2 01       	movw	r22, r4
    12e6:	a1 01       	movw	r20, r2
    12e8:	60 70       	andi	r22, 0x00	; 0
    12ea:	70 70       	andi	r23, 0x00	; 0
    12ec:	25 96       	adiw	r28, 0x05	; 5
    12ee:	4c af       	std	Y+60, r20	; 0x3c
    12f0:	5d af       	std	Y+61, r21	; 0x3d
    12f2:	6e af       	std	Y+62, r22	; 0x3e
    12f4:	7f af       	std	Y+63, r23	; 0x3f
    12f6:	25 97       	sbiw	r28, 0x05	; 5
    12f8:	c6 01       	movw	r24, r12
    12fa:	b5 01       	movw	r22, r10
    12fc:	a4 01       	movw	r20, r8
    12fe:	93 01       	movw	r18, r6
    1300:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    1304:	7b 01       	movw	r14, r22
    1306:	8c 01       	movw	r16, r24
    1308:	c6 01       	movw	r24, r12
    130a:	b5 01       	movw	r22, r10
    130c:	a4 01       	movw	r20, r8
    130e:	93 01       	movw	r18, r6
    1310:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    1314:	ca 01       	movw	r24, r20
    1316:	b9 01       	movw	r22, r18
    1318:	25 96       	adiw	r28, 0x05	; 5
    131a:	2c ad       	ldd	r18, Y+60	; 0x3c
    131c:	3d ad       	ldd	r19, Y+61	; 0x3d
    131e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1320:	5f ad       	ldd	r21, Y+63	; 0x3f
    1322:	25 97       	sbiw	r28, 0x05	; 5
    1324:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    1328:	9b 01       	movw	r18, r22
    132a:	ac 01       	movw	r20, r24
    132c:	87 01       	movw	r16, r14
    132e:	ff 24       	eor	r15, r15
    1330:	ee 24       	eor	r14, r14
    1332:	ad a4       	ldd	r10, Y+45	; 0x2d
    1334:	be a4       	ldd	r11, Y+46	; 0x2e
    1336:	cf a4       	ldd	r12, Y+47	; 0x2f
    1338:	d8 a8       	ldd	r13, Y+48	; 0x30
    133a:	c6 01       	movw	r24, r12
    133c:	aa 27       	eor	r26, r26
    133e:	bb 27       	eor	r27, r27
    1340:	5c 01       	movw	r10, r24
    1342:	6d 01       	movw	r12, r26
    1344:	ae 28       	or	r10, r14
    1346:	bf 28       	or	r11, r15
    1348:	c0 2a       	or	r12, r16
    134a:	d1 2a       	or	r13, r17
    134c:	a2 16       	cp	r10, r18
    134e:	b3 06       	cpc	r11, r19
    1350:	c4 06       	cpc	r12, r20
    1352:	d5 06       	cpc	r13, r21
    1354:	90 f4       	brcc	.+36     	; 0x137a <__umoddi3+0x4a8>
    1356:	a2 0c       	add	r10, r2
    1358:	b3 1c       	adc	r11, r3
    135a:	c4 1c       	adc	r12, r4
    135c:	d5 1c       	adc	r13, r5
    135e:	a2 14       	cp	r10, r2
    1360:	b3 04       	cpc	r11, r3
    1362:	c4 04       	cpc	r12, r4
    1364:	d5 04       	cpc	r13, r5
    1366:	48 f0       	brcs	.+18     	; 0x137a <__umoddi3+0x4a8>
    1368:	a2 16       	cp	r10, r18
    136a:	b3 06       	cpc	r11, r19
    136c:	c4 06       	cpc	r12, r20
    136e:	d5 06       	cpc	r13, r21
    1370:	20 f4       	brcc	.+8      	; 0x137a <__umoddi3+0x4a8>
    1372:	a2 0c       	add	r10, r2
    1374:	b3 1c       	adc	r11, r3
    1376:	c4 1c       	adc	r12, r4
    1378:	d5 1c       	adc	r13, r5
    137a:	a2 1a       	sub	r10, r18
    137c:	b3 0a       	sbc	r11, r19
    137e:	c4 0a       	sbc	r12, r20
    1380:	d5 0a       	sbc	r13, r21
    1382:	c6 01       	movw	r24, r12
    1384:	b5 01       	movw	r22, r10
    1386:	a4 01       	movw	r20, r8
    1388:	93 01       	movw	r18, r6
    138a:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    138e:	7b 01       	movw	r14, r22
    1390:	8c 01       	movw	r16, r24
    1392:	c6 01       	movw	r24, r12
    1394:	b5 01       	movw	r22, r10
    1396:	a4 01       	movw	r20, r8
    1398:	93 01       	movw	r18, r6
    139a:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    139e:	ca 01       	movw	r24, r20
    13a0:	b9 01       	movw	r22, r18
    13a2:	25 96       	adiw	r28, 0x05	; 5
    13a4:	2c ad       	ldd	r18, Y+60	; 0x3c
    13a6:	3d ad       	ldd	r19, Y+61	; 0x3d
    13a8:	4e ad       	ldd	r20, Y+62	; 0x3e
    13aa:	5f ad       	ldd	r21, Y+63	; 0x3f
    13ac:	25 97       	sbiw	r28, 0x05	; 5
    13ae:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    13b2:	9b 01       	movw	r18, r22
    13b4:	ac 01       	movw	r20, r24
    13b6:	87 01       	movw	r16, r14
    13b8:	ff 24       	eor	r15, r15
    13ba:	ee 24       	eor	r14, r14
    13bc:	8d a5       	ldd	r24, Y+45	; 0x2d
    13be:	9e a5       	ldd	r25, Y+46	; 0x2e
    13c0:	af a5       	ldd	r26, Y+47	; 0x2f
    13c2:	b8 a9       	ldd	r27, Y+48	; 0x30
    13c4:	a0 70       	andi	r26, 0x00	; 0
    13c6:	b0 70       	andi	r27, 0x00	; 0
    13c8:	57 01       	movw	r10, r14
    13ca:	68 01       	movw	r12, r16
    13cc:	a8 2a       	or	r10, r24
    13ce:	b9 2a       	or	r11, r25
    13d0:	ca 2a       	or	r12, r26
    13d2:	db 2a       	or	r13, r27
    13d4:	a2 16       	cp	r10, r18
    13d6:	b3 06       	cpc	r11, r19
    13d8:	c4 06       	cpc	r12, r20
    13da:	d5 06       	cpc	r13, r21
    13dc:	90 f4       	brcc	.+36     	; 0x1402 <__umoddi3+0x530>
    13de:	a2 0c       	add	r10, r2
    13e0:	b3 1c       	adc	r11, r3
    13e2:	c4 1c       	adc	r12, r4
    13e4:	d5 1c       	adc	r13, r5
    13e6:	a2 14       	cp	r10, r2
    13e8:	b3 04       	cpc	r11, r3
    13ea:	c4 04       	cpc	r12, r4
    13ec:	d5 04       	cpc	r13, r5
    13ee:	48 f0       	brcs	.+18     	; 0x1402 <__umoddi3+0x530>
    13f0:	a2 16       	cp	r10, r18
    13f2:	b3 06       	cpc	r11, r19
    13f4:	c4 06       	cpc	r12, r20
    13f6:	d5 06       	cpc	r13, r21
    13f8:	20 f4       	brcc	.+8      	; 0x1402 <__umoddi3+0x530>
    13fa:	a2 0c       	add	r10, r2
    13fc:	b3 1c       	adc	r11, r3
    13fe:	c4 1c       	adc	r12, r4
    1400:	d5 1c       	adc	r13, r5
    1402:	6c 96       	adiw	r28, 0x1c	; 28
    1404:	ec ac       	ldd	r14, Y+60	; 0x3c
    1406:	fd ac       	ldd	r15, Y+61	; 0x3d
    1408:	0e ad       	ldd	r16, Y+62	; 0x3e
    140a:	1f ad       	ldd	r17, Y+63	; 0x3f
    140c:	6c 97       	sbiw	r28, 0x1c	; 28
    140e:	68 96       	adiw	r28, 0x18	; 24
    1410:	0f ac       	ldd	r0, Y+63	; 0x3f
    1412:	68 97       	sbiw	r28, 0x18	; 24
    1414:	04 c0       	rjmp	.+8      	; 0x141e <__umoddi3+0x54c>
    1416:	ee 0c       	add	r14, r14
    1418:	ff 1c       	adc	r15, r15
    141a:	00 1f       	adc	r16, r16
    141c:	11 1f       	adc	r17, r17
    141e:	0a 94       	dec	r0
    1420:	d2 f7       	brpl	.-12     	; 0x1416 <__umoddi3+0x544>
    1422:	e9 aa       	std	Y+49, r14	; 0x31
    1424:	fa aa       	std	Y+50, r15	; 0x32
    1426:	0b ab       	std	Y+51, r16	; 0x33
    1428:	1c ab       	std	Y+52, r17	; 0x34
    142a:	a2 1a       	sub	r10, r18
    142c:	b3 0a       	sbc	r11, r19
    142e:	c4 0a       	sbc	r12, r20
    1430:	d5 0a       	sbc	r13, r21
    1432:	32 01       	movw	r6, r4
    1434:	88 24       	eor	r8, r8
    1436:	99 24       	eor	r9, r9
    1438:	b2 01       	movw	r22, r4
    143a:	a1 01       	movw	r20, r2
    143c:	60 70       	andi	r22, 0x00	; 0
    143e:	70 70       	andi	r23, 0x00	; 0
    1440:	29 96       	adiw	r28, 0x09	; 9
    1442:	4c af       	std	Y+60, r20	; 0x3c
    1444:	5d af       	std	Y+61, r21	; 0x3d
    1446:	6e af       	std	Y+62, r22	; 0x3e
    1448:	7f af       	std	Y+63, r23	; 0x3f
    144a:	29 97       	sbiw	r28, 0x09	; 9
    144c:	c6 01       	movw	r24, r12
    144e:	b5 01       	movw	r22, r10
    1450:	a4 01       	movw	r20, r8
    1452:	93 01       	movw	r18, r6
    1454:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    1458:	7b 01       	movw	r14, r22
    145a:	8c 01       	movw	r16, r24
    145c:	c6 01       	movw	r24, r12
    145e:	b5 01       	movw	r22, r10
    1460:	a4 01       	movw	r20, r8
    1462:	93 01       	movw	r18, r6
    1464:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    1468:	ca 01       	movw	r24, r20
    146a:	b9 01       	movw	r22, r18
    146c:	29 96       	adiw	r28, 0x09	; 9
    146e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1470:	3d ad       	ldd	r19, Y+61	; 0x3d
    1472:	4e ad       	ldd	r20, Y+62	; 0x3e
    1474:	5f ad       	ldd	r21, Y+63	; 0x3f
    1476:	29 97       	sbiw	r28, 0x09	; 9
    1478:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    147c:	9b 01       	movw	r18, r22
    147e:	ac 01       	movw	r20, r24
    1480:	87 01       	movw	r16, r14
    1482:	ff 24       	eor	r15, r15
    1484:	ee 24       	eor	r14, r14
    1486:	a9 a8       	ldd	r10, Y+49	; 0x31
    1488:	ba a8       	ldd	r11, Y+50	; 0x32
    148a:	cb a8       	ldd	r12, Y+51	; 0x33
    148c:	dc a8       	ldd	r13, Y+52	; 0x34
    148e:	c6 01       	movw	r24, r12
    1490:	aa 27       	eor	r26, r26
    1492:	bb 27       	eor	r27, r27
    1494:	57 01       	movw	r10, r14
    1496:	68 01       	movw	r12, r16
    1498:	a8 2a       	or	r10, r24
    149a:	b9 2a       	or	r11, r25
    149c:	ca 2a       	or	r12, r26
    149e:	db 2a       	or	r13, r27
    14a0:	a2 16       	cp	r10, r18
    14a2:	b3 06       	cpc	r11, r19
    14a4:	c4 06       	cpc	r12, r20
    14a6:	d5 06       	cpc	r13, r21
    14a8:	90 f4       	brcc	.+36     	; 0x14ce <__umoddi3+0x5fc>
    14aa:	a2 0c       	add	r10, r2
    14ac:	b3 1c       	adc	r11, r3
    14ae:	c4 1c       	adc	r12, r4
    14b0:	d5 1c       	adc	r13, r5
    14b2:	a2 14       	cp	r10, r2
    14b4:	b3 04       	cpc	r11, r3
    14b6:	c4 04       	cpc	r12, r4
    14b8:	d5 04       	cpc	r13, r5
    14ba:	48 f0       	brcs	.+18     	; 0x14ce <__umoddi3+0x5fc>
    14bc:	a2 16       	cp	r10, r18
    14be:	b3 06       	cpc	r11, r19
    14c0:	c4 06       	cpc	r12, r20
    14c2:	d5 06       	cpc	r13, r21
    14c4:	20 f4       	brcc	.+8      	; 0x14ce <__umoddi3+0x5fc>
    14c6:	a2 0c       	add	r10, r2
    14c8:	b3 1c       	adc	r11, r3
    14ca:	c4 1c       	adc	r12, r4
    14cc:	d5 1c       	adc	r13, r5
    14ce:	a2 1a       	sub	r10, r18
    14d0:	b3 0a       	sbc	r11, r19
    14d2:	c4 0a       	sbc	r12, r20
    14d4:	d5 0a       	sbc	r13, r21
    14d6:	c6 01       	movw	r24, r12
    14d8:	b5 01       	movw	r22, r10
    14da:	a4 01       	movw	r20, r8
    14dc:	93 01       	movw	r18, r6
    14de:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    14e2:	7b 01       	movw	r14, r22
    14e4:	8c 01       	movw	r16, r24
    14e6:	c6 01       	movw	r24, r12
    14e8:	b5 01       	movw	r22, r10
    14ea:	a4 01       	movw	r20, r8
    14ec:	93 01       	movw	r18, r6
    14ee:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    14f2:	ca 01       	movw	r24, r20
    14f4:	b9 01       	movw	r22, r18
    14f6:	29 96       	adiw	r28, 0x09	; 9
    14f8:	2c ad       	ldd	r18, Y+60	; 0x3c
    14fa:	3d ad       	ldd	r19, Y+61	; 0x3d
    14fc:	4e ad       	ldd	r20, Y+62	; 0x3e
    14fe:	5f ad       	ldd	r21, Y+63	; 0x3f
    1500:	29 97       	sbiw	r28, 0x09	; 9
    1502:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    1506:	9b 01       	movw	r18, r22
    1508:	ac 01       	movw	r20, r24
    150a:	87 01       	movw	r16, r14
    150c:	ff 24       	eor	r15, r15
    150e:	ee 24       	eor	r14, r14
    1510:	89 a9       	ldd	r24, Y+49	; 0x31
    1512:	9a a9       	ldd	r25, Y+50	; 0x32
    1514:	ab a9       	ldd	r26, Y+51	; 0x33
    1516:	bc a9       	ldd	r27, Y+52	; 0x34
    1518:	a0 70       	andi	r26, 0x00	; 0
    151a:	b0 70       	andi	r27, 0x00	; 0
    151c:	e8 2a       	or	r14, r24
    151e:	f9 2a       	or	r15, r25
    1520:	0a 2b       	or	r16, r26
    1522:	1b 2b       	or	r17, r27
    1524:	e2 16       	cp	r14, r18
    1526:	f3 06       	cpc	r15, r19
    1528:	04 07       	cpc	r16, r20
    152a:	15 07       	cpc	r17, r21
    152c:	90 f4       	brcc	.+36     	; 0x1552 <__umoddi3+0x680>
    152e:	e2 0c       	add	r14, r2
    1530:	f3 1c       	adc	r15, r3
    1532:	04 1d       	adc	r16, r4
    1534:	15 1d       	adc	r17, r5
    1536:	e2 14       	cp	r14, r2
    1538:	f3 04       	cpc	r15, r3
    153a:	04 05       	cpc	r16, r4
    153c:	15 05       	cpc	r17, r5
    153e:	48 f0       	brcs	.+18     	; 0x1552 <__umoddi3+0x680>
    1540:	e2 16       	cp	r14, r18
    1542:	f3 06       	cpc	r15, r19
    1544:	04 07       	cpc	r16, r20
    1546:	15 07       	cpc	r17, r21
    1548:	20 f4       	brcc	.+8      	; 0x1552 <__umoddi3+0x680>
    154a:	e2 0c       	add	r14, r2
    154c:	f3 1c       	adc	r15, r3
    154e:	04 1d       	adc	r16, r4
    1550:	15 1d       	adc	r17, r5
    1552:	e2 1a       	sub	r14, r18
    1554:	f3 0a       	sbc	r15, r19
    1556:	04 0b       	sbc	r16, r20
    1558:	15 0b       	sbc	r17, r21
    155a:	d8 01       	movw	r26, r16
    155c:	c7 01       	movw	r24, r14
    155e:	09 ac       	ldd	r0, Y+57	; 0x39
    1560:	04 c0       	rjmp	.+8      	; 0x156a <__umoddi3+0x698>
    1562:	b6 95       	lsr	r27
    1564:	a7 95       	ror	r26
    1566:	97 95       	ror	r25
    1568:	87 95       	ror	r24
    156a:	0a 94       	dec	r0
    156c:	d2 f7       	brpl	.-12     	; 0x1562 <__umoddi3+0x690>
    156e:	89 8b       	std	Y+17, r24	; 0x11
    1570:	9a 8b       	std	Y+18, r25	; 0x12
    1572:	ab 8b       	std	Y+19, r26	; 0x13
    1574:	bc 8b       	std	Y+20, r27	; 0x14
    1576:	1d 8a       	std	Y+21, r1	; 0x15
    1578:	1e 8a       	std	Y+22, r1	; 0x16
    157a:	1f 8a       	std	Y+23, r1	; 0x17
    157c:	18 8e       	std	Y+24, r1	; 0x18
    157e:	28 2f       	mov	r18, r24
    1580:	3a 89       	ldd	r19, Y+18	; 0x12
    1582:	4b 89       	ldd	r20, Y+19	; 0x13
    1584:	5c 89       	ldd	r21, Y+20	; 0x14
    1586:	6d 89       	ldd	r22, Y+21	; 0x15
    1588:	0c c3       	rjmp	.+1560   	; 0x1ba2 <__umoddi3+0xcd0>
    158a:	6a 14       	cp	r6, r10
    158c:	7b 04       	cpc	r7, r11
    158e:	8c 04       	cpc	r8, r12
    1590:	9d 04       	cpc	r9, r13
    1592:	08 f4       	brcc	.+2      	; 0x1596 <__umoddi3+0x6c4>
    1594:	09 c3       	rjmp	.+1554   	; 0x1ba8 <__umoddi3+0xcd6>
    1596:	00 e0       	ldi	r16, 0x00	; 0
    1598:	a0 16       	cp	r10, r16
    159a:	00 e0       	ldi	r16, 0x00	; 0
    159c:	b0 06       	cpc	r11, r16
    159e:	01 e0       	ldi	r16, 0x01	; 1
    15a0:	c0 06       	cpc	r12, r16
    15a2:	00 e0       	ldi	r16, 0x00	; 0
    15a4:	d0 06       	cpc	r13, r16
    15a6:	88 f4       	brcc	.+34     	; 0x15ca <__umoddi3+0x6f8>
    15a8:	1f ef       	ldi	r17, 0xFF	; 255
    15aa:	a1 16       	cp	r10, r17
    15ac:	b1 04       	cpc	r11, r1
    15ae:	c1 04       	cpc	r12, r1
    15b0:	d1 04       	cpc	r13, r1
    15b2:	39 f0       	breq	.+14     	; 0x15c2 <__umoddi3+0x6f0>
    15b4:	30 f0       	brcs	.+12     	; 0x15c2 <__umoddi3+0x6f0>
    15b6:	28 e0       	ldi	r18, 0x08	; 8
    15b8:	e2 2e       	mov	r14, r18
    15ba:	f1 2c       	mov	r15, r1
    15bc:	01 2d       	mov	r16, r1
    15be:	11 2d       	mov	r17, r1
    15c0:	18 c0       	rjmp	.+48     	; 0x15f2 <__umoddi3+0x720>
    15c2:	ee 24       	eor	r14, r14
    15c4:	ff 24       	eor	r15, r15
    15c6:	87 01       	movw	r16, r14
    15c8:	14 c0       	rjmp	.+40     	; 0x15f2 <__umoddi3+0x720>
    15ca:	40 e0       	ldi	r20, 0x00	; 0
    15cc:	a4 16       	cp	r10, r20
    15ce:	40 e0       	ldi	r20, 0x00	; 0
    15d0:	b4 06       	cpc	r11, r20
    15d2:	40 e0       	ldi	r20, 0x00	; 0
    15d4:	c4 06       	cpc	r12, r20
    15d6:	41 e0       	ldi	r20, 0x01	; 1
    15d8:	d4 06       	cpc	r13, r20
    15da:	30 f0       	brcs	.+12     	; 0x15e8 <__umoddi3+0x716>
    15dc:	98 e1       	ldi	r25, 0x18	; 24
    15de:	e9 2e       	mov	r14, r25
    15e0:	f1 2c       	mov	r15, r1
    15e2:	01 2d       	mov	r16, r1
    15e4:	11 2d       	mov	r17, r1
    15e6:	05 c0       	rjmp	.+10     	; 0x15f2 <__umoddi3+0x720>
    15e8:	80 e1       	ldi	r24, 0x10	; 16
    15ea:	e8 2e       	mov	r14, r24
    15ec:	f1 2c       	mov	r15, r1
    15ee:	01 2d       	mov	r16, r1
    15f0:	11 2d       	mov	r17, r1
    15f2:	d6 01       	movw	r26, r12
    15f4:	c5 01       	movw	r24, r10
    15f6:	0e 2c       	mov	r0, r14
    15f8:	04 c0       	rjmp	.+8      	; 0x1602 <__umoddi3+0x730>
    15fa:	b6 95       	lsr	r27
    15fc:	a7 95       	ror	r26
    15fe:	97 95       	ror	r25
    1600:	87 95       	ror	r24
    1602:	0a 94       	dec	r0
    1604:	d2 f7       	brpl	.-12     	; 0x15fa <__umoddi3+0x728>
    1606:	82 59       	subi	r24, 0x92	; 146
    1608:	9f 4f       	sbci	r25, 0xFF	; 255
    160a:	dc 01       	movw	r26, r24
    160c:	2c 91       	ld	r18, X
    160e:	80 e2       	ldi	r24, 0x20	; 32
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	a0 e0       	ldi	r26, 0x00	; 0
    1614:	b0 e0       	ldi	r27, 0x00	; 0
    1616:	8e 19       	sub	r24, r14
    1618:	9f 09       	sbc	r25, r15
    161a:	a0 0b       	sbc	r26, r16
    161c:	b1 0b       	sbc	r27, r17
    161e:	82 1b       	sub	r24, r18
    1620:	91 09       	sbc	r25, r1
    1622:	a1 09       	sbc	r26, r1
    1624:	b1 09       	sbc	r27, r1
    1626:	00 97       	sbiw	r24, 0x00	; 0
    1628:	a1 05       	cpc	r26, r1
    162a:	b1 05       	cpc	r27, r1
    162c:	09 f0       	breq	.+2      	; 0x1630 <__umoddi3+0x75e>
    162e:	4f c0       	rjmp	.+158    	; 0x16ce <__umoddi3+0x7fc>
    1630:	a6 14       	cp	r10, r6
    1632:	b7 04       	cpc	r11, r7
    1634:	c8 04       	cpc	r12, r8
    1636:	d9 04       	cpc	r13, r9
    1638:	58 f0       	brcs	.+22     	; 0x1650 <__umoddi3+0x77e>
    163a:	6c 96       	adiw	r28, 0x1c	; 28
    163c:	ec ac       	ldd	r14, Y+60	; 0x3c
    163e:	fd ac       	ldd	r15, Y+61	; 0x3d
    1640:	0e ad       	ldd	r16, Y+62	; 0x3e
    1642:	1f ad       	ldd	r17, Y+63	; 0x3f
    1644:	6c 97       	sbiw	r28, 0x1c	; 28
    1646:	e2 14       	cp	r14, r2
    1648:	f3 04       	cpc	r15, r3
    164a:	04 05       	cpc	r16, r4
    164c:	15 05       	cpc	r17, r5
    164e:	68 f1       	brcs	.+90     	; 0x16aa <__umoddi3+0x7d8>
    1650:	6c 96       	adiw	r28, 0x1c	; 28
    1652:	ec ac       	ldd	r14, Y+60	; 0x3c
    1654:	fd ac       	ldd	r15, Y+61	; 0x3d
    1656:	0e ad       	ldd	r16, Y+62	; 0x3e
    1658:	1f ad       	ldd	r17, Y+63	; 0x3f
    165a:	6c 97       	sbiw	r28, 0x1c	; 28
    165c:	e2 18       	sub	r14, r2
    165e:	f3 08       	sbc	r15, r3
    1660:	04 09       	sbc	r16, r4
    1662:	15 09       	sbc	r17, r5
    1664:	a4 01       	movw	r20, r8
    1666:	93 01       	movw	r18, r6
    1668:	2a 19       	sub	r18, r10
    166a:	3b 09       	sbc	r19, r11
    166c:	4c 09       	sbc	r20, r12
    166e:	5d 09       	sbc	r21, r13
    1670:	aa 24       	eor	r10, r10
    1672:	bb 24       	eor	r11, r11
    1674:	65 01       	movw	r12, r10
    1676:	6c 96       	adiw	r28, 0x1c	; 28
    1678:	6c ad       	ldd	r22, Y+60	; 0x3c
    167a:	7d ad       	ldd	r23, Y+61	; 0x3d
    167c:	8e ad       	ldd	r24, Y+62	; 0x3e
    167e:	9f ad       	ldd	r25, Y+63	; 0x3f
    1680:	6c 97       	sbiw	r28, 0x1c	; 28
    1682:	6e 15       	cp	r22, r14
    1684:	7f 05       	cpc	r23, r15
    1686:	80 07       	cpc	r24, r16
    1688:	91 07       	cpc	r25, r17
    168a:	28 f4       	brcc	.+10     	; 0x1696 <__umoddi3+0x7c4>
    168c:	b1 e0       	ldi	r27, 0x01	; 1
    168e:	ab 2e       	mov	r10, r27
    1690:	b1 2c       	mov	r11, r1
    1692:	c1 2c       	mov	r12, r1
    1694:	d1 2c       	mov	r13, r1
    1696:	da 01       	movw	r26, r20
    1698:	c9 01       	movw	r24, r18
    169a:	8a 19       	sub	r24, r10
    169c:	9b 09       	sbc	r25, r11
    169e:	ac 09       	sbc	r26, r12
    16a0:	bd 09       	sbc	r27, r13
    16a2:	8d ab       	std	Y+53, r24	; 0x35
    16a4:	9e ab       	std	Y+54, r25	; 0x36
    16a6:	af ab       	std	Y+55, r26	; 0x37
    16a8:	b8 af       	std	Y+56, r27	; 0x38
    16aa:	e9 8a       	std	Y+17, r14	; 0x11
    16ac:	fa 8a       	std	Y+18, r15	; 0x12
    16ae:	0b 8b       	std	Y+19, r16	; 0x13
    16b0:	1c 8b       	std	Y+20, r17	; 0x14
    16b2:	6d a8       	ldd	r6, Y+53	; 0x35
    16b4:	7e a8       	ldd	r7, Y+54	; 0x36
    16b6:	8f a8       	ldd	r8, Y+55	; 0x37
    16b8:	98 ac       	ldd	r9, Y+56	; 0x38
    16ba:	6d 8a       	std	Y+21, r6	; 0x15
    16bc:	7e 8a       	std	Y+22, r7	; 0x16
    16be:	8f 8a       	std	Y+23, r8	; 0x17
    16c0:	98 8e       	std	Y+24, r9	; 0x18
    16c2:	2e 2d       	mov	r18, r14
    16c4:	3a 89       	ldd	r19, Y+18	; 0x12
    16c6:	4b 89       	ldd	r20, Y+19	; 0x13
    16c8:	5c 89       	ldd	r21, Y+20	; 0x14
    16ca:	6d a9       	ldd	r22, Y+53	; 0x35
    16cc:	6a c2       	rjmp	.+1236   	; 0x1ba2 <__umoddi3+0xcd0>
    16ce:	67 96       	adiw	r28, 0x17	; 23
    16d0:	8f af       	std	Y+63, r24	; 0x3f
    16d2:	67 97       	sbiw	r28, 0x17	; 23
    16d4:	a6 01       	movw	r20, r12
    16d6:	95 01       	movw	r18, r10
    16d8:	08 2e       	mov	r0, r24
    16da:	04 c0       	rjmp	.+8      	; 0x16e4 <__umoddi3+0x812>
    16dc:	22 0f       	add	r18, r18
    16de:	33 1f       	adc	r19, r19
    16e0:	44 1f       	adc	r20, r20
    16e2:	55 1f       	adc	r21, r21
    16e4:	0a 94       	dec	r0
    16e6:	d2 f7       	brpl	.-12     	; 0x16dc <__umoddi3+0x80a>
    16e8:	a0 e2       	ldi	r26, 0x20	; 32
    16ea:	aa 2e       	mov	r10, r26
    16ec:	a8 1a       	sub	r10, r24
    16ee:	66 96       	adiw	r28, 0x16	; 22
    16f0:	af ae       	std	Y+63, r10	; 0x3f
    16f2:	66 97       	sbiw	r28, 0x16	; 22
    16f4:	d2 01       	movw	r26, r4
    16f6:	c1 01       	movw	r24, r2
    16f8:	04 c0       	rjmp	.+8      	; 0x1702 <__umoddi3+0x830>
    16fa:	b6 95       	lsr	r27
    16fc:	a7 95       	ror	r26
    16fe:	97 95       	ror	r25
    1700:	87 95       	ror	r24
    1702:	aa 94       	dec	r10
    1704:	d2 f7       	brpl	.-12     	; 0x16fa <__umoddi3+0x828>
    1706:	6c 01       	movw	r12, r24
    1708:	7d 01       	movw	r14, r26
    170a:	c2 2a       	or	r12, r18
    170c:	d3 2a       	or	r13, r19
    170e:	e4 2a       	or	r14, r20
    1710:	f5 2a       	or	r15, r21
    1712:	c9 a6       	std	Y+41, r12	; 0x29
    1714:	da a6       	std	Y+42, r13	; 0x2a
    1716:	eb a6       	std	Y+43, r14	; 0x2b
    1718:	fc a6       	std	Y+44, r15	; 0x2c
    171a:	82 01       	movw	r16, r4
    171c:	71 01       	movw	r14, r2
    171e:	67 96       	adiw	r28, 0x17	; 23
    1720:	0f ac       	ldd	r0, Y+63	; 0x3f
    1722:	67 97       	sbiw	r28, 0x17	; 23
    1724:	04 c0       	rjmp	.+8      	; 0x172e <__umoddi3+0x85c>
    1726:	ee 0c       	add	r14, r14
    1728:	ff 1c       	adc	r15, r15
    172a:	00 1f       	adc	r16, r16
    172c:	11 1f       	adc	r17, r17
    172e:	0a 94       	dec	r0
    1730:	d2 f7       	brpl	.-12     	; 0x1726 <__umoddi3+0x854>
    1732:	ed a2       	std	Y+37, r14	; 0x25
    1734:	fe a2       	std	Y+38, r15	; 0x26
    1736:	0f a3       	std	Y+39, r16	; 0x27
    1738:	18 a7       	std	Y+40, r17	; 0x28
    173a:	64 01       	movw	r12, r8
    173c:	53 01       	movw	r10, r6
    173e:	66 96       	adiw	r28, 0x16	; 22
    1740:	0f ac       	ldd	r0, Y+63	; 0x3f
    1742:	66 97       	sbiw	r28, 0x16	; 22
    1744:	04 c0       	rjmp	.+8      	; 0x174e <__umoddi3+0x87c>
    1746:	d6 94       	lsr	r13
    1748:	c7 94       	ror	r12
    174a:	b7 94       	ror	r11
    174c:	a7 94       	ror	r10
    174e:	0a 94       	dec	r0
    1750:	d2 f7       	brpl	.-12     	; 0x1746 <__umoddi3+0x874>
    1752:	a4 01       	movw	r20, r8
    1754:	93 01       	movw	r18, r6
    1756:	67 96       	adiw	r28, 0x17	; 23
    1758:	0f ac       	ldd	r0, Y+63	; 0x3f
    175a:	67 97       	sbiw	r28, 0x17	; 23
    175c:	04 c0       	rjmp	.+8      	; 0x1766 <__umoddi3+0x894>
    175e:	22 0f       	add	r18, r18
    1760:	33 1f       	adc	r19, r19
    1762:	44 1f       	adc	r20, r20
    1764:	55 1f       	adc	r21, r21
    1766:	0a 94       	dec	r0
    1768:	d2 f7       	brpl	.-12     	; 0x175e <__umoddi3+0x88c>
    176a:	6c 96       	adiw	r28, 0x1c	; 28
    176c:	8c ad       	ldd	r24, Y+60	; 0x3c
    176e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1770:	ae ad       	ldd	r26, Y+62	; 0x3e
    1772:	bf ad       	ldd	r27, Y+63	; 0x3f
    1774:	6c 97       	sbiw	r28, 0x1c	; 28
    1776:	66 96       	adiw	r28, 0x16	; 22
    1778:	0f ac       	ldd	r0, Y+63	; 0x3f
    177a:	66 97       	sbiw	r28, 0x16	; 22
    177c:	04 c0       	rjmp	.+8      	; 0x1786 <__umoddi3+0x8b4>
    177e:	b6 95       	lsr	r27
    1780:	a7 95       	ror	r26
    1782:	97 95       	ror	r25
    1784:	87 95       	ror	r24
    1786:	0a 94       	dec	r0
    1788:	d2 f7       	brpl	.-12     	; 0x177e <__umoddi3+0x8ac>
    178a:	3c 01       	movw	r6, r24
    178c:	4d 01       	movw	r8, r26
    178e:	62 2a       	or	r6, r18
    1790:	73 2a       	or	r7, r19
    1792:	84 2a       	or	r8, r20
    1794:	95 2a       	or	r9, r21
    1796:	69 a2       	std	Y+33, r6	; 0x21
    1798:	7a a2       	std	Y+34, r7	; 0x22
    179a:	8b a2       	std	Y+35, r8	; 0x23
    179c:	9c a2       	std	Y+36, r9	; 0x24
    179e:	6c 96       	adiw	r28, 0x1c	; 28
    17a0:	ec ac       	ldd	r14, Y+60	; 0x3c
    17a2:	fd ac       	ldd	r15, Y+61	; 0x3d
    17a4:	0e ad       	ldd	r16, Y+62	; 0x3e
    17a6:	1f ad       	ldd	r17, Y+63	; 0x3f
    17a8:	6c 97       	sbiw	r28, 0x1c	; 28
    17aa:	67 96       	adiw	r28, 0x17	; 23
    17ac:	0f ac       	ldd	r0, Y+63	; 0x3f
    17ae:	67 97       	sbiw	r28, 0x17	; 23
    17b0:	04 c0       	rjmp	.+8      	; 0x17ba <__umoddi3+0x8e8>
    17b2:	ee 0c       	add	r14, r14
    17b4:	ff 1c       	adc	r15, r15
    17b6:	00 1f       	adc	r16, r16
    17b8:	11 1f       	adc	r17, r17
    17ba:	0a 94       	dec	r0
    17bc:	d2 f7       	brpl	.-12     	; 0x17b2 <__umoddi3+0x8e0>
    17be:	ed 8e       	std	Y+29, r14	; 0x1d
    17c0:	fe 8e       	std	Y+30, r15	; 0x1e
    17c2:	0f 8f       	std	Y+31, r16	; 0x1f
    17c4:	18 a3       	std	Y+32, r17	; 0x20
    17c6:	49 a5       	ldd	r20, Y+41	; 0x29
    17c8:	5a a5       	ldd	r21, Y+42	; 0x2a
    17ca:	6b a5       	ldd	r22, Y+43	; 0x2b
    17cc:	7c a5       	ldd	r23, Y+44	; 0x2c
    17ce:	3b 01       	movw	r6, r22
    17d0:	88 24       	eor	r8, r8
    17d2:	99 24       	eor	r9, r9
    17d4:	60 70       	andi	r22, 0x00	; 0
    17d6:	70 70       	andi	r23, 0x00	; 0
    17d8:	2d 96       	adiw	r28, 0x0d	; 13
    17da:	4c af       	std	Y+60, r20	; 0x3c
    17dc:	5d af       	std	Y+61, r21	; 0x3d
    17de:	6e af       	std	Y+62, r22	; 0x3e
    17e0:	7f af       	std	Y+63, r23	; 0x3f
    17e2:	2d 97       	sbiw	r28, 0x0d	; 13
    17e4:	c6 01       	movw	r24, r12
    17e6:	b5 01       	movw	r22, r10
    17e8:	a4 01       	movw	r20, r8
    17ea:	93 01       	movw	r18, r6
    17ec:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    17f0:	7b 01       	movw	r14, r22
    17f2:	8c 01       	movw	r16, r24
    17f4:	c6 01       	movw	r24, r12
    17f6:	b5 01       	movw	r22, r10
    17f8:	a4 01       	movw	r20, r8
    17fa:	93 01       	movw	r18, r6
    17fc:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    1800:	c9 01       	movw	r24, r18
    1802:	da 01       	movw	r26, r20
    1804:	1c 01       	movw	r2, r24
    1806:	2d 01       	movw	r4, r26
    1808:	c2 01       	movw	r24, r4
    180a:	b1 01       	movw	r22, r2
    180c:	2d 96       	adiw	r28, 0x0d	; 13
    180e:	2c ad       	ldd	r18, Y+60	; 0x3c
    1810:	3d ad       	ldd	r19, Y+61	; 0x3d
    1812:	4e ad       	ldd	r20, Y+62	; 0x3e
    1814:	5f ad       	ldd	r21, Y+63	; 0x3f
    1816:	2d 97       	sbiw	r28, 0x0d	; 13
    1818:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    181c:	9b 01       	movw	r18, r22
    181e:	ac 01       	movw	r20, r24
    1820:	87 01       	movw	r16, r14
    1822:	ff 24       	eor	r15, r15
    1824:	ee 24       	eor	r14, r14
    1826:	a9 a0       	ldd	r10, Y+33	; 0x21
    1828:	ba a0       	ldd	r11, Y+34	; 0x22
    182a:	cb a0       	ldd	r12, Y+35	; 0x23
    182c:	dc a0       	ldd	r13, Y+36	; 0x24
    182e:	c6 01       	movw	r24, r12
    1830:	aa 27       	eor	r26, r26
    1832:	bb 27       	eor	r27, r27
    1834:	57 01       	movw	r10, r14
    1836:	68 01       	movw	r12, r16
    1838:	a8 2a       	or	r10, r24
    183a:	b9 2a       	or	r11, r25
    183c:	ca 2a       	or	r12, r26
    183e:	db 2a       	or	r13, r27
    1840:	a2 16       	cp	r10, r18
    1842:	b3 06       	cpc	r11, r19
    1844:	c4 06       	cpc	r12, r20
    1846:	d5 06       	cpc	r13, r21
    1848:	00 f5       	brcc	.+64     	; 0x188a <__umoddi3+0x9b8>
    184a:	08 94       	sec
    184c:	21 08       	sbc	r2, r1
    184e:	31 08       	sbc	r3, r1
    1850:	41 08       	sbc	r4, r1
    1852:	51 08       	sbc	r5, r1
    1854:	e9 a4       	ldd	r14, Y+41	; 0x29
    1856:	fa a4       	ldd	r15, Y+42	; 0x2a
    1858:	0b a5       	ldd	r16, Y+43	; 0x2b
    185a:	1c a5       	ldd	r17, Y+44	; 0x2c
    185c:	ae 0c       	add	r10, r14
    185e:	bf 1c       	adc	r11, r15
    1860:	c0 1e       	adc	r12, r16
    1862:	d1 1e       	adc	r13, r17
    1864:	ae 14       	cp	r10, r14
    1866:	bf 04       	cpc	r11, r15
    1868:	c0 06       	cpc	r12, r16
    186a:	d1 06       	cpc	r13, r17
    186c:	70 f0       	brcs	.+28     	; 0x188a <__umoddi3+0x9b8>
    186e:	a2 16       	cp	r10, r18
    1870:	b3 06       	cpc	r11, r19
    1872:	c4 06       	cpc	r12, r20
    1874:	d5 06       	cpc	r13, r21
    1876:	48 f4       	brcc	.+18     	; 0x188a <__umoddi3+0x9b8>
    1878:	08 94       	sec
    187a:	21 08       	sbc	r2, r1
    187c:	31 08       	sbc	r3, r1
    187e:	41 08       	sbc	r4, r1
    1880:	51 08       	sbc	r5, r1
    1882:	ae 0c       	add	r10, r14
    1884:	bf 1c       	adc	r11, r15
    1886:	c0 1e       	adc	r12, r16
    1888:	d1 1e       	adc	r13, r17
    188a:	a2 1a       	sub	r10, r18
    188c:	b3 0a       	sbc	r11, r19
    188e:	c4 0a       	sbc	r12, r20
    1890:	d5 0a       	sbc	r13, r21
    1892:	c6 01       	movw	r24, r12
    1894:	b5 01       	movw	r22, r10
    1896:	a4 01       	movw	r20, r8
    1898:	93 01       	movw	r18, r6
    189a:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    189e:	7b 01       	movw	r14, r22
    18a0:	8c 01       	movw	r16, r24
    18a2:	c6 01       	movw	r24, r12
    18a4:	b5 01       	movw	r22, r10
    18a6:	a4 01       	movw	r20, r8
    18a8:	93 01       	movw	r18, r6
    18aa:	0e 94 b1 2a 	call	0x5562	; 0x5562 <__udivmodsi4>
    18ae:	c9 01       	movw	r24, r18
    18b0:	da 01       	movw	r26, r20
    18b2:	3c 01       	movw	r6, r24
    18b4:	4d 01       	movw	r8, r26
    18b6:	c4 01       	movw	r24, r8
    18b8:	b3 01       	movw	r22, r6
    18ba:	2d 96       	adiw	r28, 0x0d	; 13
    18bc:	2c ad       	ldd	r18, Y+60	; 0x3c
    18be:	3d ad       	ldd	r19, Y+61	; 0x3d
    18c0:	4e ad       	ldd	r20, Y+62	; 0x3e
    18c2:	5f ad       	ldd	r21, Y+63	; 0x3f
    18c4:	2d 97       	sbiw	r28, 0x0d	; 13
    18c6:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    18ca:	9b 01       	movw	r18, r22
    18cc:	ac 01       	movw	r20, r24
    18ce:	87 01       	movw	r16, r14
    18d0:	ff 24       	eor	r15, r15
    18d2:	ee 24       	eor	r14, r14
    18d4:	89 a1       	ldd	r24, Y+33	; 0x21
    18d6:	9a a1       	ldd	r25, Y+34	; 0x22
    18d8:	ab a1       	ldd	r26, Y+35	; 0x23
    18da:	bc a1       	ldd	r27, Y+36	; 0x24
    18dc:	a0 70       	andi	r26, 0x00	; 0
    18de:	b0 70       	andi	r27, 0x00	; 0
    18e0:	57 01       	movw	r10, r14
    18e2:	68 01       	movw	r12, r16
    18e4:	a8 2a       	or	r10, r24
    18e6:	b9 2a       	or	r11, r25
    18e8:	ca 2a       	or	r12, r26
    18ea:	db 2a       	or	r13, r27
    18ec:	a2 16       	cp	r10, r18
    18ee:	b3 06       	cpc	r11, r19
    18f0:	c4 06       	cpc	r12, r20
    18f2:	d5 06       	cpc	r13, r21
    18f4:	00 f5       	brcc	.+64     	; 0x1936 <__umoddi3+0xa64>
    18f6:	08 94       	sec
    18f8:	61 08       	sbc	r6, r1
    18fa:	71 08       	sbc	r7, r1
    18fc:	81 08       	sbc	r8, r1
    18fe:	91 08       	sbc	r9, r1
    1900:	69 a5       	ldd	r22, Y+41	; 0x29
    1902:	7a a5       	ldd	r23, Y+42	; 0x2a
    1904:	8b a5       	ldd	r24, Y+43	; 0x2b
    1906:	9c a5       	ldd	r25, Y+44	; 0x2c
    1908:	a6 0e       	add	r10, r22
    190a:	b7 1e       	adc	r11, r23
    190c:	c8 1e       	adc	r12, r24
    190e:	d9 1e       	adc	r13, r25
    1910:	a6 16       	cp	r10, r22
    1912:	b7 06       	cpc	r11, r23
    1914:	c8 06       	cpc	r12, r24
    1916:	d9 06       	cpc	r13, r25
    1918:	70 f0       	brcs	.+28     	; 0x1936 <__umoddi3+0xa64>
    191a:	a2 16       	cp	r10, r18
    191c:	b3 06       	cpc	r11, r19
    191e:	c4 06       	cpc	r12, r20
    1920:	d5 06       	cpc	r13, r21
    1922:	48 f4       	brcc	.+18     	; 0x1936 <__umoddi3+0xa64>
    1924:	08 94       	sec
    1926:	61 08       	sbc	r6, r1
    1928:	71 08       	sbc	r7, r1
    192a:	81 08       	sbc	r8, r1
    192c:	91 08       	sbc	r9, r1
    192e:	a6 0e       	add	r10, r22
    1930:	b7 1e       	adc	r11, r23
    1932:	c8 1e       	adc	r12, r24
    1934:	d9 1e       	adc	r13, r25
    1936:	d6 01       	movw	r26, r12
    1938:	c5 01       	movw	r24, r10
    193a:	82 1b       	sub	r24, r18
    193c:	93 0b       	sbc	r25, r19
    193e:	a4 0b       	sbc	r26, r20
    1940:	b5 0b       	sbc	r27, r21
    1942:	89 8f       	std	Y+25, r24	; 0x19
    1944:	9a 8f       	std	Y+26, r25	; 0x1a
    1946:	ab 8f       	std	Y+27, r26	; 0x1b
    1948:	bc 8f       	std	Y+28, r27	; 0x1c
    194a:	d1 01       	movw	r26, r2
    194c:	99 27       	eor	r25, r25
    194e:	88 27       	eor	r24, r24
    1950:	84 01       	movw	r16, r8
    1952:	73 01       	movw	r14, r6
    1954:	e8 2a       	or	r14, r24
    1956:	f9 2a       	or	r15, r25
    1958:	0a 2b       	or	r16, r26
    195a:	1b 2b       	or	r17, r27
    195c:	4f ef       	ldi	r20, 0xFF	; 255
    195e:	a4 2e       	mov	r10, r20
    1960:	4f ef       	ldi	r20, 0xFF	; 255
    1962:	b4 2e       	mov	r11, r20
    1964:	c1 2c       	mov	r12, r1
    1966:	d1 2c       	mov	r13, r1
    1968:	ae 20       	and	r10, r14
    196a:	bf 20       	and	r11, r15
    196c:	c0 22       	and	r12, r16
    196e:	d1 22       	and	r13, r17
    1970:	78 01       	movw	r14, r16
    1972:	00 27       	eor	r16, r16
    1974:	11 27       	eor	r17, r17
    1976:	6d a0       	ldd	r6, Y+37	; 0x25
    1978:	7e a0       	ldd	r7, Y+38	; 0x26
    197a:	8f a0       	ldd	r8, Y+39	; 0x27
    197c:	98 a4       	ldd	r9, Y+40	; 0x28
    197e:	4f ef       	ldi	r20, 0xFF	; 255
    1980:	5f ef       	ldi	r21, 0xFF	; 255
    1982:	60 e0       	ldi	r22, 0x00	; 0
    1984:	70 e0       	ldi	r23, 0x00	; 0
    1986:	64 22       	and	r6, r20
    1988:	75 22       	and	r7, r21
    198a:	86 22       	and	r8, r22
    198c:	97 22       	and	r9, r23
    198e:	8d a1       	ldd	r24, Y+37	; 0x25
    1990:	9e a1       	ldd	r25, Y+38	; 0x26
    1992:	af a1       	ldd	r26, Y+39	; 0x27
    1994:	b8 a5       	ldd	r27, Y+40	; 0x28
    1996:	bd 01       	movw	r22, r26
    1998:	88 27       	eor	r24, r24
    199a:	99 27       	eor	r25, r25
    199c:	65 96       	adiw	r28, 0x15	; 21
    199e:	6c af       	std	Y+60, r22	; 0x3c
    19a0:	7d af       	std	Y+61, r23	; 0x3d
    19a2:	8e af       	std	Y+62, r24	; 0x3e
    19a4:	9f af       	std	Y+63, r25	; 0x3f
    19a6:	65 97       	sbiw	r28, 0x15	; 21
    19a8:	c6 01       	movw	r24, r12
    19aa:	b5 01       	movw	r22, r10
    19ac:	a4 01       	movw	r20, r8
    19ae:	93 01       	movw	r18, r6
    19b0:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    19b4:	61 96       	adiw	r28, 0x11	; 17
    19b6:	6c af       	std	Y+60, r22	; 0x3c
    19b8:	7d af       	std	Y+61, r23	; 0x3d
    19ba:	8e af       	std	Y+62, r24	; 0x3e
    19bc:	9f af       	std	Y+63, r25	; 0x3f
    19be:	61 97       	sbiw	r28, 0x11	; 17
    19c0:	c6 01       	movw	r24, r12
    19c2:	b5 01       	movw	r22, r10
    19c4:	65 96       	adiw	r28, 0x15	; 21
    19c6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19c8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ca:	4e ad       	ldd	r20, Y+62	; 0x3e
    19cc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19ce:	65 97       	sbiw	r28, 0x15	; 21
    19d0:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    19d4:	1b 01       	movw	r2, r22
    19d6:	2c 01       	movw	r4, r24
    19d8:	c8 01       	movw	r24, r16
    19da:	b7 01       	movw	r22, r14
    19dc:	a4 01       	movw	r20, r8
    19de:	93 01       	movw	r18, r6
    19e0:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    19e4:	5b 01       	movw	r10, r22
    19e6:	6c 01       	movw	r12, r24
    19e8:	c8 01       	movw	r24, r16
    19ea:	b7 01       	movw	r22, r14
    19ec:	65 96       	adiw	r28, 0x15	; 21
    19ee:	2c ad       	ldd	r18, Y+60	; 0x3c
    19f0:	3d ad       	ldd	r19, Y+61	; 0x3d
    19f2:	4e ad       	ldd	r20, Y+62	; 0x3e
    19f4:	5f ad       	ldd	r21, Y+63	; 0x3f
    19f6:	65 97       	sbiw	r28, 0x15	; 21
    19f8:	0e 94 92 2a 	call	0x5524	; 0x5524 <__mulsi3>
    19fc:	7b 01       	movw	r14, r22
    19fe:	8c 01       	movw	r16, r24
    1a00:	a6 01       	movw	r20, r12
    1a02:	95 01       	movw	r18, r10
    1a04:	22 0d       	add	r18, r2
    1a06:	33 1d       	adc	r19, r3
    1a08:	44 1d       	adc	r20, r4
    1a0a:	55 1d       	adc	r21, r5
    1a0c:	61 96       	adiw	r28, 0x11	; 17
    1a0e:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a10:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a12:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a14:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a16:	61 97       	sbiw	r28, 0x11	; 17
    1a18:	c4 01       	movw	r24, r8
    1a1a:	aa 27       	eor	r26, r26
    1a1c:	bb 27       	eor	r27, r27
    1a1e:	28 0f       	add	r18, r24
    1a20:	39 1f       	adc	r19, r25
    1a22:	4a 1f       	adc	r20, r26
    1a24:	5b 1f       	adc	r21, r27
    1a26:	2a 15       	cp	r18, r10
    1a28:	3b 05       	cpc	r19, r11
    1a2a:	4c 05       	cpc	r20, r12
    1a2c:	5d 05       	cpc	r21, r13
    1a2e:	48 f4       	brcc	.+18     	; 0x1a42 <__umoddi3+0xb70>
    1a30:	81 2c       	mov	r8, r1
    1a32:	91 2c       	mov	r9, r1
    1a34:	e1 e0       	ldi	r30, 0x01	; 1
    1a36:	ae 2e       	mov	r10, r30
    1a38:	b1 2c       	mov	r11, r1
    1a3a:	e8 0c       	add	r14, r8
    1a3c:	f9 1c       	adc	r15, r9
    1a3e:	0a 1d       	adc	r16, r10
    1a40:	1b 1d       	adc	r17, r11
    1a42:	ca 01       	movw	r24, r20
    1a44:	aa 27       	eor	r26, r26
    1a46:	bb 27       	eor	r27, r27
    1a48:	57 01       	movw	r10, r14
    1a4a:	68 01       	movw	r12, r16
    1a4c:	a8 0e       	add	r10, r24
    1a4e:	b9 1e       	adc	r11, r25
    1a50:	ca 1e       	adc	r12, r26
    1a52:	db 1e       	adc	r13, r27
    1a54:	a9 01       	movw	r20, r18
    1a56:	33 27       	eor	r19, r19
    1a58:	22 27       	eor	r18, r18
    1a5a:	61 96       	adiw	r28, 0x11	; 17
    1a5c:	8c ad       	ldd	r24, Y+60	; 0x3c
    1a5e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1a60:	ae ad       	ldd	r26, Y+62	; 0x3e
    1a62:	bf ad       	ldd	r27, Y+63	; 0x3f
    1a64:	61 97       	sbiw	r28, 0x11	; 17
    1a66:	a0 70       	andi	r26, 0x00	; 0
    1a68:	b0 70       	andi	r27, 0x00	; 0
    1a6a:	28 0f       	add	r18, r24
    1a6c:	39 1f       	adc	r19, r25
    1a6e:	4a 1f       	adc	r20, r26
    1a70:	5b 1f       	adc	r21, r27
    1a72:	e9 8c       	ldd	r14, Y+25	; 0x19
    1a74:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1a76:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1a78:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1a7a:	ea 14       	cp	r14, r10
    1a7c:	fb 04       	cpc	r15, r11
    1a7e:	0c 05       	cpc	r16, r12
    1a80:	1d 05       	cpc	r17, r13
    1a82:	70 f0       	brcs	.+28     	; 0x1aa0 <__umoddi3+0xbce>
    1a84:	ae 14       	cp	r10, r14
    1a86:	bf 04       	cpc	r11, r15
    1a88:	c0 06       	cpc	r12, r16
    1a8a:	d1 06       	cpc	r13, r17
    1a8c:	69 f5       	brne	.+90     	; 0x1ae8 <__umoddi3+0xc16>
    1a8e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a90:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a92:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a94:	98 a1       	ldd	r25, Y+32	; 0x20
    1a96:	62 17       	cp	r22, r18
    1a98:	73 07       	cpc	r23, r19
    1a9a:	84 07       	cpc	r24, r20
    1a9c:	95 07       	cpc	r25, r21
    1a9e:	20 f5       	brcc	.+72     	; 0x1ae8 <__umoddi3+0xc16>
    1aa0:	da 01       	movw	r26, r20
    1aa2:	c9 01       	movw	r24, r18
    1aa4:	6d a0       	ldd	r6, Y+37	; 0x25
    1aa6:	7e a0       	ldd	r7, Y+38	; 0x26
    1aa8:	8f a0       	ldd	r8, Y+39	; 0x27
    1aaa:	98 a4       	ldd	r9, Y+40	; 0x28
    1aac:	86 19       	sub	r24, r6
    1aae:	97 09       	sbc	r25, r7
    1ab0:	a8 09       	sbc	r26, r8
    1ab2:	b9 09       	sbc	r27, r9
    1ab4:	e9 a4       	ldd	r14, Y+41	; 0x29
    1ab6:	fa a4       	ldd	r15, Y+42	; 0x2a
    1ab8:	0b a5       	ldd	r16, Y+43	; 0x2b
    1aba:	1c a5       	ldd	r17, Y+44	; 0x2c
    1abc:	ae 18       	sub	r10, r14
    1abe:	bf 08       	sbc	r11, r15
    1ac0:	c0 0a       	sbc	r12, r16
    1ac2:	d1 0a       	sbc	r13, r17
    1ac4:	ee 24       	eor	r14, r14
    1ac6:	ff 24       	eor	r15, r15
    1ac8:	87 01       	movw	r16, r14
    1aca:	28 17       	cp	r18, r24
    1acc:	39 07       	cpc	r19, r25
    1ace:	4a 07       	cpc	r20, r26
    1ad0:	5b 07       	cpc	r21, r27
    1ad2:	28 f4       	brcc	.+10     	; 0x1ade <__umoddi3+0xc0c>
    1ad4:	21 e0       	ldi	r18, 0x01	; 1
    1ad6:	e2 2e       	mov	r14, r18
    1ad8:	f1 2c       	mov	r15, r1
    1ada:	01 2d       	mov	r16, r1
    1adc:	11 2d       	mov	r17, r1
    1ade:	ae 18       	sub	r10, r14
    1ae0:	bf 08       	sbc	r11, r15
    1ae2:	c0 0a       	sbc	r12, r16
    1ae4:	d1 0a       	sbc	r13, r17
    1ae6:	02 c0       	rjmp	.+4      	; 0x1aec <__umoddi3+0xc1a>
    1ae8:	da 01       	movw	r26, r20
    1aea:	c9 01       	movw	r24, r18
    1aec:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1aee:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1af0:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1af2:	98 a0       	ldd	r9, Y+32	; 0x20
    1af4:	68 1a       	sub	r6, r24
    1af6:	79 0a       	sbc	r7, r25
    1af8:	8a 0a       	sbc	r8, r26
    1afa:	9b 0a       	sbc	r9, r27
    1afc:	49 8d       	ldd	r20, Y+25	; 0x19
    1afe:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b00:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b02:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b04:	4a 19       	sub	r20, r10
    1b06:	5b 09       	sbc	r21, r11
    1b08:	6c 09       	sbc	r22, r12
    1b0a:	7d 09       	sbc	r23, r13
    1b0c:	5a 01       	movw	r10, r20
    1b0e:	6b 01       	movw	r12, r22
    1b10:	22 24       	eor	r2, r2
    1b12:	33 24       	eor	r3, r3
    1b14:	21 01       	movw	r4, r2
    1b16:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b18:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b1a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b1c:	98 a1       	ldd	r25, Y+32	; 0x20
    1b1e:	66 15       	cp	r22, r6
    1b20:	77 05       	cpc	r23, r7
    1b22:	88 05       	cpc	r24, r8
    1b24:	99 05       	cpc	r25, r9
    1b26:	28 f4       	brcc	.+10     	; 0x1b32 <__umoddi3+0xc60>
    1b28:	81 e0       	ldi	r24, 0x01	; 1
    1b2a:	28 2e       	mov	r2, r24
    1b2c:	31 2c       	mov	r3, r1
    1b2e:	41 2c       	mov	r4, r1
    1b30:	51 2c       	mov	r5, r1
    1b32:	86 01       	movw	r16, r12
    1b34:	75 01       	movw	r14, r10
    1b36:	e2 18       	sub	r14, r2
    1b38:	f3 08       	sbc	r15, r3
    1b3a:	04 09       	sbc	r16, r4
    1b3c:	15 09       	sbc	r17, r5
    1b3e:	a8 01       	movw	r20, r16
    1b40:	97 01       	movw	r18, r14
    1b42:	66 96       	adiw	r28, 0x16	; 22
    1b44:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b46:	66 97       	sbiw	r28, 0x16	; 22
    1b48:	04 c0       	rjmp	.+8      	; 0x1b52 <__umoddi3+0xc80>
    1b4a:	22 0f       	add	r18, r18
    1b4c:	33 1f       	adc	r19, r19
    1b4e:	44 1f       	adc	r20, r20
    1b50:	55 1f       	adc	r21, r21
    1b52:	0a 94       	dec	r0
    1b54:	d2 f7       	brpl	.-12     	; 0x1b4a <__umoddi3+0xc78>
    1b56:	d4 01       	movw	r26, r8
    1b58:	c3 01       	movw	r24, r6
    1b5a:	67 96       	adiw	r28, 0x17	; 23
    1b5c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b5e:	67 97       	sbiw	r28, 0x17	; 23
    1b60:	04 c0       	rjmp	.+8      	; 0x1b6a <__umoddi3+0xc98>
    1b62:	b6 95       	lsr	r27
    1b64:	a7 95       	ror	r26
    1b66:	97 95       	ror	r25
    1b68:	87 95       	ror	r24
    1b6a:	0a 94       	dec	r0
    1b6c:	d2 f7       	brpl	.-12     	; 0x1b62 <__umoddi3+0xc90>
    1b6e:	28 2b       	or	r18, r24
    1b70:	39 2b       	or	r19, r25
    1b72:	4a 2b       	or	r20, r26
    1b74:	5b 2b       	or	r21, r27
    1b76:	29 8b       	std	Y+17, r18	; 0x11
    1b78:	3a 8b       	std	Y+18, r19	; 0x12
    1b7a:	4b 8b       	std	Y+19, r20	; 0x13
    1b7c:	5c 8b       	std	Y+20, r21	; 0x14
    1b7e:	67 96       	adiw	r28, 0x17	; 23
    1b80:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b82:	67 97       	sbiw	r28, 0x17	; 23
    1b84:	04 c0       	rjmp	.+8      	; 0x1b8e <__umoddi3+0xcbc>
    1b86:	16 95       	lsr	r17
    1b88:	07 95       	ror	r16
    1b8a:	f7 94       	ror	r15
    1b8c:	e7 94       	ror	r14
    1b8e:	0a 94       	dec	r0
    1b90:	d2 f7       	brpl	.-12     	; 0x1b86 <__umoddi3+0xcb4>
    1b92:	ed 8a       	std	Y+21, r14	; 0x15
    1b94:	fe 8a       	std	Y+22, r15	; 0x16
    1b96:	0f 8b       	std	Y+23, r16	; 0x17
    1b98:	18 8f       	std	Y+24, r17	; 0x18
    1b9a:	3a 89       	ldd	r19, Y+18	; 0x12
    1b9c:	4b 89       	ldd	r20, Y+19	; 0x13
    1b9e:	5c 89       	ldd	r21, Y+20	; 0x14
    1ba0:	6e 2d       	mov	r22, r14
    1ba2:	7e 89       	ldd	r23, Y+22	; 0x16
    1ba4:	8f 89       	ldd	r24, Y+23	; 0x17
    1ba6:	98 8d       	ldd	r25, Y+24	; 0x18
    1ba8:	c5 5a       	subi	r28, 0xA5	; 165
    1baa:	df 4f       	sbci	r29, 0xFF	; 255
    1bac:	e2 e1       	ldi	r30, 0x12	; 18
    1bae:	0c 94 ef 2a 	jmp	0x55de	; 0x55de <__epilogue_restores__>

00001bb2 <_fpadd_parts>:
    1bb2:	a0 e0       	ldi	r26, 0x00	; 0
    1bb4:	b0 e0       	ldi	r27, 0x00	; 0
    1bb6:	ef ed       	ldi	r30, 0xDF	; 223
    1bb8:	fd e0       	ldi	r31, 0x0D	; 13
    1bba:	0c 94 d3 2a 	jmp	0x55a6	; 0x55a6 <__prologue_saves__>
    1bbe:	dc 01       	movw	r26, r24
    1bc0:	2b 01       	movw	r4, r22
    1bc2:	fa 01       	movw	r30, r20
    1bc4:	9c 91       	ld	r25, X
    1bc6:	92 30       	cpi	r25, 0x02	; 2
    1bc8:	08 f4       	brcc	.+2      	; 0x1bcc <_fpadd_parts+0x1a>
    1bca:	39 c1       	rjmp	.+626    	; 0x1e3e <_fpadd_parts+0x28c>
    1bcc:	eb 01       	movw	r28, r22
    1bce:	88 81       	ld	r24, Y
    1bd0:	82 30       	cpi	r24, 0x02	; 2
    1bd2:	08 f4       	brcc	.+2      	; 0x1bd6 <_fpadd_parts+0x24>
    1bd4:	33 c1       	rjmp	.+614    	; 0x1e3c <_fpadd_parts+0x28a>
    1bd6:	94 30       	cpi	r25, 0x04	; 4
    1bd8:	69 f4       	brne	.+26     	; 0x1bf4 <_fpadd_parts+0x42>
    1bda:	84 30       	cpi	r24, 0x04	; 4
    1bdc:	09 f0       	breq	.+2      	; 0x1be0 <_fpadd_parts+0x2e>
    1bde:	2f c1       	rjmp	.+606    	; 0x1e3e <_fpadd_parts+0x28c>
    1be0:	11 96       	adiw	r26, 0x01	; 1
    1be2:	9c 91       	ld	r25, X
    1be4:	11 97       	sbiw	r26, 0x01	; 1
    1be6:	89 81       	ldd	r24, Y+1	; 0x01
    1be8:	98 17       	cp	r25, r24
    1bea:	09 f4       	brne	.+2      	; 0x1bee <_fpadd_parts+0x3c>
    1bec:	28 c1       	rjmp	.+592    	; 0x1e3e <_fpadd_parts+0x28c>
    1bee:	a6 e6       	ldi	r26, 0x66	; 102
    1bf0:	b0 e0       	ldi	r27, 0x00	; 0
    1bf2:	25 c1       	rjmp	.+586    	; 0x1e3e <_fpadd_parts+0x28c>
    1bf4:	84 30       	cpi	r24, 0x04	; 4
    1bf6:	09 f4       	brne	.+2      	; 0x1bfa <_fpadd_parts+0x48>
    1bf8:	21 c1       	rjmp	.+578    	; 0x1e3c <_fpadd_parts+0x28a>
    1bfa:	82 30       	cpi	r24, 0x02	; 2
    1bfc:	a9 f4       	brne	.+42     	; 0x1c28 <_fpadd_parts+0x76>
    1bfe:	92 30       	cpi	r25, 0x02	; 2
    1c00:	09 f0       	breq	.+2      	; 0x1c04 <_fpadd_parts+0x52>
    1c02:	1d c1       	rjmp	.+570    	; 0x1e3e <_fpadd_parts+0x28c>
    1c04:	9a 01       	movw	r18, r20
    1c06:	ad 01       	movw	r20, r26
    1c08:	88 e0       	ldi	r24, 0x08	; 8
    1c0a:	ea 01       	movw	r28, r20
    1c0c:	09 90       	ld	r0, Y+
    1c0e:	ae 01       	movw	r20, r28
    1c10:	e9 01       	movw	r28, r18
    1c12:	09 92       	st	Y+, r0
    1c14:	9e 01       	movw	r18, r28
    1c16:	81 50       	subi	r24, 0x01	; 1
    1c18:	c1 f7       	brne	.-16     	; 0x1c0a <_fpadd_parts+0x58>
    1c1a:	e2 01       	movw	r28, r4
    1c1c:	89 81       	ldd	r24, Y+1	; 0x01
    1c1e:	11 96       	adiw	r26, 0x01	; 1
    1c20:	9c 91       	ld	r25, X
    1c22:	89 23       	and	r24, r25
    1c24:	81 83       	std	Z+1, r24	; 0x01
    1c26:	08 c1       	rjmp	.+528    	; 0x1e38 <_fpadd_parts+0x286>
    1c28:	92 30       	cpi	r25, 0x02	; 2
    1c2a:	09 f4       	brne	.+2      	; 0x1c2e <_fpadd_parts+0x7c>
    1c2c:	07 c1       	rjmp	.+526    	; 0x1e3c <_fpadd_parts+0x28a>
    1c2e:	12 96       	adiw	r26, 0x02	; 2
    1c30:	2d 90       	ld	r2, X+
    1c32:	3c 90       	ld	r3, X
    1c34:	13 97       	sbiw	r26, 0x03	; 3
    1c36:	eb 01       	movw	r28, r22
    1c38:	8a 81       	ldd	r24, Y+2	; 0x02
    1c3a:	9b 81       	ldd	r25, Y+3	; 0x03
    1c3c:	14 96       	adiw	r26, 0x04	; 4
    1c3e:	ad 90       	ld	r10, X+
    1c40:	bd 90       	ld	r11, X+
    1c42:	cd 90       	ld	r12, X+
    1c44:	dc 90       	ld	r13, X
    1c46:	17 97       	sbiw	r26, 0x07	; 7
    1c48:	ec 80       	ldd	r14, Y+4	; 0x04
    1c4a:	fd 80       	ldd	r15, Y+5	; 0x05
    1c4c:	0e 81       	ldd	r16, Y+6	; 0x06
    1c4e:	1f 81       	ldd	r17, Y+7	; 0x07
    1c50:	91 01       	movw	r18, r2
    1c52:	28 1b       	sub	r18, r24
    1c54:	39 0b       	sbc	r19, r25
    1c56:	b9 01       	movw	r22, r18
    1c58:	37 ff       	sbrs	r19, 7
    1c5a:	04 c0       	rjmp	.+8      	; 0x1c64 <_fpadd_parts+0xb2>
    1c5c:	66 27       	eor	r22, r22
    1c5e:	77 27       	eor	r23, r23
    1c60:	62 1b       	sub	r22, r18
    1c62:	73 0b       	sbc	r23, r19
    1c64:	60 32       	cpi	r22, 0x20	; 32
    1c66:	71 05       	cpc	r23, r1
    1c68:	0c f0       	brlt	.+2      	; 0x1c6c <_fpadd_parts+0xba>
    1c6a:	61 c0       	rjmp	.+194    	; 0x1d2e <_fpadd_parts+0x17c>
    1c6c:	12 16       	cp	r1, r18
    1c6e:	13 06       	cpc	r1, r19
    1c70:	6c f5       	brge	.+90     	; 0x1ccc <_fpadd_parts+0x11a>
    1c72:	37 01       	movw	r6, r14
    1c74:	48 01       	movw	r8, r16
    1c76:	06 2e       	mov	r0, r22
    1c78:	04 c0       	rjmp	.+8      	; 0x1c82 <_fpadd_parts+0xd0>
    1c7a:	96 94       	lsr	r9
    1c7c:	87 94       	ror	r8
    1c7e:	77 94       	ror	r7
    1c80:	67 94       	ror	r6
    1c82:	0a 94       	dec	r0
    1c84:	d2 f7       	brpl	.-12     	; 0x1c7a <_fpadd_parts+0xc8>
    1c86:	21 e0       	ldi	r18, 0x01	; 1
    1c88:	30 e0       	ldi	r19, 0x00	; 0
    1c8a:	40 e0       	ldi	r20, 0x00	; 0
    1c8c:	50 e0       	ldi	r21, 0x00	; 0
    1c8e:	04 c0       	rjmp	.+8      	; 0x1c98 <_fpadd_parts+0xe6>
    1c90:	22 0f       	add	r18, r18
    1c92:	33 1f       	adc	r19, r19
    1c94:	44 1f       	adc	r20, r20
    1c96:	55 1f       	adc	r21, r21
    1c98:	6a 95       	dec	r22
    1c9a:	d2 f7       	brpl	.-12     	; 0x1c90 <_fpadd_parts+0xde>
    1c9c:	21 50       	subi	r18, 0x01	; 1
    1c9e:	30 40       	sbci	r19, 0x00	; 0
    1ca0:	40 40       	sbci	r20, 0x00	; 0
    1ca2:	50 40       	sbci	r21, 0x00	; 0
    1ca4:	2e 21       	and	r18, r14
    1ca6:	3f 21       	and	r19, r15
    1ca8:	40 23       	and	r20, r16
    1caa:	51 23       	and	r21, r17
    1cac:	21 15       	cp	r18, r1
    1cae:	31 05       	cpc	r19, r1
    1cb0:	41 05       	cpc	r20, r1
    1cb2:	51 05       	cpc	r21, r1
    1cb4:	21 f0       	breq	.+8      	; 0x1cbe <_fpadd_parts+0x10c>
    1cb6:	21 e0       	ldi	r18, 0x01	; 1
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	40 e0       	ldi	r20, 0x00	; 0
    1cbc:	50 e0       	ldi	r21, 0x00	; 0
    1cbe:	79 01       	movw	r14, r18
    1cc0:	8a 01       	movw	r16, r20
    1cc2:	e6 28       	or	r14, r6
    1cc4:	f7 28       	or	r15, r7
    1cc6:	08 29       	or	r16, r8
    1cc8:	19 29       	or	r17, r9
    1cca:	3c c0       	rjmp	.+120    	; 0x1d44 <_fpadd_parts+0x192>
    1ccc:	23 2b       	or	r18, r19
    1cce:	d1 f1       	breq	.+116    	; 0x1d44 <_fpadd_parts+0x192>
    1cd0:	26 0e       	add	r2, r22
    1cd2:	37 1e       	adc	r3, r23
    1cd4:	35 01       	movw	r6, r10
    1cd6:	46 01       	movw	r8, r12
    1cd8:	06 2e       	mov	r0, r22
    1cda:	04 c0       	rjmp	.+8      	; 0x1ce4 <_fpadd_parts+0x132>
    1cdc:	96 94       	lsr	r9
    1cde:	87 94       	ror	r8
    1ce0:	77 94       	ror	r7
    1ce2:	67 94       	ror	r6
    1ce4:	0a 94       	dec	r0
    1ce6:	d2 f7       	brpl	.-12     	; 0x1cdc <_fpadd_parts+0x12a>
    1ce8:	21 e0       	ldi	r18, 0x01	; 1
    1cea:	30 e0       	ldi	r19, 0x00	; 0
    1cec:	40 e0       	ldi	r20, 0x00	; 0
    1cee:	50 e0       	ldi	r21, 0x00	; 0
    1cf0:	04 c0       	rjmp	.+8      	; 0x1cfa <_fpadd_parts+0x148>
    1cf2:	22 0f       	add	r18, r18
    1cf4:	33 1f       	adc	r19, r19
    1cf6:	44 1f       	adc	r20, r20
    1cf8:	55 1f       	adc	r21, r21
    1cfa:	6a 95       	dec	r22
    1cfc:	d2 f7       	brpl	.-12     	; 0x1cf2 <_fpadd_parts+0x140>
    1cfe:	21 50       	subi	r18, 0x01	; 1
    1d00:	30 40       	sbci	r19, 0x00	; 0
    1d02:	40 40       	sbci	r20, 0x00	; 0
    1d04:	50 40       	sbci	r21, 0x00	; 0
    1d06:	2a 21       	and	r18, r10
    1d08:	3b 21       	and	r19, r11
    1d0a:	4c 21       	and	r20, r12
    1d0c:	5d 21       	and	r21, r13
    1d0e:	21 15       	cp	r18, r1
    1d10:	31 05       	cpc	r19, r1
    1d12:	41 05       	cpc	r20, r1
    1d14:	51 05       	cpc	r21, r1
    1d16:	21 f0       	breq	.+8      	; 0x1d20 <_fpadd_parts+0x16e>
    1d18:	21 e0       	ldi	r18, 0x01	; 1
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	40 e0       	ldi	r20, 0x00	; 0
    1d1e:	50 e0       	ldi	r21, 0x00	; 0
    1d20:	59 01       	movw	r10, r18
    1d22:	6a 01       	movw	r12, r20
    1d24:	a6 28       	or	r10, r6
    1d26:	b7 28       	or	r11, r7
    1d28:	c8 28       	or	r12, r8
    1d2a:	d9 28       	or	r13, r9
    1d2c:	0b c0       	rjmp	.+22     	; 0x1d44 <_fpadd_parts+0x192>
    1d2e:	82 15       	cp	r24, r2
    1d30:	93 05       	cpc	r25, r3
    1d32:	2c f0       	brlt	.+10     	; 0x1d3e <_fpadd_parts+0x18c>
    1d34:	1c 01       	movw	r2, r24
    1d36:	aa 24       	eor	r10, r10
    1d38:	bb 24       	eor	r11, r11
    1d3a:	65 01       	movw	r12, r10
    1d3c:	03 c0       	rjmp	.+6      	; 0x1d44 <_fpadd_parts+0x192>
    1d3e:	ee 24       	eor	r14, r14
    1d40:	ff 24       	eor	r15, r15
    1d42:	87 01       	movw	r16, r14
    1d44:	11 96       	adiw	r26, 0x01	; 1
    1d46:	9c 91       	ld	r25, X
    1d48:	d2 01       	movw	r26, r4
    1d4a:	11 96       	adiw	r26, 0x01	; 1
    1d4c:	8c 91       	ld	r24, X
    1d4e:	98 17       	cp	r25, r24
    1d50:	09 f4       	brne	.+2      	; 0x1d54 <_fpadd_parts+0x1a2>
    1d52:	45 c0       	rjmp	.+138    	; 0x1dde <_fpadd_parts+0x22c>
    1d54:	99 23       	and	r25, r25
    1d56:	39 f0       	breq	.+14     	; 0x1d66 <_fpadd_parts+0x1b4>
    1d58:	a8 01       	movw	r20, r16
    1d5a:	97 01       	movw	r18, r14
    1d5c:	2a 19       	sub	r18, r10
    1d5e:	3b 09       	sbc	r19, r11
    1d60:	4c 09       	sbc	r20, r12
    1d62:	5d 09       	sbc	r21, r13
    1d64:	06 c0       	rjmp	.+12     	; 0x1d72 <_fpadd_parts+0x1c0>
    1d66:	a6 01       	movw	r20, r12
    1d68:	95 01       	movw	r18, r10
    1d6a:	2e 19       	sub	r18, r14
    1d6c:	3f 09       	sbc	r19, r15
    1d6e:	40 0b       	sbc	r20, r16
    1d70:	51 0b       	sbc	r21, r17
    1d72:	57 fd       	sbrc	r21, 7
    1d74:	08 c0       	rjmp	.+16     	; 0x1d86 <_fpadd_parts+0x1d4>
    1d76:	11 82       	std	Z+1, r1	; 0x01
    1d78:	33 82       	std	Z+3, r3	; 0x03
    1d7a:	22 82       	std	Z+2, r2	; 0x02
    1d7c:	24 83       	std	Z+4, r18	; 0x04
    1d7e:	35 83       	std	Z+5, r19	; 0x05
    1d80:	46 83       	std	Z+6, r20	; 0x06
    1d82:	57 83       	std	Z+7, r21	; 0x07
    1d84:	1d c0       	rjmp	.+58     	; 0x1dc0 <_fpadd_parts+0x20e>
    1d86:	81 e0       	ldi	r24, 0x01	; 1
    1d88:	81 83       	std	Z+1, r24	; 0x01
    1d8a:	33 82       	std	Z+3, r3	; 0x03
    1d8c:	22 82       	std	Z+2, r2	; 0x02
    1d8e:	88 27       	eor	r24, r24
    1d90:	99 27       	eor	r25, r25
    1d92:	dc 01       	movw	r26, r24
    1d94:	82 1b       	sub	r24, r18
    1d96:	93 0b       	sbc	r25, r19
    1d98:	a4 0b       	sbc	r26, r20
    1d9a:	b5 0b       	sbc	r27, r21
    1d9c:	84 83       	std	Z+4, r24	; 0x04
    1d9e:	95 83       	std	Z+5, r25	; 0x05
    1da0:	a6 83       	std	Z+6, r26	; 0x06
    1da2:	b7 83       	std	Z+7, r27	; 0x07
    1da4:	0d c0       	rjmp	.+26     	; 0x1dc0 <_fpadd_parts+0x20e>
    1da6:	22 0f       	add	r18, r18
    1da8:	33 1f       	adc	r19, r19
    1daa:	44 1f       	adc	r20, r20
    1dac:	55 1f       	adc	r21, r21
    1dae:	24 83       	std	Z+4, r18	; 0x04
    1db0:	35 83       	std	Z+5, r19	; 0x05
    1db2:	46 83       	std	Z+6, r20	; 0x06
    1db4:	57 83       	std	Z+7, r21	; 0x07
    1db6:	82 81       	ldd	r24, Z+2	; 0x02
    1db8:	93 81       	ldd	r25, Z+3	; 0x03
    1dba:	01 97       	sbiw	r24, 0x01	; 1
    1dbc:	93 83       	std	Z+3, r25	; 0x03
    1dbe:	82 83       	std	Z+2, r24	; 0x02
    1dc0:	24 81       	ldd	r18, Z+4	; 0x04
    1dc2:	35 81       	ldd	r19, Z+5	; 0x05
    1dc4:	46 81       	ldd	r20, Z+6	; 0x06
    1dc6:	57 81       	ldd	r21, Z+7	; 0x07
    1dc8:	da 01       	movw	r26, r20
    1dca:	c9 01       	movw	r24, r18
    1dcc:	01 97       	sbiw	r24, 0x01	; 1
    1dce:	a1 09       	sbc	r26, r1
    1dd0:	b1 09       	sbc	r27, r1
    1dd2:	8f 5f       	subi	r24, 0xFF	; 255
    1dd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1dd6:	af 4f       	sbci	r26, 0xFF	; 255
    1dd8:	bf 43       	sbci	r27, 0x3F	; 63
    1dda:	28 f3       	brcs	.-54     	; 0x1da6 <_fpadd_parts+0x1f4>
    1ddc:	0b c0       	rjmp	.+22     	; 0x1df4 <_fpadd_parts+0x242>
    1dde:	91 83       	std	Z+1, r25	; 0x01
    1de0:	33 82       	std	Z+3, r3	; 0x03
    1de2:	22 82       	std	Z+2, r2	; 0x02
    1de4:	ea 0c       	add	r14, r10
    1de6:	fb 1c       	adc	r15, r11
    1de8:	0c 1d       	adc	r16, r12
    1dea:	1d 1d       	adc	r17, r13
    1dec:	e4 82       	std	Z+4, r14	; 0x04
    1dee:	f5 82       	std	Z+5, r15	; 0x05
    1df0:	06 83       	std	Z+6, r16	; 0x06
    1df2:	17 83       	std	Z+7, r17	; 0x07
    1df4:	83 e0       	ldi	r24, 0x03	; 3
    1df6:	80 83       	st	Z, r24
    1df8:	24 81       	ldd	r18, Z+4	; 0x04
    1dfa:	35 81       	ldd	r19, Z+5	; 0x05
    1dfc:	46 81       	ldd	r20, Z+6	; 0x06
    1dfe:	57 81       	ldd	r21, Z+7	; 0x07
    1e00:	57 ff       	sbrs	r21, 7
    1e02:	1a c0       	rjmp	.+52     	; 0x1e38 <_fpadd_parts+0x286>
    1e04:	c9 01       	movw	r24, r18
    1e06:	aa 27       	eor	r26, r26
    1e08:	97 fd       	sbrc	r25, 7
    1e0a:	a0 95       	com	r26
    1e0c:	ba 2f       	mov	r27, r26
    1e0e:	81 70       	andi	r24, 0x01	; 1
    1e10:	90 70       	andi	r25, 0x00	; 0
    1e12:	a0 70       	andi	r26, 0x00	; 0
    1e14:	b0 70       	andi	r27, 0x00	; 0
    1e16:	56 95       	lsr	r21
    1e18:	47 95       	ror	r20
    1e1a:	37 95       	ror	r19
    1e1c:	27 95       	ror	r18
    1e1e:	82 2b       	or	r24, r18
    1e20:	93 2b       	or	r25, r19
    1e22:	a4 2b       	or	r26, r20
    1e24:	b5 2b       	or	r27, r21
    1e26:	84 83       	std	Z+4, r24	; 0x04
    1e28:	95 83       	std	Z+5, r25	; 0x05
    1e2a:	a6 83       	std	Z+6, r26	; 0x06
    1e2c:	b7 83       	std	Z+7, r27	; 0x07
    1e2e:	82 81       	ldd	r24, Z+2	; 0x02
    1e30:	93 81       	ldd	r25, Z+3	; 0x03
    1e32:	01 96       	adiw	r24, 0x01	; 1
    1e34:	93 83       	std	Z+3, r25	; 0x03
    1e36:	82 83       	std	Z+2, r24	; 0x02
    1e38:	df 01       	movw	r26, r30
    1e3a:	01 c0       	rjmp	.+2      	; 0x1e3e <_fpadd_parts+0x28c>
    1e3c:	d2 01       	movw	r26, r4
    1e3e:	cd 01       	movw	r24, r26
    1e40:	cd b7       	in	r28, 0x3d	; 61
    1e42:	de b7       	in	r29, 0x3e	; 62
    1e44:	e2 e1       	ldi	r30, 0x12	; 18
    1e46:	0c 94 ef 2a 	jmp	0x55de	; 0x55de <__epilogue_restores__>

00001e4a <__subsf3>:
    1e4a:	a0 e2       	ldi	r26, 0x20	; 32
    1e4c:	b0 e0       	ldi	r27, 0x00	; 0
    1e4e:	eb e2       	ldi	r30, 0x2B	; 43
    1e50:	ff e0       	ldi	r31, 0x0F	; 15
    1e52:	0c 94 df 2a 	jmp	0x55be	; 0x55be <__prologue_saves__+0x18>
    1e56:	69 83       	std	Y+1, r22	; 0x01
    1e58:	7a 83       	std	Y+2, r23	; 0x02
    1e5a:	8b 83       	std	Y+3, r24	; 0x03
    1e5c:	9c 83       	std	Y+4, r25	; 0x04
    1e5e:	2d 83       	std	Y+5, r18	; 0x05
    1e60:	3e 83       	std	Y+6, r19	; 0x06
    1e62:	4f 83       	std	Y+7, r20	; 0x07
    1e64:	58 87       	std	Y+8, r21	; 0x08
    1e66:	e9 e0       	ldi	r30, 0x09	; 9
    1e68:	ee 2e       	mov	r14, r30
    1e6a:	f1 2c       	mov	r15, r1
    1e6c:	ec 0e       	add	r14, r28
    1e6e:	fd 1e       	adc	r15, r29
    1e70:	ce 01       	movw	r24, r28
    1e72:	01 96       	adiw	r24, 0x01	; 1
    1e74:	b7 01       	movw	r22, r14
    1e76:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    1e7a:	8e 01       	movw	r16, r28
    1e7c:	0f 5e       	subi	r16, 0xEF	; 239
    1e7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e80:	ce 01       	movw	r24, r28
    1e82:	05 96       	adiw	r24, 0x05	; 5
    1e84:	b8 01       	movw	r22, r16
    1e86:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    1e8a:	8a 89       	ldd	r24, Y+18	; 0x12
    1e8c:	91 e0       	ldi	r25, 0x01	; 1
    1e8e:	89 27       	eor	r24, r25
    1e90:	8a 8b       	std	Y+18, r24	; 0x12
    1e92:	c7 01       	movw	r24, r14
    1e94:	b8 01       	movw	r22, r16
    1e96:	ae 01       	movw	r20, r28
    1e98:	47 5e       	subi	r20, 0xE7	; 231
    1e9a:	5f 4f       	sbci	r21, 0xFF	; 255
    1e9c:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_fpadd_parts>
    1ea0:	0e 94 0e 12 	call	0x241c	; 0x241c <__pack_f>
    1ea4:	a0 96       	adiw	r28, 0x20	; 32
    1ea6:	e6 e0       	ldi	r30, 0x06	; 6
    1ea8:	0c 94 fb 2a 	jmp	0x55f6	; 0x55f6 <__epilogue_restores__+0x18>

00001eac <__addsf3>:
    1eac:	a0 e2       	ldi	r26, 0x20	; 32
    1eae:	b0 e0       	ldi	r27, 0x00	; 0
    1eb0:	ec e5       	ldi	r30, 0x5C	; 92
    1eb2:	ff e0       	ldi	r31, 0x0F	; 15
    1eb4:	0c 94 df 2a 	jmp	0x55be	; 0x55be <__prologue_saves__+0x18>
    1eb8:	69 83       	std	Y+1, r22	; 0x01
    1eba:	7a 83       	std	Y+2, r23	; 0x02
    1ebc:	8b 83       	std	Y+3, r24	; 0x03
    1ebe:	9c 83       	std	Y+4, r25	; 0x04
    1ec0:	2d 83       	std	Y+5, r18	; 0x05
    1ec2:	3e 83       	std	Y+6, r19	; 0x06
    1ec4:	4f 83       	std	Y+7, r20	; 0x07
    1ec6:	58 87       	std	Y+8, r21	; 0x08
    1ec8:	f9 e0       	ldi	r31, 0x09	; 9
    1eca:	ef 2e       	mov	r14, r31
    1ecc:	f1 2c       	mov	r15, r1
    1ece:	ec 0e       	add	r14, r28
    1ed0:	fd 1e       	adc	r15, r29
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	01 96       	adiw	r24, 0x01	; 1
    1ed6:	b7 01       	movw	r22, r14
    1ed8:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    1edc:	8e 01       	movw	r16, r28
    1ede:	0f 5e       	subi	r16, 0xEF	; 239
    1ee0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ee2:	ce 01       	movw	r24, r28
    1ee4:	05 96       	adiw	r24, 0x05	; 5
    1ee6:	b8 01       	movw	r22, r16
    1ee8:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    1eec:	c7 01       	movw	r24, r14
    1eee:	b8 01       	movw	r22, r16
    1ef0:	ae 01       	movw	r20, r28
    1ef2:	47 5e       	subi	r20, 0xE7	; 231
    1ef4:	5f 4f       	sbci	r21, 0xFF	; 255
    1ef6:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_fpadd_parts>
    1efa:	0e 94 0e 12 	call	0x241c	; 0x241c <__pack_f>
    1efe:	a0 96       	adiw	r28, 0x20	; 32
    1f00:	e6 e0       	ldi	r30, 0x06	; 6
    1f02:	0c 94 fb 2a 	jmp	0x55f6	; 0x55f6 <__epilogue_restores__+0x18>

00001f06 <__mulsf3>:
    1f06:	a0 e2       	ldi	r26, 0x20	; 32
    1f08:	b0 e0       	ldi	r27, 0x00	; 0
    1f0a:	e9 e8       	ldi	r30, 0x89	; 137
    1f0c:	ff e0       	ldi	r31, 0x0F	; 15
    1f0e:	0c 94 d3 2a 	jmp	0x55a6	; 0x55a6 <__prologue_saves__>
    1f12:	69 83       	std	Y+1, r22	; 0x01
    1f14:	7a 83       	std	Y+2, r23	; 0x02
    1f16:	8b 83       	std	Y+3, r24	; 0x03
    1f18:	9c 83       	std	Y+4, r25	; 0x04
    1f1a:	2d 83       	std	Y+5, r18	; 0x05
    1f1c:	3e 83       	std	Y+6, r19	; 0x06
    1f1e:	4f 83       	std	Y+7, r20	; 0x07
    1f20:	58 87       	std	Y+8, r21	; 0x08
    1f22:	ce 01       	movw	r24, r28
    1f24:	01 96       	adiw	r24, 0x01	; 1
    1f26:	be 01       	movw	r22, r28
    1f28:	67 5f       	subi	r22, 0xF7	; 247
    1f2a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f2c:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    1f30:	ce 01       	movw	r24, r28
    1f32:	05 96       	adiw	r24, 0x05	; 5
    1f34:	be 01       	movw	r22, r28
    1f36:	6f 5e       	subi	r22, 0xEF	; 239
    1f38:	7f 4f       	sbci	r23, 0xFF	; 255
    1f3a:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    1f3e:	99 85       	ldd	r25, Y+9	; 0x09
    1f40:	92 30       	cpi	r25, 0x02	; 2
    1f42:	88 f0       	brcs	.+34     	; 0x1f66 <__mulsf3+0x60>
    1f44:	89 89       	ldd	r24, Y+17	; 0x11
    1f46:	82 30       	cpi	r24, 0x02	; 2
    1f48:	c8 f0       	brcs	.+50     	; 0x1f7c <__mulsf3+0x76>
    1f4a:	94 30       	cpi	r25, 0x04	; 4
    1f4c:	19 f4       	brne	.+6      	; 0x1f54 <__mulsf3+0x4e>
    1f4e:	82 30       	cpi	r24, 0x02	; 2
    1f50:	51 f4       	brne	.+20     	; 0x1f66 <__mulsf3+0x60>
    1f52:	04 c0       	rjmp	.+8      	; 0x1f5c <__mulsf3+0x56>
    1f54:	84 30       	cpi	r24, 0x04	; 4
    1f56:	29 f4       	brne	.+10     	; 0x1f62 <__mulsf3+0x5c>
    1f58:	92 30       	cpi	r25, 0x02	; 2
    1f5a:	81 f4       	brne	.+32     	; 0x1f7c <__mulsf3+0x76>
    1f5c:	86 e6       	ldi	r24, 0x66	; 102
    1f5e:	90 e0       	ldi	r25, 0x00	; 0
    1f60:	c6 c0       	rjmp	.+396    	; 0x20ee <__mulsf3+0x1e8>
    1f62:	92 30       	cpi	r25, 0x02	; 2
    1f64:	49 f4       	brne	.+18     	; 0x1f78 <__mulsf3+0x72>
    1f66:	20 e0       	ldi	r18, 0x00	; 0
    1f68:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f6a:	8a 89       	ldd	r24, Y+18	; 0x12
    1f6c:	98 13       	cpse	r25, r24
    1f6e:	21 e0       	ldi	r18, 0x01	; 1
    1f70:	2a 87       	std	Y+10, r18	; 0x0a
    1f72:	ce 01       	movw	r24, r28
    1f74:	09 96       	adiw	r24, 0x09	; 9
    1f76:	bb c0       	rjmp	.+374    	; 0x20ee <__mulsf3+0x1e8>
    1f78:	82 30       	cpi	r24, 0x02	; 2
    1f7a:	49 f4       	brne	.+18     	; 0x1f8e <__mulsf3+0x88>
    1f7c:	20 e0       	ldi	r18, 0x00	; 0
    1f7e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1f80:	8a 89       	ldd	r24, Y+18	; 0x12
    1f82:	98 13       	cpse	r25, r24
    1f84:	21 e0       	ldi	r18, 0x01	; 1
    1f86:	2a 8b       	std	Y+18, r18	; 0x12
    1f88:	ce 01       	movw	r24, r28
    1f8a:	41 96       	adiw	r24, 0x11	; 17
    1f8c:	b0 c0       	rjmp	.+352    	; 0x20ee <__mulsf3+0x1e8>
    1f8e:	2d 84       	ldd	r2, Y+13	; 0x0d
    1f90:	3e 84       	ldd	r3, Y+14	; 0x0e
    1f92:	4f 84       	ldd	r4, Y+15	; 0x0f
    1f94:	58 88       	ldd	r5, Y+16	; 0x10
    1f96:	6d 88       	ldd	r6, Y+21	; 0x15
    1f98:	7e 88       	ldd	r7, Y+22	; 0x16
    1f9a:	8f 88       	ldd	r8, Y+23	; 0x17
    1f9c:	98 8c       	ldd	r9, Y+24	; 0x18
    1f9e:	ee 24       	eor	r14, r14
    1fa0:	ff 24       	eor	r15, r15
    1fa2:	87 01       	movw	r16, r14
    1fa4:	aa 24       	eor	r10, r10
    1fa6:	bb 24       	eor	r11, r11
    1fa8:	65 01       	movw	r12, r10
    1faa:	40 e0       	ldi	r20, 0x00	; 0
    1fac:	50 e0       	ldi	r21, 0x00	; 0
    1fae:	60 e0       	ldi	r22, 0x00	; 0
    1fb0:	70 e0       	ldi	r23, 0x00	; 0
    1fb2:	e0 e0       	ldi	r30, 0x00	; 0
    1fb4:	f0 e0       	ldi	r31, 0x00	; 0
    1fb6:	c1 01       	movw	r24, r2
    1fb8:	81 70       	andi	r24, 0x01	; 1
    1fba:	90 70       	andi	r25, 0x00	; 0
    1fbc:	89 2b       	or	r24, r25
    1fbe:	e9 f0       	breq	.+58     	; 0x1ffa <__mulsf3+0xf4>
    1fc0:	e6 0c       	add	r14, r6
    1fc2:	f7 1c       	adc	r15, r7
    1fc4:	08 1d       	adc	r16, r8
    1fc6:	19 1d       	adc	r17, r9
    1fc8:	9a 01       	movw	r18, r20
    1fca:	ab 01       	movw	r20, r22
    1fcc:	2a 0d       	add	r18, r10
    1fce:	3b 1d       	adc	r19, r11
    1fd0:	4c 1d       	adc	r20, r12
    1fd2:	5d 1d       	adc	r21, r13
    1fd4:	80 e0       	ldi	r24, 0x00	; 0
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	a0 e0       	ldi	r26, 0x00	; 0
    1fda:	b0 e0       	ldi	r27, 0x00	; 0
    1fdc:	e6 14       	cp	r14, r6
    1fde:	f7 04       	cpc	r15, r7
    1fe0:	08 05       	cpc	r16, r8
    1fe2:	19 05       	cpc	r17, r9
    1fe4:	20 f4       	brcc	.+8      	; 0x1fee <__mulsf3+0xe8>
    1fe6:	81 e0       	ldi	r24, 0x01	; 1
    1fe8:	90 e0       	ldi	r25, 0x00	; 0
    1fea:	a0 e0       	ldi	r26, 0x00	; 0
    1fec:	b0 e0       	ldi	r27, 0x00	; 0
    1fee:	ba 01       	movw	r22, r20
    1ff0:	a9 01       	movw	r20, r18
    1ff2:	48 0f       	add	r20, r24
    1ff4:	59 1f       	adc	r21, r25
    1ff6:	6a 1f       	adc	r22, r26
    1ff8:	7b 1f       	adc	r23, r27
    1ffa:	aa 0c       	add	r10, r10
    1ffc:	bb 1c       	adc	r11, r11
    1ffe:	cc 1c       	adc	r12, r12
    2000:	dd 1c       	adc	r13, r13
    2002:	97 fe       	sbrs	r9, 7
    2004:	08 c0       	rjmp	.+16     	; 0x2016 <__mulsf3+0x110>
    2006:	81 e0       	ldi	r24, 0x01	; 1
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	a0 e0       	ldi	r26, 0x00	; 0
    200c:	b0 e0       	ldi	r27, 0x00	; 0
    200e:	a8 2a       	or	r10, r24
    2010:	b9 2a       	or	r11, r25
    2012:	ca 2a       	or	r12, r26
    2014:	db 2a       	or	r13, r27
    2016:	31 96       	adiw	r30, 0x01	; 1
    2018:	e0 32       	cpi	r30, 0x20	; 32
    201a:	f1 05       	cpc	r31, r1
    201c:	49 f0       	breq	.+18     	; 0x2030 <__mulsf3+0x12a>
    201e:	66 0c       	add	r6, r6
    2020:	77 1c       	adc	r7, r7
    2022:	88 1c       	adc	r8, r8
    2024:	99 1c       	adc	r9, r9
    2026:	56 94       	lsr	r5
    2028:	47 94       	ror	r4
    202a:	37 94       	ror	r3
    202c:	27 94       	ror	r2
    202e:	c3 cf       	rjmp	.-122    	; 0x1fb6 <__mulsf3+0xb0>
    2030:	fa 85       	ldd	r31, Y+10	; 0x0a
    2032:	ea 89       	ldd	r30, Y+18	; 0x12
    2034:	2b 89       	ldd	r18, Y+19	; 0x13
    2036:	3c 89       	ldd	r19, Y+20	; 0x14
    2038:	8b 85       	ldd	r24, Y+11	; 0x0b
    203a:	9c 85       	ldd	r25, Y+12	; 0x0c
    203c:	28 0f       	add	r18, r24
    203e:	39 1f       	adc	r19, r25
    2040:	2e 5f       	subi	r18, 0xFE	; 254
    2042:	3f 4f       	sbci	r19, 0xFF	; 255
    2044:	17 c0       	rjmp	.+46     	; 0x2074 <__mulsf3+0x16e>
    2046:	ca 01       	movw	r24, r20
    2048:	81 70       	andi	r24, 0x01	; 1
    204a:	90 70       	andi	r25, 0x00	; 0
    204c:	89 2b       	or	r24, r25
    204e:	61 f0       	breq	.+24     	; 0x2068 <__mulsf3+0x162>
    2050:	16 95       	lsr	r17
    2052:	07 95       	ror	r16
    2054:	f7 94       	ror	r15
    2056:	e7 94       	ror	r14
    2058:	80 e0       	ldi	r24, 0x00	; 0
    205a:	90 e0       	ldi	r25, 0x00	; 0
    205c:	a0 e0       	ldi	r26, 0x00	; 0
    205e:	b0 e8       	ldi	r27, 0x80	; 128
    2060:	e8 2a       	or	r14, r24
    2062:	f9 2a       	or	r15, r25
    2064:	0a 2b       	or	r16, r26
    2066:	1b 2b       	or	r17, r27
    2068:	76 95       	lsr	r23
    206a:	67 95       	ror	r22
    206c:	57 95       	ror	r21
    206e:	47 95       	ror	r20
    2070:	2f 5f       	subi	r18, 0xFF	; 255
    2072:	3f 4f       	sbci	r19, 0xFF	; 255
    2074:	77 fd       	sbrc	r23, 7
    2076:	e7 cf       	rjmp	.-50     	; 0x2046 <__mulsf3+0x140>
    2078:	0c c0       	rjmp	.+24     	; 0x2092 <__mulsf3+0x18c>
    207a:	44 0f       	add	r20, r20
    207c:	55 1f       	adc	r21, r21
    207e:	66 1f       	adc	r22, r22
    2080:	77 1f       	adc	r23, r23
    2082:	17 fd       	sbrc	r17, 7
    2084:	41 60       	ori	r20, 0x01	; 1
    2086:	ee 0c       	add	r14, r14
    2088:	ff 1c       	adc	r15, r15
    208a:	00 1f       	adc	r16, r16
    208c:	11 1f       	adc	r17, r17
    208e:	21 50       	subi	r18, 0x01	; 1
    2090:	30 40       	sbci	r19, 0x00	; 0
    2092:	40 30       	cpi	r20, 0x00	; 0
    2094:	90 e0       	ldi	r25, 0x00	; 0
    2096:	59 07       	cpc	r21, r25
    2098:	90 e0       	ldi	r25, 0x00	; 0
    209a:	69 07       	cpc	r22, r25
    209c:	90 e4       	ldi	r25, 0x40	; 64
    209e:	79 07       	cpc	r23, r25
    20a0:	60 f3       	brcs	.-40     	; 0x207a <__mulsf3+0x174>
    20a2:	2b 8f       	std	Y+27, r18	; 0x1b
    20a4:	3c 8f       	std	Y+28, r19	; 0x1c
    20a6:	db 01       	movw	r26, r22
    20a8:	ca 01       	movw	r24, r20
    20aa:	8f 77       	andi	r24, 0x7F	; 127
    20ac:	90 70       	andi	r25, 0x00	; 0
    20ae:	a0 70       	andi	r26, 0x00	; 0
    20b0:	b0 70       	andi	r27, 0x00	; 0
    20b2:	80 34       	cpi	r24, 0x40	; 64
    20b4:	91 05       	cpc	r25, r1
    20b6:	a1 05       	cpc	r26, r1
    20b8:	b1 05       	cpc	r27, r1
    20ba:	61 f4       	brne	.+24     	; 0x20d4 <__mulsf3+0x1ce>
    20bc:	47 fd       	sbrc	r20, 7
    20be:	0a c0       	rjmp	.+20     	; 0x20d4 <__mulsf3+0x1ce>
    20c0:	e1 14       	cp	r14, r1
    20c2:	f1 04       	cpc	r15, r1
    20c4:	01 05       	cpc	r16, r1
    20c6:	11 05       	cpc	r17, r1
    20c8:	29 f0       	breq	.+10     	; 0x20d4 <__mulsf3+0x1ce>
    20ca:	40 5c       	subi	r20, 0xC0	; 192
    20cc:	5f 4f       	sbci	r21, 0xFF	; 255
    20ce:	6f 4f       	sbci	r22, 0xFF	; 255
    20d0:	7f 4f       	sbci	r23, 0xFF	; 255
    20d2:	40 78       	andi	r20, 0x80	; 128
    20d4:	1a 8e       	std	Y+26, r1	; 0x1a
    20d6:	fe 17       	cp	r31, r30
    20d8:	11 f0       	breq	.+4      	; 0x20de <__mulsf3+0x1d8>
    20da:	81 e0       	ldi	r24, 0x01	; 1
    20dc:	8a 8f       	std	Y+26, r24	; 0x1a
    20de:	4d 8f       	std	Y+29, r20	; 0x1d
    20e0:	5e 8f       	std	Y+30, r21	; 0x1e
    20e2:	6f 8f       	std	Y+31, r22	; 0x1f
    20e4:	78 a3       	std	Y+32, r23	; 0x20
    20e6:	83 e0       	ldi	r24, 0x03	; 3
    20e8:	89 8f       	std	Y+25, r24	; 0x19
    20ea:	ce 01       	movw	r24, r28
    20ec:	49 96       	adiw	r24, 0x19	; 25
    20ee:	0e 94 0e 12 	call	0x241c	; 0x241c <__pack_f>
    20f2:	a0 96       	adiw	r28, 0x20	; 32
    20f4:	e2 e1       	ldi	r30, 0x12	; 18
    20f6:	0c 94 ef 2a 	jmp	0x55de	; 0x55de <__epilogue_restores__>

000020fa <__gtsf2>:
    20fa:	a8 e1       	ldi	r26, 0x18	; 24
    20fc:	b0 e0       	ldi	r27, 0x00	; 0
    20fe:	e3 e8       	ldi	r30, 0x83	; 131
    2100:	f0 e1       	ldi	r31, 0x10	; 16
    2102:	0c 94 df 2a 	jmp	0x55be	; 0x55be <__prologue_saves__+0x18>
    2106:	69 83       	std	Y+1, r22	; 0x01
    2108:	7a 83       	std	Y+2, r23	; 0x02
    210a:	8b 83       	std	Y+3, r24	; 0x03
    210c:	9c 83       	std	Y+4, r25	; 0x04
    210e:	2d 83       	std	Y+5, r18	; 0x05
    2110:	3e 83       	std	Y+6, r19	; 0x06
    2112:	4f 83       	std	Y+7, r20	; 0x07
    2114:	58 87       	std	Y+8, r21	; 0x08
    2116:	89 e0       	ldi	r24, 0x09	; 9
    2118:	e8 2e       	mov	r14, r24
    211a:	f1 2c       	mov	r15, r1
    211c:	ec 0e       	add	r14, r28
    211e:	fd 1e       	adc	r15, r29
    2120:	ce 01       	movw	r24, r28
    2122:	01 96       	adiw	r24, 0x01	; 1
    2124:	b7 01       	movw	r22, r14
    2126:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    212a:	8e 01       	movw	r16, r28
    212c:	0f 5e       	subi	r16, 0xEF	; 239
    212e:	1f 4f       	sbci	r17, 0xFF	; 255
    2130:	ce 01       	movw	r24, r28
    2132:	05 96       	adiw	r24, 0x05	; 5
    2134:	b8 01       	movw	r22, r16
    2136:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    213a:	89 85       	ldd	r24, Y+9	; 0x09
    213c:	82 30       	cpi	r24, 0x02	; 2
    213e:	40 f0       	brcs	.+16     	; 0x2150 <__gtsf2+0x56>
    2140:	89 89       	ldd	r24, Y+17	; 0x11
    2142:	82 30       	cpi	r24, 0x02	; 2
    2144:	28 f0       	brcs	.+10     	; 0x2150 <__gtsf2+0x56>
    2146:	c7 01       	movw	r24, r14
    2148:	b8 01       	movw	r22, r16
    214a:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <__fpcmp_parts_f>
    214e:	01 c0       	rjmp	.+2      	; 0x2152 <__gtsf2+0x58>
    2150:	8f ef       	ldi	r24, 0xFF	; 255
    2152:	68 96       	adiw	r28, 0x18	; 24
    2154:	e6 e0       	ldi	r30, 0x06	; 6
    2156:	0c 94 fb 2a 	jmp	0x55f6	; 0x55f6 <__epilogue_restores__+0x18>

0000215a <__gesf2>:
    215a:	a8 e1       	ldi	r26, 0x18	; 24
    215c:	b0 e0       	ldi	r27, 0x00	; 0
    215e:	e3 eb       	ldi	r30, 0xB3	; 179
    2160:	f0 e1       	ldi	r31, 0x10	; 16
    2162:	0c 94 df 2a 	jmp	0x55be	; 0x55be <__prologue_saves__+0x18>
    2166:	69 83       	std	Y+1, r22	; 0x01
    2168:	7a 83       	std	Y+2, r23	; 0x02
    216a:	8b 83       	std	Y+3, r24	; 0x03
    216c:	9c 83       	std	Y+4, r25	; 0x04
    216e:	2d 83       	std	Y+5, r18	; 0x05
    2170:	3e 83       	std	Y+6, r19	; 0x06
    2172:	4f 83       	std	Y+7, r20	; 0x07
    2174:	58 87       	std	Y+8, r21	; 0x08
    2176:	89 e0       	ldi	r24, 0x09	; 9
    2178:	e8 2e       	mov	r14, r24
    217a:	f1 2c       	mov	r15, r1
    217c:	ec 0e       	add	r14, r28
    217e:	fd 1e       	adc	r15, r29
    2180:	ce 01       	movw	r24, r28
    2182:	01 96       	adiw	r24, 0x01	; 1
    2184:	b7 01       	movw	r22, r14
    2186:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    218a:	8e 01       	movw	r16, r28
    218c:	0f 5e       	subi	r16, 0xEF	; 239
    218e:	1f 4f       	sbci	r17, 0xFF	; 255
    2190:	ce 01       	movw	r24, r28
    2192:	05 96       	adiw	r24, 0x05	; 5
    2194:	b8 01       	movw	r22, r16
    2196:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    219a:	89 85       	ldd	r24, Y+9	; 0x09
    219c:	82 30       	cpi	r24, 0x02	; 2
    219e:	40 f0       	brcs	.+16     	; 0x21b0 <__gesf2+0x56>
    21a0:	89 89       	ldd	r24, Y+17	; 0x11
    21a2:	82 30       	cpi	r24, 0x02	; 2
    21a4:	28 f0       	brcs	.+10     	; 0x21b0 <__gesf2+0x56>
    21a6:	c7 01       	movw	r24, r14
    21a8:	b8 01       	movw	r22, r16
    21aa:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <__fpcmp_parts_f>
    21ae:	01 c0       	rjmp	.+2      	; 0x21b2 <__gesf2+0x58>
    21b0:	8f ef       	ldi	r24, 0xFF	; 255
    21b2:	68 96       	adiw	r28, 0x18	; 24
    21b4:	e6 e0       	ldi	r30, 0x06	; 6
    21b6:	0c 94 fb 2a 	jmp	0x55f6	; 0x55f6 <__epilogue_restores__+0x18>

000021ba <__ltsf2>:
    21ba:	a8 e1       	ldi	r26, 0x18	; 24
    21bc:	b0 e0       	ldi	r27, 0x00	; 0
    21be:	e3 ee       	ldi	r30, 0xE3	; 227
    21c0:	f0 e1       	ldi	r31, 0x10	; 16
    21c2:	0c 94 df 2a 	jmp	0x55be	; 0x55be <__prologue_saves__+0x18>
    21c6:	69 83       	std	Y+1, r22	; 0x01
    21c8:	7a 83       	std	Y+2, r23	; 0x02
    21ca:	8b 83       	std	Y+3, r24	; 0x03
    21cc:	9c 83       	std	Y+4, r25	; 0x04
    21ce:	2d 83       	std	Y+5, r18	; 0x05
    21d0:	3e 83       	std	Y+6, r19	; 0x06
    21d2:	4f 83       	std	Y+7, r20	; 0x07
    21d4:	58 87       	std	Y+8, r21	; 0x08
    21d6:	89 e0       	ldi	r24, 0x09	; 9
    21d8:	e8 2e       	mov	r14, r24
    21da:	f1 2c       	mov	r15, r1
    21dc:	ec 0e       	add	r14, r28
    21de:	fd 1e       	adc	r15, r29
    21e0:	ce 01       	movw	r24, r28
    21e2:	01 96       	adiw	r24, 0x01	; 1
    21e4:	b7 01       	movw	r22, r14
    21e6:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    21ea:	8e 01       	movw	r16, r28
    21ec:	0f 5e       	subi	r16, 0xEF	; 239
    21ee:	1f 4f       	sbci	r17, 0xFF	; 255
    21f0:	ce 01       	movw	r24, r28
    21f2:	05 96       	adiw	r24, 0x05	; 5
    21f4:	b8 01       	movw	r22, r16
    21f6:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    21fa:	89 85       	ldd	r24, Y+9	; 0x09
    21fc:	82 30       	cpi	r24, 0x02	; 2
    21fe:	40 f0       	brcs	.+16     	; 0x2210 <__ltsf2+0x56>
    2200:	89 89       	ldd	r24, Y+17	; 0x11
    2202:	82 30       	cpi	r24, 0x02	; 2
    2204:	28 f0       	brcs	.+10     	; 0x2210 <__ltsf2+0x56>
    2206:	c7 01       	movw	r24, r14
    2208:	b8 01       	movw	r22, r16
    220a:	0e 94 5b 13 	call	0x26b6	; 0x26b6 <__fpcmp_parts_f>
    220e:	01 c0       	rjmp	.+2      	; 0x2212 <__ltsf2+0x58>
    2210:	81 e0       	ldi	r24, 0x01	; 1
    2212:	68 96       	adiw	r28, 0x18	; 24
    2214:	e6 e0       	ldi	r30, 0x06	; 6
    2216:	0c 94 fb 2a 	jmp	0x55f6	; 0x55f6 <__epilogue_restores__+0x18>

0000221a <__floatsisf>:
    221a:	a8 e0       	ldi	r26, 0x08	; 8
    221c:	b0 e0       	ldi	r27, 0x00	; 0
    221e:	e3 e1       	ldi	r30, 0x13	; 19
    2220:	f1 e1       	ldi	r31, 0x11	; 17
    2222:	0c 94 dc 2a 	jmp	0x55b8	; 0x55b8 <__prologue_saves__+0x12>
    2226:	9b 01       	movw	r18, r22
    2228:	ac 01       	movw	r20, r24
    222a:	83 e0       	ldi	r24, 0x03	; 3
    222c:	89 83       	std	Y+1, r24	; 0x01
    222e:	da 01       	movw	r26, r20
    2230:	c9 01       	movw	r24, r18
    2232:	88 27       	eor	r24, r24
    2234:	b7 fd       	sbrc	r27, 7
    2236:	83 95       	inc	r24
    2238:	99 27       	eor	r25, r25
    223a:	aa 27       	eor	r26, r26
    223c:	bb 27       	eor	r27, r27
    223e:	b8 2e       	mov	r11, r24
    2240:	21 15       	cp	r18, r1
    2242:	31 05       	cpc	r19, r1
    2244:	41 05       	cpc	r20, r1
    2246:	51 05       	cpc	r21, r1
    2248:	19 f4       	brne	.+6      	; 0x2250 <__floatsisf+0x36>
    224a:	82 e0       	ldi	r24, 0x02	; 2
    224c:	89 83       	std	Y+1, r24	; 0x01
    224e:	3a c0       	rjmp	.+116    	; 0x22c4 <__floatsisf+0xaa>
    2250:	88 23       	and	r24, r24
    2252:	a9 f0       	breq	.+42     	; 0x227e <__floatsisf+0x64>
    2254:	20 30       	cpi	r18, 0x00	; 0
    2256:	80 e0       	ldi	r24, 0x00	; 0
    2258:	38 07       	cpc	r19, r24
    225a:	80 e0       	ldi	r24, 0x00	; 0
    225c:	48 07       	cpc	r20, r24
    225e:	80 e8       	ldi	r24, 0x80	; 128
    2260:	58 07       	cpc	r21, r24
    2262:	29 f4       	brne	.+10     	; 0x226e <__floatsisf+0x54>
    2264:	60 e0       	ldi	r22, 0x00	; 0
    2266:	70 e0       	ldi	r23, 0x00	; 0
    2268:	80 e0       	ldi	r24, 0x00	; 0
    226a:	9f ec       	ldi	r25, 0xCF	; 207
    226c:	30 c0       	rjmp	.+96     	; 0x22ce <__floatsisf+0xb4>
    226e:	ee 24       	eor	r14, r14
    2270:	ff 24       	eor	r15, r15
    2272:	87 01       	movw	r16, r14
    2274:	e2 1a       	sub	r14, r18
    2276:	f3 0a       	sbc	r15, r19
    2278:	04 0b       	sbc	r16, r20
    227a:	15 0b       	sbc	r17, r21
    227c:	02 c0       	rjmp	.+4      	; 0x2282 <__floatsisf+0x68>
    227e:	79 01       	movw	r14, r18
    2280:	8a 01       	movw	r16, r20
    2282:	8e e1       	ldi	r24, 0x1E	; 30
    2284:	c8 2e       	mov	r12, r24
    2286:	d1 2c       	mov	r13, r1
    2288:	dc 82       	std	Y+4, r13	; 0x04
    228a:	cb 82       	std	Y+3, r12	; 0x03
    228c:	ed 82       	std	Y+5, r14	; 0x05
    228e:	fe 82       	std	Y+6, r15	; 0x06
    2290:	0f 83       	std	Y+7, r16	; 0x07
    2292:	18 87       	std	Y+8, r17	; 0x08
    2294:	c8 01       	movw	r24, r16
    2296:	b7 01       	movw	r22, r14
    2298:	0e 94 bf 11 	call	0x237e	; 0x237e <__clzsi2>
    229c:	01 97       	sbiw	r24, 0x01	; 1
    229e:	18 16       	cp	r1, r24
    22a0:	19 06       	cpc	r1, r25
    22a2:	84 f4       	brge	.+32     	; 0x22c4 <__floatsisf+0xaa>
    22a4:	08 2e       	mov	r0, r24
    22a6:	04 c0       	rjmp	.+8      	; 0x22b0 <__floatsisf+0x96>
    22a8:	ee 0c       	add	r14, r14
    22aa:	ff 1c       	adc	r15, r15
    22ac:	00 1f       	adc	r16, r16
    22ae:	11 1f       	adc	r17, r17
    22b0:	0a 94       	dec	r0
    22b2:	d2 f7       	brpl	.-12     	; 0x22a8 <__floatsisf+0x8e>
    22b4:	ed 82       	std	Y+5, r14	; 0x05
    22b6:	fe 82       	std	Y+6, r15	; 0x06
    22b8:	0f 83       	std	Y+7, r16	; 0x07
    22ba:	18 87       	std	Y+8, r17	; 0x08
    22bc:	c8 1a       	sub	r12, r24
    22be:	d9 0a       	sbc	r13, r25
    22c0:	dc 82       	std	Y+4, r13	; 0x04
    22c2:	cb 82       	std	Y+3, r12	; 0x03
    22c4:	ba 82       	std	Y+2, r11	; 0x02
    22c6:	ce 01       	movw	r24, r28
    22c8:	01 96       	adiw	r24, 0x01	; 1
    22ca:	0e 94 0e 12 	call	0x241c	; 0x241c <__pack_f>
    22ce:	28 96       	adiw	r28, 0x08	; 8
    22d0:	e9 e0       	ldi	r30, 0x09	; 9
    22d2:	0c 94 f8 2a 	jmp	0x55f0	; 0x55f0 <__epilogue_restores__+0x12>

000022d6 <__fixsfsi>:
    22d6:	ac e0       	ldi	r26, 0x0C	; 12
    22d8:	b0 e0       	ldi	r27, 0x00	; 0
    22da:	e1 e7       	ldi	r30, 0x71	; 113
    22dc:	f1 e1       	ldi	r31, 0x11	; 17
    22de:	0c 94 e3 2a 	jmp	0x55c6	; 0x55c6 <__prologue_saves__+0x20>
    22e2:	69 83       	std	Y+1, r22	; 0x01
    22e4:	7a 83       	std	Y+2, r23	; 0x02
    22e6:	8b 83       	std	Y+3, r24	; 0x03
    22e8:	9c 83       	std	Y+4, r25	; 0x04
    22ea:	ce 01       	movw	r24, r28
    22ec:	01 96       	adiw	r24, 0x01	; 1
    22ee:	be 01       	movw	r22, r28
    22f0:	6b 5f       	subi	r22, 0xFB	; 251
    22f2:	7f 4f       	sbci	r23, 0xFF	; 255
    22f4:	0e 94 e3 12 	call	0x25c6	; 0x25c6 <__unpack_f>
    22f8:	8d 81       	ldd	r24, Y+5	; 0x05
    22fa:	82 30       	cpi	r24, 0x02	; 2
    22fc:	61 f1       	breq	.+88     	; 0x2356 <__fixsfsi+0x80>
    22fe:	82 30       	cpi	r24, 0x02	; 2
    2300:	50 f1       	brcs	.+84     	; 0x2356 <__fixsfsi+0x80>
    2302:	84 30       	cpi	r24, 0x04	; 4
    2304:	21 f4       	brne	.+8      	; 0x230e <__fixsfsi+0x38>
    2306:	8e 81       	ldd	r24, Y+6	; 0x06
    2308:	88 23       	and	r24, r24
    230a:	51 f1       	breq	.+84     	; 0x2360 <__fixsfsi+0x8a>
    230c:	2e c0       	rjmp	.+92     	; 0x236a <__fixsfsi+0x94>
    230e:	2f 81       	ldd	r18, Y+7	; 0x07
    2310:	38 85       	ldd	r19, Y+8	; 0x08
    2312:	37 fd       	sbrc	r19, 7
    2314:	20 c0       	rjmp	.+64     	; 0x2356 <__fixsfsi+0x80>
    2316:	6e 81       	ldd	r22, Y+6	; 0x06
    2318:	2f 31       	cpi	r18, 0x1F	; 31
    231a:	31 05       	cpc	r19, r1
    231c:	1c f0       	brlt	.+6      	; 0x2324 <__fixsfsi+0x4e>
    231e:	66 23       	and	r22, r22
    2320:	f9 f0       	breq	.+62     	; 0x2360 <__fixsfsi+0x8a>
    2322:	23 c0       	rjmp	.+70     	; 0x236a <__fixsfsi+0x94>
    2324:	8e e1       	ldi	r24, 0x1E	; 30
    2326:	90 e0       	ldi	r25, 0x00	; 0
    2328:	82 1b       	sub	r24, r18
    232a:	93 0b       	sbc	r25, r19
    232c:	29 85       	ldd	r18, Y+9	; 0x09
    232e:	3a 85       	ldd	r19, Y+10	; 0x0a
    2330:	4b 85       	ldd	r20, Y+11	; 0x0b
    2332:	5c 85       	ldd	r21, Y+12	; 0x0c
    2334:	04 c0       	rjmp	.+8      	; 0x233e <__fixsfsi+0x68>
    2336:	56 95       	lsr	r21
    2338:	47 95       	ror	r20
    233a:	37 95       	ror	r19
    233c:	27 95       	ror	r18
    233e:	8a 95       	dec	r24
    2340:	d2 f7       	brpl	.-12     	; 0x2336 <__fixsfsi+0x60>
    2342:	66 23       	and	r22, r22
    2344:	b1 f0       	breq	.+44     	; 0x2372 <__fixsfsi+0x9c>
    2346:	50 95       	com	r21
    2348:	40 95       	com	r20
    234a:	30 95       	com	r19
    234c:	21 95       	neg	r18
    234e:	3f 4f       	sbci	r19, 0xFF	; 255
    2350:	4f 4f       	sbci	r20, 0xFF	; 255
    2352:	5f 4f       	sbci	r21, 0xFF	; 255
    2354:	0e c0       	rjmp	.+28     	; 0x2372 <__fixsfsi+0x9c>
    2356:	20 e0       	ldi	r18, 0x00	; 0
    2358:	30 e0       	ldi	r19, 0x00	; 0
    235a:	40 e0       	ldi	r20, 0x00	; 0
    235c:	50 e0       	ldi	r21, 0x00	; 0
    235e:	09 c0       	rjmp	.+18     	; 0x2372 <__fixsfsi+0x9c>
    2360:	2f ef       	ldi	r18, 0xFF	; 255
    2362:	3f ef       	ldi	r19, 0xFF	; 255
    2364:	4f ef       	ldi	r20, 0xFF	; 255
    2366:	5f e7       	ldi	r21, 0x7F	; 127
    2368:	04 c0       	rjmp	.+8      	; 0x2372 <__fixsfsi+0x9c>
    236a:	20 e0       	ldi	r18, 0x00	; 0
    236c:	30 e0       	ldi	r19, 0x00	; 0
    236e:	40 e0       	ldi	r20, 0x00	; 0
    2370:	50 e8       	ldi	r21, 0x80	; 128
    2372:	b9 01       	movw	r22, r18
    2374:	ca 01       	movw	r24, r20
    2376:	2c 96       	adiw	r28, 0x0c	; 12
    2378:	e2 e0       	ldi	r30, 0x02	; 2
    237a:	0c 94 ff 2a 	jmp	0x55fe	; 0x55fe <__epilogue_restores__+0x20>

0000237e <__clzsi2>:
    237e:	ef 92       	push	r14
    2380:	ff 92       	push	r15
    2382:	0f 93       	push	r16
    2384:	1f 93       	push	r17
    2386:	7b 01       	movw	r14, r22
    2388:	8c 01       	movw	r16, r24
    238a:	80 e0       	ldi	r24, 0x00	; 0
    238c:	e8 16       	cp	r14, r24
    238e:	80 e0       	ldi	r24, 0x00	; 0
    2390:	f8 06       	cpc	r15, r24
    2392:	81 e0       	ldi	r24, 0x01	; 1
    2394:	08 07       	cpc	r16, r24
    2396:	80 e0       	ldi	r24, 0x00	; 0
    2398:	18 07       	cpc	r17, r24
    239a:	88 f4       	brcc	.+34     	; 0x23be <__clzsi2+0x40>
    239c:	8f ef       	ldi	r24, 0xFF	; 255
    239e:	e8 16       	cp	r14, r24
    23a0:	f1 04       	cpc	r15, r1
    23a2:	01 05       	cpc	r16, r1
    23a4:	11 05       	cpc	r17, r1
    23a6:	31 f0       	breq	.+12     	; 0x23b4 <__clzsi2+0x36>
    23a8:	28 f0       	brcs	.+10     	; 0x23b4 <__clzsi2+0x36>
    23aa:	88 e0       	ldi	r24, 0x08	; 8
    23ac:	90 e0       	ldi	r25, 0x00	; 0
    23ae:	a0 e0       	ldi	r26, 0x00	; 0
    23b0:	b0 e0       	ldi	r27, 0x00	; 0
    23b2:	17 c0       	rjmp	.+46     	; 0x23e2 <__clzsi2+0x64>
    23b4:	80 e0       	ldi	r24, 0x00	; 0
    23b6:	90 e0       	ldi	r25, 0x00	; 0
    23b8:	a0 e0       	ldi	r26, 0x00	; 0
    23ba:	b0 e0       	ldi	r27, 0x00	; 0
    23bc:	12 c0       	rjmp	.+36     	; 0x23e2 <__clzsi2+0x64>
    23be:	80 e0       	ldi	r24, 0x00	; 0
    23c0:	e8 16       	cp	r14, r24
    23c2:	80 e0       	ldi	r24, 0x00	; 0
    23c4:	f8 06       	cpc	r15, r24
    23c6:	80 e0       	ldi	r24, 0x00	; 0
    23c8:	08 07       	cpc	r16, r24
    23ca:	81 e0       	ldi	r24, 0x01	; 1
    23cc:	18 07       	cpc	r17, r24
    23ce:	28 f0       	brcs	.+10     	; 0x23da <__clzsi2+0x5c>
    23d0:	88 e1       	ldi	r24, 0x18	; 24
    23d2:	90 e0       	ldi	r25, 0x00	; 0
    23d4:	a0 e0       	ldi	r26, 0x00	; 0
    23d6:	b0 e0       	ldi	r27, 0x00	; 0
    23d8:	04 c0       	rjmp	.+8      	; 0x23e2 <__clzsi2+0x64>
    23da:	80 e1       	ldi	r24, 0x10	; 16
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	a0 e0       	ldi	r26, 0x00	; 0
    23e0:	b0 e0       	ldi	r27, 0x00	; 0
    23e2:	20 e2       	ldi	r18, 0x20	; 32
    23e4:	30 e0       	ldi	r19, 0x00	; 0
    23e6:	40 e0       	ldi	r20, 0x00	; 0
    23e8:	50 e0       	ldi	r21, 0x00	; 0
    23ea:	28 1b       	sub	r18, r24
    23ec:	39 0b       	sbc	r19, r25
    23ee:	4a 0b       	sbc	r20, r26
    23f0:	5b 0b       	sbc	r21, r27
    23f2:	04 c0       	rjmp	.+8      	; 0x23fc <__clzsi2+0x7e>
    23f4:	16 95       	lsr	r17
    23f6:	07 95       	ror	r16
    23f8:	f7 94       	ror	r15
    23fa:	e7 94       	ror	r14
    23fc:	8a 95       	dec	r24
    23fe:	d2 f7       	brpl	.-12     	; 0x23f4 <__clzsi2+0x76>
    2400:	f7 01       	movw	r30, r14
    2402:	e2 59       	subi	r30, 0x92	; 146
    2404:	ff 4f       	sbci	r31, 0xFF	; 255
    2406:	80 81       	ld	r24, Z
    2408:	28 1b       	sub	r18, r24
    240a:	31 09       	sbc	r19, r1
    240c:	41 09       	sbc	r20, r1
    240e:	51 09       	sbc	r21, r1
    2410:	c9 01       	movw	r24, r18
    2412:	1f 91       	pop	r17
    2414:	0f 91       	pop	r16
    2416:	ff 90       	pop	r15
    2418:	ef 90       	pop	r14
    241a:	08 95       	ret

0000241c <__pack_f>:
    241c:	df 92       	push	r13
    241e:	ef 92       	push	r14
    2420:	ff 92       	push	r15
    2422:	0f 93       	push	r16
    2424:	1f 93       	push	r17
    2426:	fc 01       	movw	r30, r24
    2428:	e4 80       	ldd	r14, Z+4	; 0x04
    242a:	f5 80       	ldd	r15, Z+5	; 0x05
    242c:	06 81       	ldd	r16, Z+6	; 0x06
    242e:	17 81       	ldd	r17, Z+7	; 0x07
    2430:	d1 80       	ldd	r13, Z+1	; 0x01
    2432:	80 81       	ld	r24, Z
    2434:	82 30       	cpi	r24, 0x02	; 2
    2436:	48 f4       	brcc	.+18     	; 0x244a <__pack_f+0x2e>
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	90 e0       	ldi	r25, 0x00	; 0
    243c:	a0 e1       	ldi	r26, 0x10	; 16
    243e:	b0 e0       	ldi	r27, 0x00	; 0
    2440:	e8 2a       	or	r14, r24
    2442:	f9 2a       	or	r15, r25
    2444:	0a 2b       	or	r16, r26
    2446:	1b 2b       	or	r17, r27
    2448:	a5 c0       	rjmp	.+330    	; 0x2594 <__pack_f+0x178>
    244a:	84 30       	cpi	r24, 0x04	; 4
    244c:	09 f4       	brne	.+2      	; 0x2450 <__pack_f+0x34>
    244e:	9f c0       	rjmp	.+318    	; 0x258e <__pack_f+0x172>
    2450:	82 30       	cpi	r24, 0x02	; 2
    2452:	21 f4       	brne	.+8      	; 0x245c <__pack_f+0x40>
    2454:	ee 24       	eor	r14, r14
    2456:	ff 24       	eor	r15, r15
    2458:	87 01       	movw	r16, r14
    245a:	05 c0       	rjmp	.+10     	; 0x2466 <__pack_f+0x4a>
    245c:	e1 14       	cp	r14, r1
    245e:	f1 04       	cpc	r15, r1
    2460:	01 05       	cpc	r16, r1
    2462:	11 05       	cpc	r17, r1
    2464:	19 f4       	brne	.+6      	; 0x246c <__pack_f+0x50>
    2466:	e0 e0       	ldi	r30, 0x00	; 0
    2468:	f0 e0       	ldi	r31, 0x00	; 0
    246a:	96 c0       	rjmp	.+300    	; 0x2598 <__pack_f+0x17c>
    246c:	62 81       	ldd	r22, Z+2	; 0x02
    246e:	73 81       	ldd	r23, Z+3	; 0x03
    2470:	9f ef       	ldi	r25, 0xFF	; 255
    2472:	62 38       	cpi	r22, 0x82	; 130
    2474:	79 07       	cpc	r23, r25
    2476:	0c f0       	brlt	.+2      	; 0x247a <__pack_f+0x5e>
    2478:	5b c0       	rjmp	.+182    	; 0x2530 <__pack_f+0x114>
    247a:	22 e8       	ldi	r18, 0x82	; 130
    247c:	3f ef       	ldi	r19, 0xFF	; 255
    247e:	26 1b       	sub	r18, r22
    2480:	37 0b       	sbc	r19, r23
    2482:	2a 31       	cpi	r18, 0x1A	; 26
    2484:	31 05       	cpc	r19, r1
    2486:	2c f0       	brlt	.+10     	; 0x2492 <__pack_f+0x76>
    2488:	20 e0       	ldi	r18, 0x00	; 0
    248a:	30 e0       	ldi	r19, 0x00	; 0
    248c:	40 e0       	ldi	r20, 0x00	; 0
    248e:	50 e0       	ldi	r21, 0x00	; 0
    2490:	2a c0       	rjmp	.+84     	; 0x24e6 <__pack_f+0xca>
    2492:	b8 01       	movw	r22, r16
    2494:	a7 01       	movw	r20, r14
    2496:	02 2e       	mov	r0, r18
    2498:	04 c0       	rjmp	.+8      	; 0x24a2 <__pack_f+0x86>
    249a:	76 95       	lsr	r23
    249c:	67 95       	ror	r22
    249e:	57 95       	ror	r21
    24a0:	47 95       	ror	r20
    24a2:	0a 94       	dec	r0
    24a4:	d2 f7       	brpl	.-12     	; 0x249a <__pack_f+0x7e>
    24a6:	81 e0       	ldi	r24, 0x01	; 1
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	a0 e0       	ldi	r26, 0x00	; 0
    24ac:	b0 e0       	ldi	r27, 0x00	; 0
    24ae:	04 c0       	rjmp	.+8      	; 0x24b8 <__pack_f+0x9c>
    24b0:	88 0f       	add	r24, r24
    24b2:	99 1f       	adc	r25, r25
    24b4:	aa 1f       	adc	r26, r26
    24b6:	bb 1f       	adc	r27, r27
    24b8:	2a 95       	dec	r18
    24ba:	d2 f7       	brpl	.-12     	; 0x24b0 <__pack_f+0x94>
    24bc:	01 97       	sbiw	r24, 0x01	; 1
    24be:	a1 09       	sbc	r26, r1
    24c0:	b1 09       	sbc	r27, r1
    24c2:	8e 21       	and	r24, r14
    24c4:	9f 21       	and	r25, r15
    24c6:	a0 23       	and	r26, r16
    24c8:	b1 23       	and	r27, r17
    24ca:	00 97       	sbiw	r24, 0x00	; 0
    24cc:	a1 05       	cpc	r26, r1
    24ce:	b1 05       	cpc	r27, r1
    24d0:	21 f0       	breq	.+8      	; 0x24da <__pack_f+0xbe>
    24d2:	81 e0       	ldi	r24, 0x01	; 1
    24d4:	90 e0       	ldi	r25, 0x00	; 0
    24d6:	a0 e0       	ldi	r26, 0x00	; 0
    24d8:	b0 e0       	ldi	r27, 0x00	; 0
    24da:	9a 01       	movw	r18, r20
    24dc:	ab 01       	movw	r20, r22
    24de:	28 2b       	or	r18, r24
    24e0:	39 2b       	or	r19, r25
    24e2:	4a 2b       	or	r20, r26
    24e4:	5b 2b       	or	r21, r27
    24e6:	da 01       	movw	r26, r20
    24e8:	c9 01       	movw	r24, r18
    24ea:	8f 77       	andi	r24, 0x7F	; 127
    24ec:	90 70       	andi	r25, 0x00	; 0
    24ee:	a0 70       	andi	r26, 0x00	; 0
    24f0:	b0 70       	andi	r27, 0x00	; 0
    24f2:	80 34       	cpi	r24, 0x40	; 64
    24f4:	91 05       	cpc	r25, r1
    24f6:	a1 05       	cpc	r26, r1
    24f8:	b1 05       	cpc	r27, r1
    24fa:	39 f4       	brne	.+14     	; 0x250a <__pack_f+0xee>
    24fc:	27 ff       	sbrs	r18, 7
    24fe:	09 c0       	rjmp	.+18     	; 0x2512 <__pack_f+0xf6>
    2500:	20 5c       	subi	r18, 0xC0	; 192
    2502:	3f 4f       	sbci	r19, 0xFF	; 255
    2504:	4f 4f       	sbci	r20, 0xFF	; 255
    2506:	5f 4f       	sbci	r21, 0xFF	; 255
    2508:	04 c0       	rjmp	.+8      	; 0x2512 <__pack_f+0xf6>
    250a:	21 5c       	subi	r18, 0xC1	; 193
    250c:	3f 4f       	sbci	r19, 0xFF	; 255
    250e:	4f 4f       	sbci	r20, 0xFF	; 255
    2510:	5f 4f       	sbci	r21, 0xFF	; 255
    2512:	e0 e0       	ldi	r30, 0x00	; 0
    2514:	f0 e0       	ldi	r31, 0x00	; 0
    2516:	20 30       	cpi	r18, 0x00	; 0
    2518:	a0 e0       	ldi	r26, 0x00	; 0
    251a:	3a 07       	cpc	r19, r26
    251c:	a0 e0       	ldi	r26, 0x00	; 0
    251e:	4a 07       	cpc	r20, r26
    2520:	a0 e4       	ldi	r26, 0x40	; 64
    2522:	5a 07       	cpc	r21, r26
    2524:	10 f0       	brcs	.+4      	; 0x252a <__pack_f+0x10e>
    2526:	e1 e0       	ldi	r30, 0x01	; 1
    2528:	f0 e0       	ldi	r31, 0x00	; 0
    252a:	79 01       	movw	r14, r18
    252c:	8a 01       	movw	r16, r20
    252e:	27 c0       	rjmp	.+78     	; 0x257e <__pack_f+0x162>
    2530:	60 38       	cpi	r22, 0x80	; 128
    2532:	71 05       	cpc	r23, r1
    2534:	64 f5       	brge	.+88     	; 0x258e <__pack_f+0x172>
    2536:	fb 01       	movw	r30, r22
    2538:	e1 58       	subi	r30, 0x81	; 129
    253a:	ff 4f       	sbci	r31, 0xFF	; 255
    253c:	d8 01       	movw	r26, r16
    253e:	c7 01       	movw	r24, r14
    2540:	8f 77       	andi	r24, 0x7F	; 127
    2542:	90 70       	andi	r25, 0x00	; 0
    2544:	a0 70       	andi	r26, 0x00	; 0
    2546:	b0 70       	andi	r27, 0x00	; 0
    2548:	80 34       	cpi	r24, 0x40	; 64
    254a:	91 05       	cpc	r25, r1
    254c:	a1 05       	cpc	r26, r1
    254e:	b1 05       	cpc	r27, r1
    2550:	39 f4       	brne	.+14     	; 0x2560 <__pack_f+0x144>
    2552:	e7 fe       	sbrs	r14, 7
    2554:	0d c0       	rjmp	.+26     	; 0x2570 <__pack_f+0x154>
    2556:	80 e4       	ldi	r24, 0x40	; 64
    2558:	90 e0       	ldi	r25, 0x00	; 0
    255a:	a0 e0       	ldi	r26, 0x00	; 0
    255c:	b0 e0       	ldi	r27, 0x00	; 0
    255e:	04 c0       	rjmp	.+8      	; 0x2568 <__pack_f+0x14c>
    2560:	8f e3       	ldi	r24, 0x3F	; 63
    2562:	90 e0       	ldi	r25, 0x00	; 0
    2564:	a0 e0       	ldi	r26, 0x00	; 0
    2566:	b0 e0       	ldi	r27, 0x00	; 0
    2568:	e8 0e       	add	r14, r24
    256a:	f9 1e       	adc	r15, r25
    256c:	0a 1f       	adc	r16, r26
    256e:	1b 1f       	adc	r17, r27
    2570:	17 ff       	sbrs	r17, 7
    2572:	05 c0       	rjmp	.+10     	; 0x257e <__pack_f+0x162>
    2574:	16 95       	lsr	r17
    2576:	07 95       	ror	r16
    2578:	f7 94       	ror	r15
    257a:	e7 94       	ror	r14
    257c:	31 96       	adiw	r30, 0x01	; 1
    257e:	87 e0       	ldi	r24, 0x07	; 7
    2580:	16 95       	lsr	r17
    2582:	07 95       	ror	r16
    2584:	f7 94       	ror	r15
    2586:	e7 94       	ror	r14
    2588:	8a 95       	dec	r24
    258a:	d1 f7       	brne	.-12     	; 0x2580 <__pack_f+0x164>
    258c:	05 c0       	rjmp	.+10     	; 0x2598 <__pack_f+0x17c>
    258e:	ee 24       	eor	r14, r14
    2590:	ff 24       	eor	r15, r15
    2592:	87 01       	movw	r16, r14
    2594:	ef ef       	ldi	r30, 0xFF	; 255
    2596:	f0 e0       	ldi	r31, 0x00	; 0
    2598:	6e 2f       	mov	r22, r30
    259a:	67 95       	ror	r22
    259c:	66 27       	eor	r22, r22
    259e:	67 95       	ror	r22
    25a0:	90 2f       	mov	r25, r16
    25a2:	9f 77       	andi	r25, 0x7F	; 127
    25a4:	d7 94       	ror	r13
    25a6:	dd 24       	eor	r13, r13
    25a8:	d7 94       	ror	r13
    25aa:	8e 2f       	mov	r24, r30
    25ac:	86 95       	lsr	r24
    25ae:	49 2f       	mov	r20, r25
    25b0:	46 2b       	or	r20, r22
    25b2:	58 2f       	mov	r21, r24
    25b4:	5d 29       	or	r21, r13
    25b6:	b7 01       	movw	r22, r14
    25b8:	ca 01       	movw	r24, r20
    25ba:	1f 91       	pop	r17
    25bc:	0f 91       	pop	r16
    25be:	ff 90       	pop	r15
    25c0:	ef 90       	pop	r14
    25c2:	df 90       	pop	r13
    25c4:	08 95       	ret

000025c6 <__unpack_f>:
    25c6:	fc 01       	movw	r30, r24
    25c8:	db 01       	movw	r26, r22
    25ca:	40 81       	ld	r20, Z
    25cc:	51 81       	ldd	r21, Z+1	; 0x01
    25ce:	22 81       	ldd	r18, Z+2	; 0x02
    25d0:	62 2f       	mov	r22, r18
    25d2:	6f 77       	andi	r22, 0x7F	; 127
    25d4:	70 e0       	ldi	r23, 0x00	; 0
    25d6:	22 1f       	adc	r18, r18
    25d8:	22 27       	eor	r18, r18
    25da:	22 1f       	adc	r18, r18
    25dc:	93 81       	ldd	r25, Z+3	; 0x03
    25de:	89 2f       	mov	r24, r25
    25e0:	88 0f       	add	r24, r24
    25e2:	82 2b       	or	r24, r18
    25e4:	28 2f       	mov	r18, r24
    25e6:	30 e0       	ldi	r19, 0x00	; 0
    25e8:	99 1f       	adc	r25, r25
    25ea:	99 27       	eor	r25, r25
    25ec:	99 1f       	adc	r25, r25
    25ee:	11 96       	adiw	r26, 0x01	; 1
    25f0:	9c 93       	st	X, r25
    25f2:	11 97       	sbiw	r26, 0x01	; 1
    25f4:	21 15       	cp	r18, r1
    25f6:	31 05       	cpc	r19, r1
    25f8:	a9 f5       	brne	.+106    	; 0x2664 <__unpack_f+0x9e>
    25fa:	41 15       	cp	r20, r1
    25fc:	51 05       	cpc	r21, r1
    25fe:	61 05       	cpc	r22, r1
    2600:	71 05       	cpc	r23, r1
    2602:	11 f4       	brne	.+4      	; 0x2608 <__unpack_f+0x42>
    2604:	82 e0       	ldi	r24, 0x02	; 2
    2606:	37 c0       	rjmp	.+110    	; 0x2676 <__unpack_f+0xb0>
    2608:	82 e8       	ldi	r24, 0x82	; 130
    260a:	9f ef       	ldi	r25, 0xFF	; 255
    260c:	13 96       	adiw	r26, 0x03	; 3
    260e:	9c 93       	st	X, r25
    2610:	8e 93       	st	-X, r24
    2612:	12 97       	sbiw	r26, 0x02	; 2
    2614:	9a 01       	movw	r18, r20
    2616:	ab 01       	movw	r20, r22
    2618:	67 e0       	ldi	r22, 0x07	; 7
    261a:	22 0f       	add	r18, r18
    261c:	33 1f       	adc	r19, r19
    261e:	44 1f       	adc	r20, r20
    2620:	55 1f       	adc	r21, r21
    2622:	6a 95       	dec	r22
    2624:	d1 f7       	brne	.-12     	; 0x261a <__unpack_f+0x54>
    2626:	83 e0       	ldi	r24, 0x03	; 3
    2628:	8c 93       	st	X, r24
    262a:	0d c0       	rjmp	.+26     	; 0x2646 <__unpack_f+0x80>
    262c:	22 0f       	add	r18, r18
    262e:	33 1f       	adc	r19, r19
    2630:	44 1f       	adc	r20, r20
    2632:	55 1f       	adc	r21, r21
    2634:	12 96       	adiw	r26, 0x02	; 2
    2636:	8d 91       	ld	r24, X+
    2638:	9c 91       	ld	r25, X
    263a:	13 97       	sbiw	r26, 0x03	; 3
    263c:	01 97       	sbiw	r24, 0x01	; 1
    263e:	13 96       	adiw	r26, 0x03	; 3
    2640:	9c 93       	st	X, r25
    2642:	8e 93       	st	-X, r24
    2644:	12 97       	sbiw	r26, 0x02	; 2
    2646:	20 30       	cpi	r18, 0x00	; 0
    2648:	80 e0       	ldi	r24, 0x00	; 0
    264a:	38 07       	cpc	r19, r24
    264c:	80 e0       	ldi	r24, 0x00	; 0
    264e:	48 07       	cpc	r20, r24
    2650:	80 e4       	ldi	r24, 0x40	; 64
    2652:	58 07       	cpc	r21, r24
    2654:	58 f3       	brcs	.-42     	; 0x262c <__unpack_f+0x66>
    2656:	14 96       	adiw	r26, 0x04	; 4
    2658:	2d 93       	st	X+, r18
    265a:	3d 93       	st	X+, r19
    265c:	4d 93       	st	X+, r20
    265e:	5c 93       	st	X, r21
    2660:	17 97       	sbiw	r26, 0x07	; 7
    2662:	08 95       	ret
    2664:	2f 3f       	cpi	r18, 0xFF	; 255
    2666:	31 05       	cpc	r19, r1
    2668:	79 f4       	brne	.+30     	; 0x2688 <__unpack_f+0xc2>
    266a:	41 15       	cp	r20, r1
    266c:	51 05       	cpc	r21, r1
    266e:	61 05       	cpc	r22, r1
    2670:	71 05       	cpc	r23, r1
    2672:	19 f4       	brne	.+6      	; 0x267a <__unpack_f+0xb4>
    2674:	84 e0       	ldi	r24, 0x04	; 4
    2676:	8c 93       	st	X, r24
    2678:	08 95       	ret
    267a:	64 ff       	sbrs	r22, 4
    267c:	03 c0       	rjmp	.+6      	; 0x2684 <__unpack_f+0xbe>
    267e:	81 e0       	ldi	r24, 0x01	; 1
    2680:	8c 93       	st	X, r24
    2682:	12 c0       	rjmp	.+36     	; 0x26a8 <__unpack_f+0xe2>
    2684:	1c 92       	st	X, r1
    2686:	10 c0       	rjmp	.+32     	; 0x26a8 <__unpack_f+0xe2>
    2688:	2f 57       	subi	r18, 0x7F	; 127
    268a:	30 40       	sbci	r19, 0x00	; 0
    268c:	13 96       	adiw	r26, 0x03	; 3
    268e:	3c 93       	st	X, r19
    2690:	2e 93       	st	-X, r18
    2692:	12 97       	sbiw	r26, 0x02	; 2
    2694:	83 e0       	ldi	r24, 0x03	; 3
    2696:	8c 93       	st	X, r24
    2698:	87 e0       	ldi	r24, 0x07	; 7
    269a:	44 0f       	add	r20, r20
    269c:	55 1f       	adc	r21, r21
    269e:	66 1f       	adc	r22, r22
    26a0:	77 1f       	adc	r23, r23
    26a2:	8a 95       	dec	r24
    26a4:	d1 f7       	brne	.-12     	; 0x269a <__unpack_f+0xd4>
    26a6:	70 64       	ori	r23, 0x40	; 64
    26a8:	14 96       	adiw	r26, 0x04	; 4
    26aa:	4d 93       	st	X+, r20
    26ac:	5d 93       	st	X+, r21
    26ae:	6d 93       	st	X+, r22
    26b0:	7c 93       	st	X, r23
    26b2:	17 97       	sbiw	r26, 0x07	; 7
    26b4:	08 95       	ret

000026b6 <__fpcmp_parts_f>:
    26b6:	1f 93       	push	r17
    26b8:	dc 01       	movw	r26, r24
    26ba:	fb 01       	movw	r30, r22
    26bc:	9c 91       	ld	r25, X
    26be:	92 30       	cpi	r25, 0x02	; 2
    26c0:	08 f4       	brcc	.+2      	; 0x26c4 <__fpcmp_parts_f+0xe>
    26c2:	47 c0       	rjmp	.+142    	; 0x2752 <__fpcmp_parts_f+0x9c>
    26c4:	80 81       	ld	r24, Z
    26c6:	82 30       	cpi	r24, 0x02	; 2
    26c8:	08 f4       	brcc	.+2      	; 0x26cc <__fpcmp_parts_f+0x16>
    26ca:	43 c0       	rjmp	.+134    	; 0x2752 <__fpcmp_parts_f+0x9c>
    26cc:	94 30       	cpi	r25, 0x04	; 4
    26ce:	51 f4       	brne	.+20     	; 0x26e4 <__fpcmp_parts_f+0x2e>
    26d0:	11 96       	adiw	r26, 0x01	; 1
    26d2:	1c 91       	ld	r17, X
    26d4:	84 30       	cpi	r24, 0x04	; 4
    26d6:	99 f5       	brne	.+102    	; 0x273e <__fpcmp_parts_f+0x88>
    26d8:	81 81       	ldd	r24, Z+1	; 0x01
    26da:	68 2f       	mov	r22, r24
    26dc:	70 e0       	ldi	r23, 0x00	; 0
    26de:	61 1b       	sub	r22, r17
    26e0:	71 09       	sbc	r23, r1
    26e2:	3f c0       	rjmp	.+126    	; 0x2762 <__fpcmp_parts_f+0xac>
    26e4:	84 30       	cpi	r24, 0x04	; 4
    26e6:	21 f0       	breq	.+8      	; 0x26f0 <__fpcmp_parts_f+0x3a>
    26e8:	92 30       	cpi	r25, 0x02	; 2
    26ea:	31 f4       	brne	.+12     	; 0x26f8 <__fpcmp_parts_f+0x42>
    26ec:	82 30       	cpi	r24, 0x02	; 2
    26ee:	b9 f1       	breq	.+110    	; 0x275e <__fpcmp_parts_f+0xa8>
    26f0:	81 81       	ldd	r24, Z+1	; 0x01
    26f2:	88 23       	and	r24, r24
    26f4:	89 f1       	breq	.+98     	; 0x2758 <__fpcmp_parts_f+0xa2>
    26f6:	2d c0       	rjmp	.+90     	; 0x2752 <__fpcmp_parts_f+0x9c>
    26f8:	11 96       	adiw	r26, 0x01	; 1
    26fa:	1c 91       	ld	r17, X
    26fc:	11 97       	sbiw	r26, 0x01	; 1
    26fe:	82 30       	cpi	r24, 0x02	; 2
    2700:	f1 f0       	breq	.+60     	; 0x273e <__fpcmp_parts_f+0x88>
    2702:	81 81       	ldd	r24, Z+1	; 0x01
    2704:	18 17       	cp	r17, r24
    2706:	d9 f4       	brne	.+54     	; 0x273e <__fpcmp_parts_f+0x88>
    2708:	12 96       	adiw	r26, 0x02	; 2
    270a:	2d 91       	ld	r18, X+
    270c:	3c 91       	ld	r19, X
    270e:	13 97       	sbiw	r26, 0x03	; 3
    2710:	82 81       	ldd	r24, Z+2	; 0x02
    2712:	93 81       	ldd	r25, Z+3	; 0x03
    2714:	82 17       	cp	r24, r18
    2716:	93 07       	cpc	r25, r19
    2718:	94 f0       	brlt	.+36     	; 0x273e <__fpcmp_parts_f+0x88>
    271a:	28 17       	cp	r18, r24
    271c:	39 07       	cpc	r19, r25
    271e:	bc f0       	brlt	.+46     	; 0x274e <__fpcmp_parts_f+0x98>
    2720:	14 96       	adiw	r26, 0x04	; 4
    2722:	8d 91       	ld	r24, X+
    2724:	9d 91       	ld	r25, X+
    2726:	0d 90       	ld	r0, X+
    2728:	bc 91       	ld	r27, X
    272a:	a0 2d       	mov	r26, r0
    272c:	24 81       	ldd	r18, Z+4	; 0x04
    272e:	35 81       	ldd	r19, Z+5	; 0x05
    2730:	46 81       	ldd	r20, Z+6	; 0x06
    2732:	57 81       	ldd	r21, Z+7	; 0x07
    2734:	28 17       	cp	r18, r24
    2736:	39 07       	cpc	r19, r25
    2738:	4a 07       	cpc	r20, r26
    273a:	5b 07       	cpc	r21, r27
    273c:	18 f4       	brcc	.+6      	; 0x2744 <__fpcmp_parts_f+0x8e>
    273e:	11 23       	and	r17, r17
    2740:	41 f0       	breq	.+16     	; 0x2752 <__fpcmp_parts_f+0x9c>
    2742:	0a c0       	rjmp	.+20     	; 0x2758 <__fpcmp_parts_f+0xa2>
    2744:	82 17       	cp	r24, r18
    2746:	93 07       	cpc	r25, r19
    2748:	a4 07       	cpc	r26, r20
    274a:	b5 07       	cpc	r27, r21
    274c:	40 f4       	brcc	.+16     	; 0x275e <__fpcmp_parts_f+0xa8>
    274e:	11 23       	and	r17, r17
    2750:	19 f0       	breq	.+6      	; 0x2758 <__fpcmp_parts_f+0xa2>
    2752:	61 e0       	ldi	r22, 0x01	; 1
    2754:	70 e0       	ldi	r23, 0x00	; 0
    2756:	05 c0       	rjmp	.+10     	; 0x2762 <__fpcmp_parts_f+0xac>
    2758:	6f ef       	ldi	r22, 0xFF	; 255
    275a:	7f ef       	ldi	r23, 0xFF	; 255
    275c:	02 c0       	rjmp	.+4      	; 0x2762 <__fpcmp_parts_f+0xac>
    275e:	60 e0       	ldi	r22, 0x00	; 0
    2760:	70 e0       	ldi	r23, 0x00	; 0
    2762:	cb 01       	movw	r24, r22
    2764:	1f 91       	pop	r17
    2766:	08 95       	ret

00002768 <ADC_voidInit>:
static u8 ADC_u8State= IDLE ;

//=====================================================================================================================

void ADC_voidInit(void)
{
    2768:	df 93       	push	r29
    276a:	cf 93       	push	r28
    276c:	cd b7       	in	r28, 0x3d	; 61
    276e:	de b7       	in	r29, 0x3e	; 62
	#elif ADC_VREF == AVCC
		SET_BIT(ADMUX , ADMUX_REFS0) ;
		CLR_BIT(ADMUX , ADMUX_REFS1) ;

	#elif ADC_VREF == INTERNAL_2_56
		SET_BIT(ADMUX , ADMUX_REFS0) ;
    2770:	a7 e2       	ldi	r26, 0x27	; 39
    2772:	b0 e0       	ldi	r27, 0x00	; 0
    2774:	e7 e2       	ldi	r30, 0x27	; 39
    2776:	f0 e0       	ldi	r31, 0x00	; 0
    2778:	80 81       	ld	r24, Z
    277a:	80 64       	ori	r24, 0x40	; 64
    277c:	8c 93       	st	X, r24
		SET_BIT(ADMUX , ADMUX_REFS1) ;
    277e:	a7 e2       	ldi	r26, 0x27	; 39
    2780:	b0 e0       	ldi	r27, 0x00	; 0
    2782:	e7 e2       	ldi	r30, 0x27	; 39
    2784:	f0 e0       	ldi	r31, 0x00	; 0
    2786:	80 81       	ld	r24, Z
    2788:	80 68       	ori	r24, 0x80	; 128
    278a:	8c 93       	st	X, r24
	#endif


	/*Set Left Adjust Result*/
	#if ADC_ADJUSTMENT == RIGHT_ADJUSTMENT
			CLR_BIT(ADMUX , ADMUX_ADLAR) ;
    278c:	a7 e2       	ldi	r26, 0x27	; 39
    278e:	b0 e0       	ldi	r27, 0x00	; 0
    2790:	e7 e2       	ldi	r30, 0x27	; 39
    2792:	f0 e0       	ldi	r31, 0x00	; 0
    2794:	80 81       	ld	r24, Z
    2796:	8f 7d       	andi	r24, 0xDF	; 223
    2798:	8c 93       	st	X, r24
		#error "Wrong ADC_ADJUSTMENT config"

	#endif

	/*Set Prescaler Value*/
	ADSAR &= ADC_PRE_MASK ;
    279a:	a6 e2       	ldi	r26, 0x26	; 38
    279c:	b0 e0       	ldi	r27, 0x00	; 0
    279e:	e6 e2       	ldi	r30, 0x26	; 38
    27a0:	f0 e0       	ldi	r31, 0x00	; 0
    27a2:	80 81       	ld	r24, Z
    27a4:	88 7f       	andi	r24, 0xF8	; 248
    27a6:	8c 93       	st	X, r24
	ADSAR |= ADC_PRESCALLER ;
    27a8:	a6 e2       	ldi	r26, 0x26	; 38
    27aa:	b0 e0       	ldi	r27, 0x00	; 0
    27ac:	e6 e2       	ldi	r30, 0x26	; 38
    27ae:	f0 e0       	ldi	r31, 0x00	; 0
    27b0:	80 81       	ld	r24, Z
    27b2:	87 60       	ori	r24, 0x07	; 7
    27b4:	8c 93       	st	X, r24

	/*Enable ADC Peripheral*/
	#if ADC_STATUS == ADC_DISABLE
		CLR_BIT(ADSAR , ADSAR_ADEN) ;
	#elif ADC_STATUS == ADC_ENABLE
		SET_BIT(ADSAR , ADSAR_ADEN) ;
    27b6:	a6 e2       	ldi	r26, 0x26	; 38
    27b8:	b0 e0       	ldi	r27, 0x00	; 0
    27ba:	e6 e2       	ldi	r30, 0x26	; 38
    27bc:	f0 e0       	ldi	r31, 0x00	; 0
    27be:	80 81       	ld	r24, Z
    27c0:	80 68       	ori	r24, 0x80	; 128
    27c2:	8c 93       	st	X, r24

	/*Enable ADC Interrupt*/
	#if INT_STATUS == INT_DISABLE
		CLR_BIT(ADSAR , ADSAR_ADIE) ;
	#elif INT_STATUS == INT_ENABLE
		SET_BIT(ADSAR , ADSAR_ADIE) ;
    27c4:	a6 e2       	ldi	r26, 0x26	; 38
    27c6:	b0 e0       	ldi	r27, 0x00	; 0
    27c8:	e6 e2       	ldi	r30, 0x26	; 38
    27ca:	f0 e0       	ldi	r31, 0x00	; 0
    27cc:	80 81       	ld	r24, Z
    27ce:	88 60       	ori	r24, 0x08	; 8
    27d0:	8c 93       	st	X, r24
	#else
	#error "Wrong INT_STATUS config"
	#endif

}
    27d2:	cf 91       	pop	r28
    27d4:	df 91       	pop	r29
    27d6:	08 95       	ret

000027d8 <ADC_voidEnable>:

//----------------------------------------------------------------------------------------------------------------------------------------------------

void ADC_voidEnable (void)
{
    27d8:	df 93       	push	r29
    27da:	cf 93       	push	r28
    27dc:	cd b7       	in	r28, 0x3d	; 61
    27de:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ADSAR , ADSAR_ADEN) ;
    27e0:	a6 e2       	ldi	r26, 0x26	; 38
    27e2:	b0 e0       	ldi	r27, 0x00	; 0
    27e4:	e6 e2       	ldi	r30, 0x26	; 38
    27e6:	f0 e0       	ldi	r31, 0x00	; 0
    27e8:	80 81       	ld	r24, Z
    27ea:	80 68       	ori	r24, 0x80	; 128
    27ec:	8c 93       	st	X, r24
}
    27ee:	cf 91       	pop	r28
    27f0:	df 91       	pop	r29
    27f2:	08 95       	ret

000027f4 <ADC_voidDisable>:

//----------------------------------------------------------------------------------------------------------------------------------------------------

void ADC_voidDisable (void)
{
    27f4:	df 93       	push	r29
    27f6:	cf 93       	push	r28
    27f8:	cd b7       	in	r28, 0x3d	; 61
    27fa:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ADSAR , ADSAR_ADEN) ;
    27fc:	a6 e2       	ldi	r26, 0x26	; 38
    27fe:	b0 e0       	ldi	r27, 0x00	; 0
    2800:	e6 e2       	ldi	r30, 0x26	; 38
    2802:	f0 e0       	ldi	r31, 0x00	; 0
    2804:	80 81       	ld	r24, Z
    2806:	8f 77       	andi	r24, 0x7F	; 127
    2808:	8c 93       	st	X, r24
}
    280a:	cf 91       	pop	r28
    280c:	df 91       	pop	r29
    280e:	08 95       	ret

00002810 <ADC_voidInterruptEnable>:

//----------------------------------------------------------------------------------------------------------------------------------------------------

void ADC_voidInterruptEnable (void)
{
    2810:	df 93       	push	r29
    2812:	cf 93       	push	r28
    2814:	cd b7       	in	r28, 0x3d	; 61
    2816:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(ADSAR , ADSAR_ADIE) ;
    2818:	a6 e2       	ldi	r26, 0x26	; 38
    281a:	b0 e0       	ldi	r27, 0x00	; 0
    281c:	e6 e2       	ldi	r30, 0x26	; 38
    281e:	f0 e0       	ldi	r31, 0x00	; 0
    2820:	80 81       	ld	r24, Z
    2822:	88 60       	ori	r24, 0x08	; 8
    2824:	8c 93       	st	X, r24
}
    2826:	cf 91       	pop	r28
    2828:	df 91       	pop	r29
    282a:	08 95       	ret

0000282c <ADC_voidInterruptDisable>:

//----------------------------------------------------------------------------------------------------------------------------------------------------

void ADC_voidInterruptDisable (void)
{
    282c:	df 93       	push	r29
    282e:	cf 93       	push	r28
    2830:	cd b7       	in	r28, 0x3d	; 61
    2832:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ADSAR , ADSAR_ADIE) ;
    2834:	a6 e2       	ldi	r26, 0x26	; 38
    2836:	b0 e0       	ldi	r27, 0x00	; 0
    2838:	e6 e2       	ldi	r30, 0x26	; 38
    283a:	f0 e0       	ldi	r31, 0x00	; 0
    283c:	80 81       	ld	r24, Z
    283e:	87 7f       	andi	r24, 0xF7	; 247
    2840:	8c 93       	st	X, r24
}
    2842:	cf 91       	pop	r28
    2844:	df 91       	pop	r29
    2846:	08 95       	ret

00002848 <ADC_u8SetPrescaler>:

//----------------------------------------------------------------------------------------------------------------------------------------------------

u8 ADC_u8SetPrescaler (u8 Copy_u8Prescaler)
{
    2848:	df 93       	push	r29
    284a:	cf 93       	push	r28
    284c:	00 d0       	rcall	.+0      	; 0x284e <ADC_u8SetPrescaler+0x6>
    284e:	cd b7       	in	r28, 0x3d	; 61
    2850:	de b7       	in	r29, 0x3e	; 62
    2852:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8ErrorState = OK ;
    2854:	81 e0       	ldi	r24, 0x01	; 1
    2856:	89 83       	std	Y+1, r24	; 0x01

	if (Copy_u8Prescaler < 8)
    2858:	8a 81       	ldd	r24, Y+2	; 0x02
    285a:	88 30       	cpi	r24, 0x08	; 8
    285c:	78 f4       	brcc	.+30     	; 0x287c <ADC_u8SetPrescaler+0x34>
	{
		/*Set Prescaler Value*/
		ADSAR &= ADC_PRE_MASK ;
    285e:	a6 e2       	ldi	r26, 0x26	; 38
    2860:	b0 e0       	ldi	r27, 0x00	; 0
    2862:	e6 e2       	ldi	r30, 0x26	; 38
    2864:	f0 e0       	ldi	r31, 0x00	; 0
    2866:	80 81       	ld	r24, Z
    2868:	88 7f       	andi	r24, 0xF8	; 248
    286a:	8c 93       	st	X, r24
		ADSAR |= Copy_u8Prescaler ;
    286c:	a6 e2       	ldi	r26, 0x26	; 38
    286e:	b0 e0       	ldi	r27, 0x00	; 0
    2870:	e6 e2       	ldi	r30, 0x26	; 38
    2872:	f0 e0       	ldi	r31, 0x00	; 0
    2874:	90 81       	ld	r25, Z
    2876:	8a 81       	ldd	r24, Y+2	; 0x02
    2878:	89 2b       	or	r24, r25
    287a:	8c 93       	st	X, r24
	}

	return Local_u8ErrorState ;
    287c:	89 81       	ldd	r24, Y+1	; 0x01
}
    287e:	0f 90       	pop	r0
    2880:	0f 90       	pop	r0
    2882:	cf 91       	pop	r28
    2884:	df 91       	pop	r29
    2886:	08 95       	ret

00002888 <ADC_u8GetResultSync>:

//----------------------------------------------------------------------------------------------------------------------------------------------------

u8 ADC_u8GetResultSync (u8 Copy_u8Channel , u16 * Copy_pu16Result)
{
    2888:	df 93       	push	r29
    288a:	cf 93       	push	r28
    288c:	cd b7       	in	r28, 0x3d	; 61
    288e:	de b7       	in	r29, 0x3e	; 62
    2890:	28 97       	sbiw	r28, 0x08	; 8
    2892:	0f b6       	in	r0, 0x3f	; 63
    2894:	f8 94       	cli
    2896:	de bf       	out	0x3e, r29	; 62
    2898:	0f be       	out	0x3f, r0	; 63
    289a:	cd bf       	out	0x3d, r28	; 61
    289c:	8e 83       	std	Y+6, r24	; 0x06
    289e:	78 87       	std	Y+8, r23	; 0x08
    28a0:	6f 83       	std	Y+7, r22	; 0x07
	u8 Local_u8ErrorState = OK ;
    28a2:	81 e0       	ldi	r24, 0x01	; 1
    28a4:	8d 83       	std	Y+5, r24	; 0x05
	u32 Local_u32TimeoutCounter = 0 ;
    28a6:	19 82       	std	Y+1, r1	; 0x01
    28a8:	1a 82       	std	Y+2, r1	; 0x02
    28aa:	1b 82       	std	Y+3, r1	; 0x03
    28ac:	1c 82       	std	Y+4, r1	; 0x04
	if (Copy_pu16Result != NULL)
    28ae:	8f 81       	ldd	r24, Y+7	; 0x07
    28b0:	98 85       	ldd	r25, Y+8	; 0x08
    28b2:	00 97       	sbiw	r24, 0x00	; 0
    28b4:	09 f4       	brne	.+2      	; 0x28b8 <ADC_u8GetResultSync+0x30>
    28b6:	74 c0       	rjmp	.+232    	; 0x29a0 <ADC_u8GetResultSync+0x118>
	{
		if (ADC_u8State == IDLE)
    28b8:	80 91 b6 01 	lds	r24, 0x01B6
    28bc:	88 23       	and	r24, r24
    28be:	09 f0       	breq	.+2      	; 0x28c2 <ADC_u8GetResultSync+0x3a>
    28c0:	6c c0       	rjmp	.+216    	; 0x299a <ADC_u8GetResultSync+0x112>
		{
			/*ADC is now Busy*/
			ADC_u8State = BUSY ;
    28c2:	81 e0       	ldi	r24, 0x01	; 1
    28c4:	80 93 b6 01 	sts	0x01B6, r24

			/*Set required channel*/
			ADMUX &= ADC_CH_MASK ;
    28c8:	a7 e2       	ldi	r26, 0x27	; 39
    28ca:	b0 e0       	ldi	r27, 0x00	; 0
    28cc:	e7 e2       	ldi	r30, 0x27	; 39
    28ce:	f0 e0       	ldi	r31, 0x00	; 0
    28d0:	80 81       	ld	r24, Z
    28d2:	80 7e       	andi	r24, 0xE0	; 224
    28d4:	8c 93       	st	X, r24
			ADMUX |= Copy_u8Channel ;
    28d6:	a7 e2       	ldi	r26, 0x27	; 39
    28d8:	b0 e0       	ldi	r27, 0x00	; 0
    28da:	e7 e2       	ldi	r30, 0x27	; 39
    28dc:	f0 e0       	ldi	r31, 0x00	; 0
    28de:	90 81       	ld	r25, Z
    28e0:	8e 81       	ldd	r24, Y+6	; 0x06
    28e2:	89 2b       	or	r24, r25
    28e4:	8c 93       	st	X, r24

			/*Start Conversion*/
			SET_BIT(ADSAR , ADSAR_ADSC) ;
    28e6:	a6 e2       	ldi	r26, 0x26	; 38
    28e8:	b0 e0       	ldi	r27, 0x00	; 0
    28ea:	e6 e2       	ldi	r30, 0x26	; 38
    28ec:	f0 e0       	ldi	r31, 0x00	; 0
    28ee:	80 81       	ld	r24, Z
    28f0:	80 64       	ori	r24, 0x40	; 64
    28f2:	8c 93       	st	X, r24
    28f4:	0b c0       	rjmp	.+22     	; 0x290c <ADC_u8GetResultSync+0x84>

			/*Waiting until the conversion is complete*/
			while (((RED_BIT(ADSAR , ADSAR_ADIF)) == 0) && (Local_u32TimeoutCounter < ADC_TIMEOUT))
			{
				Local_u32TimeoutCounter++ ;
    28f6:	89 81       	ldd	r24, Y+1	; 0x01
    28f8:	9a 81       	ldd	r25, Y+2	; 0x02
    28fa:	ab 81       	ldd	r26, Y+3	; 0x03
    28fc:	bc 81       	ldd	r27, Y+4	; 0x04
    28fe:	01 96       	adiw	r24, 0x01	; 1
    2900:	a1 1d       	adc	r26, r1
    2902:	b1 1d       	adc	r27, r1
    2904:	89 83       	std	Y+1, r24	; 0x01
    2906:	9a 83       	std	Y+2, r25	; 0x02
    2908:	ab 83       	std	Y+3, r26	; 0x03
    290a:	bc 83       	std	Y+4, r27	; 0x04

			/*Start Conversion*/
			SET_BIT(ADSAR , ADSAR_ADSC) ;

			/*Waiting until the conversion is complete*/
			while (((RED_BIT(ADSAR , ADSAR_ADIF)) == 0) && (Local_u32TimeoutCounter < ADC_TIMEOUT))
    290c:	e6 e2       	ldi	r30, 0x26	; 38
    290e:	f0 e0       	ldi	r31, 0x00	; 0
    2910:	80 81       	ld	r24, Z
    2912:	88 2f       	mov	r24, r24
    2914:	90 e0       	ldi	r25, 0x00	; 0
    2916:	80 71       	andi	r24, 0x10	; 16
    2918:	90 70       	andi	r25, 0x00	; 0
    291a:	95 95       	asr	r25
    291c:	87 95       	ror	r24
    291e:	95 95       	asr	r25
    2920:	87 95       	ror	r24
    2922:	95 95       	asr	r25
    2924:	87 95       	ror	r24
    2926:	95 95       	asr	r25
    2928:	87 95       	ror	r24
    292a:	00 97       	sbiw	r24, 0x00	; 0
    292c:	61 f4       	brne	.+24     	; 0x2946 <ADC_u8GetResultSync+0xbe>
    292e:	89 81       	ldd	r24, Y+1	; 0x01
    2930:	9a 81       	ldd	r25, Y+2	; 0x02
    2932:	ab 81       	ldd	r26, Y+3	; 0x03
    2934:	bc 81       	ldd	r27, Y+4	; 0x04
    2936:	80 35       	cpi	r24, 0x50	; 80
    2938:	23 ec       	ldi	r18, 0xC3	; 195
    293a:	92 07       	cpc	r25, r18
    293c:	20 e0       	ldi	r18, 0x00	; 0
    293e:	a2 07       	cpc	r26, r18
    2940:	20 e0       	ldi	r18, 0x00	; 0
    2942:	b2 07       	cpc	r27, r18
    2944:	c0 f2       	brcs	.-80     	; 0x28f6 <ADC_u8GetResultSync+0x6e>
			{
				Local_u32TimeoutCounter++ ;
			}
			if (Local_u32TimeoutCounter == ADC_TIMEOUT)
    2946:	89 81       	ldd	r24, Y+1	; 0x01
    2948:	9a 81       	ldd	r25, Y+2	; 0x02
    294a:	ab 81       	ldd	r26, Y+3	; 0x03
    294c:	bc 81       	ldd	r27, Y+4	; 0x04
    294e:	80 35       	cpi	r24, 0x50	; 80
    2950:	23 ec       	ldi	r18, 0xC3	; 195
    2952:	92 07       	cpc	r25, r18
    2954:	20 e0       	ldi	r18, 0x00	; 0
    2956:	a2 07       	cpc	r26, r18
    2958:	20 e0       	ldi	r18, 0x00	; 0
    295a:	b2 07       	cpc	r27, r18
    295c:	11 f4       	brne	.+4      	; 0x2962 <ADC_u8GetResultSync+0xda>
			{
				Local_u8ErrorState = TIMEOUT_STATE ;
    295e:	1d 82       	std	Y+5, r1	; 0x05
    2960:	19 c0       	rjmp	.+50     	; 0x2994 <ADC_u8GetResultSync+0x10c>
			}
			else
			{
				/*Clear the interrupt flag*/
				SET_BIT(ADSAR , ADSAR_ADIF) ;
    2962:	a6 e2       	ldi	r26, 0x26	; 38
    2964:	b0 e0       	ldi	r27, 0x00	; 0
    2966:	e6 e2       	ldi	r30, 0x26	; 38
    2968:	f0 e0       	ldi	r31, 0x00	; 0
    296a:	80 81       	ld	r24, Z
    296c:	80 61       	ori	r24, 0x10	; 16
    296e:	8c 93       	st	X, r24

				/*Return Conversion Result*/
				#if ADC_ADJUSTMENT == RIGHT_ADJUSTMENT
					*Copy_pu16Result = (ADCL|(ADCH << 8))  ;
    2970:	e4 e2       	ldi	r30, 0x24	; 36
    2972:	f0 e0       	ldi	r31, 0x00	; 0
    2974:	80 81       	ld	r24, Z
    2976:	28 2f       	mov	r18, r24
    2978:	30 e0       	ldi	r19, 0x00	; 0
    297a:	e5 e2       	ldi	r30, 0x25	; 37
    297c:	f0 e0       	ldi	r31, 0x00	; 0
    297e:	80 81       	ld	r24, Z
    2980:	88 2f       	mov	r24, r24
    2982:	90 e0       	ldi	r25, 0x00	; 0
    2984:	98 2f       	mov	r25, r24
    2986:	88 27       	eor	r24, r24
    2988:	82 2b       	or	r24, r18
    298a:	93 2b       	or	r25, r19
    298c:	ef 81       	ldd	r30, Y+7	; 0x07
    298e:	f8 85       	ldd	r31, Y+8	; 0x08
    2990:	91 83       	std	Z+1, r25	; 0x01
    2992:	80 83       	st	Z, r24

				#endif
			}

			/*ADC is IDLE*/
			ADC_u8State = IDLE ;
    2994:	10 92 b6 01 	sts	0x01B6, r1
    2998:	05 c0       	rjmp	.+10     	; 0x29a4 <ADC_u8GetResultSync+0x11c>
		}
		else
		{
			Local_u8ErrorState = BUSY_STATE ;
    299a:	81 e0       	ldi	r24, 0x01	; 1
    299c:	8d 83       	std	Y+5, r24	; 0x05
    299e:	02 c0       	rjmp	.+4      	; 0x29a4 <ADC_u8GetResultSync+0x11c>


	}
	else
	{
		Local_u8ErrorState = NULL_POINTER ;
    29a0:	82 e0       	ldi	r24, 0x02	; 2
    29a2:	8d 83       	std	Y+5, r24	; 0x05
	}
	return Local_u8ErrorState ;
    29a4:	8d 81       	ldd	r24, Y+5	; 0x05
}
    29a6:	28 96       	adiw	r28, 0x08	; 8
    29a8:	0f b6       	in	r0, 0x3f	; 63
    29aa:	f8 94       	cli
    29ac:	de bf       	out	0x3e, r29	; 62
    29ae:	0f be       	out	0x3f, r0	; 63
    29b0:	cd bf       	out	0x3d, r28	; 61
    29b2:	cf 91       	pop	r28
    29b4:	df 91       	pop	r29
    29b6:	08 95       	ret

000029b8 <ADC_u8StartConversionAsynch>:

//----------------------------------------------------------------------------------------------------------------------------------------------------

u8 ADC_u8StartConversionAsynch (u8 Copy_u8Channel , u16 * Copy_pu16Result , void (*Copy_pvNotificationFunc)(void))
{
    29b8:	df 93       	push	r29
    29ba:	cf 93       	push	r28
    29bc:	00 d0       	rcall	.+0      	; 0x29be <ADC_u8StartConversionAsynch+0x6>
    29be:	00 d0       	rcall	.+0      	; 0x29c0 <ADC_u8StartConversionAsynch+0x8>
    29c0:	00 d0       	rcall	.+0      	; 0x29c2 <ADC_u8StartConversionAsynch+0xa>
    29c2:	cd b7       	in	r28, 0x3d	; 61
    29c4:	de b7       	in	r29, 0x3e	; 62
    29c6:	8a 83       	std	Y+2, r24	; 0x02
    29c8:	7c 83       	std	Y+4, r23	; 0x04
    29ca:	6b 83       	std	Y+3, r22	; 0x03
    29cc:	5e 83       	std	Y+6, r21	; 0x06
    29ce:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8ErrorState = OK ;
    29d0:	81 e0       	ldi	r24, 0x01	; 1
    29d2:	89 83       	std	Y+1, r24	; 0x01

	if ((Copy_pu16Result != NULL) && (Copy_pvNotificationFunc != NULL))
    29d4:	8b 81       	ldd	r24, Y+3	; 0x03
    29d6:	9c 81       	ldd	r25, Y+4	; 0x04
    29d8:	00 97       	sbiw	r24, 0x00	; 0
    29da:	d1 f1       	breq	.+116    	; 0x2a50 <ADC_u8StartConversionAsynch+0x98>
    29dc:	8d 81       	ldd	r24, Y+5	; 0x05
    29de:	9e 81       	ldd	r25, Y+6	; 0x06
    29e0:	00 97       	sbiw	r24, 0x00	; 0
    29e2:	b1 f1       	breq	.+108    	; 0x2a50 <ADC_u8StartConversionAsynch+0x98>
	{
		if (ADC_u8State == IDLE)
    29e4:	80 91 b6 01 	lds	r24, 0x01B6
    29e8:	88 23       	and	r24, r24
    29ea:	79 f5       	brne	.+94     	; 0x2a4a <ADC_u8StartConversionAsynch+0x92>
		{
			/*ADC is now Busy*/
			ADC_u8State = BUSY ;
    29ec:	81 e0       	ldi	r24, 0x01	; 1
    29ee:	80 93 b6 01 	sts	0x01B6, r24

			/*Set ISR State*/
			ADC_u8ISRState = SINGLE_CHANNEL_ASYNCH ;
    29f2:	10 92 b7 01 	sts	0x01B7, r1

			/*Initialize the global result pointer*/
			ADC_pu16AsynchConversionResult = Copy_pu16Result;
    29f6:	8b 81       	ldd	r24, Y+3	; 0x03
    29f8:	9c 81       	ldd	r25, Y+4	; 0x04
    29fa:	90 93 b3 01 	sts	0x01B3, r25
    29fe:	80 93 b2 01 	sts	0x01B2, r24

			/*Initialize the global notification function pointer*/
			ADC_pvNotificationFunc= Copy_pvNotificationFunc;
    2a02:	8d 81       	ldd	r24, Y+5	; 0x05
    2a04:	9e 81       	ldd	r25, Y+6	; 0x06
    2a06:	90 93 b5 01 	sts	0x01B5, r25
    2a0a:	80 93 b4 01 	sts	0x01B4, r24

			/*Set required channel*/
			ADMUX &= ADC_CH_MASK ;
    2a0e:	a7 e2       	ldi	r26, 0x27	; 39
    2a10:	b0 e0       	ldi	r27, 0x00	; 0
    2a12:	e7 e2       	ldi	r30, 0x27	; 39
    2a14:	f0 e0       	ldi	r31, 0x00	; 0
    2a16:	80 81       	ld	r24, Z
    2a18:	80 7e       	andi	r24, 0xE0	; 224
    2a1a:	8c 93       	st	X, r24
			ADMUX |= Copy_u8Channel ;
    2a1c:	a7 e2       	ldi	r26, 0x27	; 39
    2a1e:	b0 e0       	ldi	r27, 0x00	; 0
    2a20:	e7 e2       	ldi	r30, 0x27	; 39
    2a22:	f0 e0       	ldi	r31, 0x00	; 0
    2a24:	90 81       	ld	r25, Z
    2a26:	8a 81       	ldd	r24, Y+2	; 0x02
    2a28:	89 2b       	or	r24, r25
    2a2a:	8c 93       	st	X, r24

			/*Start Conversion*/
			SET_BIT(ADSAR , ADSAR_ADSC) ;
    2a2c:	a6 e2       	ldi	r26, 0x26	; 38
    2a2e:	b0 e0       	ldi	r27, 0x00	; 0
    2a30:	e6 e2       	ldi	r30, 0x26	; 38
    2a32:	f0 e0       	ldi	r31, 0x00	; 0
    2a34:	80 81       	ld	r24, Z
    2a36:	80 64       	ori	r24, 0x40	; 64
    2a38:	8c 93       	st	X, r24

			/*ADC Conversion Complete Interrupt Enable*/
			SET_BIT(ADSAR , ADSAR_ADIE) ;
    2a3a:	a6 e2       	ldi	r26, 0x26	; 38
    2a3c:	b0 e0       	ldi	r27, 0x00	; 0
    2a3e:	e6 e2       	ldi	r30, 0x26	; 38
    2a40:	f0 e0       	ldi	r31, 0x00	; 0
    2a42:	80 81       	ld	r24, Z
    2a44:	88 60       	ori	r24, 0x08	; 8
    2a46:	8c 93       	st	X, r24
    2a48:	05 c0       	rjmp	.+10     	; 0x2a54 <ADC_u8StartConversionAsynch+0x9c>
		}
		else
		{
			Local_u8ErrorState = BUSY_STATE ;
    2a4a:	81 e0       	ldi	r24, 0x01	; 1
    2a4c:	89 83       	std	Y+1, r24	; 0x01
    2a4e:	02 c0       	rjmp	.+4      	; 0x2a54 <ADC_u8StartConversionAsynch+0x9c>
		}
	}
	else
	{
		Local_u8ErrorState = NULL_POINTER ;
    2a50:	82 e0       	ldi	r24, 0x02	; 2
    2a52:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState ;
    2a54:	89 81       	ldd	r24, Y+1	; 0x01
}
    2a56:	26 96       	adiw	r28, 0x06	; 6
    2a58:	0f b6       	in	r0, 0x3f	; 63
    2a5a:	f8 94       	cli
    2a5c:	de bf       	out	0x3e, r29	; 62
    2a5e:	0f be       	out	0x3f, r0	; 63
    2a60:	cd bf       	out	0x3d, r28	; 61
    2a62:	cf 91       	pop	r28
    2a64:	df 91       	pop	r29
    2a66:	08 95       	ret

00002a68 <ADC_u8StartChainAsynch>:

//----------------------------------------------------------------------------------------------------------------------------------------------------

u8 ADC_u8StartChainAsynch (Chain_t * Copy_Chain)
{
    2a68:	df 93       	push	r29
    2a6a:	cf 93       	push	r28
    2a6c:	00 d0       	rcall	.+0      	; 0x2a6e <ADC_u8StartChainAsynch+0x6>
    2a6e:	0f 92       	push	r0
    2a70:	cd b7       	in	r28, 0x3d	; 61
    2a72:	de b7       	in	r29, 0x3e	; 62
    2a74:	9b 83       	std	Y+3, r25	; 0x03
    2a76:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8ErrorState = OK ;
    2a78:	81 e0       	ldi	r24, 0x01	; 1
    2a7a:	89 83       	std	Y+1, r24	; 0x01

	if ((Copy_Chain != NULL) && (Copy_Chain->Channel != NULL) && (Copy_Chain->NotificationFunc != NULL) && (Copy_Chain->Result))
    2a7c:	8a 81       	ldd	r24, Y+2	; 0x02
    2a7e:	9b 81       	ldd	r25, Y+3	; 0x03
    2a80:	00 97       	sbiw	r24, 0x00	; 0
    2a82:	09 f4       	brne	.+2      	; 0x2a86 <ADC_u8StartChainAsynch+0x1e>
    2a84:	6b c0       	rjmp	.+214    	; 0x2b5c <ADC_u8StartChainAsynch+0xf4>
    2a86:	ea 81       	ldd	r30, Y+2	; 0x02
    2a88:	fb 81       	ldd	r31, Y+3	; 0x03
    2a8a:	80 81       	ld	r24, Z
    2a8c:	91 81       	ldd	r25, Z+1	; 0x01
    2a8e:	00 97       	sbiw	r24, 0x00	; 0
    2a90:	09 f4       	brne	.+2      	; 0x2a94 <ADC_u8StartChainAsynch+0x2c>
    2a92:	64 c0       	rjmp	.+200    	; 0x2b5c <ADC_u8StartChainAsynch+0xf4>
    2a94:	ea 81       	ldd	r30, Y+2	; 0x02
    2a96:	fb 81       	ldd	r31, Y+3	; 0x03
    2a98:	85 81       	ldd	r24, Z+5	; 0x05
    2a9a:	96 81       	ldd	r25, Z+6	; 0x06
    2a9c:	00 97       	sbiw	r24, 0x00	; 0
    2a9e:	09 f4       	brne	.+2      	; 0x2aa2 <ADC_u8StartChainAsynch+0x3a>
    2aa0:	5d c0       	rjmp	.+186    	; 0x2b5c <ADC_u8StartChainAsynch+0xf4>
    2aa2:	ea 81       	ldd	r30, Y+2	; 0x02
    2aa4:	fb 81       	ldd	r31, Y+3	; 0x03
    2aa6:	82 81       	ldd	r24, Z+2	; 0x02
    2aa8:	93 81       	ldd	r25, Z+3	; 0x03
    2aaa:	00 97       	sbiw	r24, 0x00	; 0
    2aac:	09 f4       	brne	.+2      	; 0x2ab0 <ADC_u8StartChainAsynch+0x48>
    2aae:	56 c0       	rjmp	.+172    	; 0x2b5c <ADC_u8StartChainAsynch+0xf4>
	{
		if (ADC_u8State == IDLE)
    2ab0:	80 91 b6 01 	lds	r24, 0x01B6
    2ab4:	88 23       	and	r24, r24
    2ab6:	09 f0       	breq	.+2      	; 0x2aba <ADC_u8StartChainAsynch+0x52>
    2ab8:	4e c0       	rjmp	.+156    	; 0x2b56 <ADC_u8StartChainAsynch+0xee>
		{
			/*ADC is now Busy*/
			ADC_u8State = BUSY ;
    2aba:	81 e0       	ldi	r24, 0x01	; 1
    2abc:	80 93 b6 01 	sts	0x01B6, r24

			/*Set ISR State*/
			ADC_u8ISRState = CHAIN_CHANNEL_ASYNCH ;
    2ac0:	81 e0       	ldi	r24, 0x01	; 1
    2ac2:	80 93 b7 01 	sts	0x01B7, r24

			/*Assign the ADC data globally*/
			ADC_pu16AsynchConversionResult = Copy_Chain->Result ;
    2ac6:	ea 81       	ldd	r30, Y+2	; 0x02
    2ac8:	fb 81       	ldd	r31, Y+3	; 0x03
    2aca:	82 81       	ldd	r24, Z+2	; 0x02
    2acc:	93 81       	ldd	r25, Z+3	; 0x03
    2ace:	90 93 b3 01 	sts	0x01B3, r25
    2ad2:	80 93 b2 01 	sts	0x01B2, r24
			ADC_pu8ChainChannel = Copy_Chain->Channel ;
    2ad6:	ea 81       	ldd	r30, Y+2	; 0x02
    2ad8:	fb 81       	ldd	r31, Y+3	; 0x03
    2ada:	80 81       	ld	r24, Z
    2adc:	91 81       	ldd	r25, Z+1	; 0x01
    2ade:	90 93 b9 01 	sts	0x01B9, r25
    2ae2:	80 93 b8 01 	sts	0x01B8, r24
			ADC_u8ChainSize = Copy_Chain->Size ;
    2ae6:	ea 81       	ldd	r30, Y+2	; 0x02
    2ae8:	fb 81       	ldd	r31, Y+3	; 0x03
    2aea:	84 81       	ldd	r24, Z+4	; 0x04
    2aec:	80 93 ba 01 	sts	0x01BA, r24
			ADC_pvNotificationFunc = Copy_Chain->NotificationFunc ;
    2af0:	ea 81       	ldd	r30, Y+2	; 0x02
    2af2:	fb 81       	ldd	r31, Y+3	; 0x03
    2af4:	85 81       	ldd	r24, Z+5	; 0x05
    2af6:	96 81       	ldd	r25, Z+6	; 0x06
    2af8:	90 93 b5 01 	sts	0x01B5, r25
    2afc:	80 93 b4 01 	sts	0x01B4, r24

			/*Set Index to first element*/
			ADC_u8Index = 0 ;
    2b00:	10 92 bb 01 	sts	0x01BB, r1

			/*Set required channel*/
			ADMUX &= ADC_CH_MASK ;
    2b04:	a7 e2       	ldi	r26, 0x27	; 39
    2b06:	b0 e0       	ldi	r27, 0x00	; 0
    2b08:	e7 e2       	ldi	r30, 0x27	; 39
    2b0a:	f0 e0       	ldi	r31, 0x00	; 0
    2b0c:	80 81       	ld	r24, Z
    2b0e:	80 7e       	andi	r24, 0xE0	; 224
    2b10:	8c 93       	st	X, r24
			ADMUX |= ADC_pu8ChainChannel[ADC_u8Index] ;
    2b12:	a7 e2       	ldi	r26, 0x27	; 39
    2b14:	b0 e0       	ldi	r27, 0x00	; 0
    2b16:	e7 e2       	ldi	r30, 0x27	; 39
    2b18:	f0 e0       	ldi	r31, 0x00	; 0
    2b1a:	40 81       	ld	r20, Z
    2b1c:	20 91 b8 01 	lds	r18, 0x01B8
    2b20:	30 91 b9 01 	lds	r19, 0x01B9
    2b24:	80 91 bb 01 	lds	r24, 0x01BB
    2b28:	88 2f       	mov	r24, r24
    2b2a:	90 e0       	ldi	r25, 0x00	; 0
    2b2c:	f9 01       	movw	r30, r18
    2b2e:	e8 0f       	add	r30, r24
    2b30:	f9 1f       	adc	r31, r25
    2b32:	80 81       	ld	r24, Z
    2b34:	84 2b       	or	r24, r20
    2b36:	8c 93       	st	X, r24

			/*Start Conversion*/
			SET_BIT(ADSAR , ADSAR_ADSC) ;
    2b38:	a6 e2       	ldi	r26, 0x26	; 38
    2b3a:	b0 e0       	ldi	r27, 0x00	; 0
    2b3c:	e6 e2       	ldi	r30, 0x26	; 38
    2b3e:	f0 e0       	ldi	r31, 0x00	; 0
    2b40:	80 81       	ld	r24, Z
    2b42:	80 64       	ori	r24, 0x40	; 64
    2b44:	8c 93       	st	X, r24

			/*ADC Conversion Complete Interrupt Enable*/
			SET_BIT(ADSAR , ADSAR_ADIE) ;
    2b46:	a6 e2       	ldi	r26, 0x26	; 38
    2b48:	b0 e0       	ldi	r27, 0x00	; 0
    2b4a:	e6 e2       	ldi	r30, 0x26	; 38
    2b4c:	f0 e0       	ldi	r31, 0x00	; 0
    2b4e:	80 81       	ld	r24, Z
    2b50:	88 60       	ori	r24, 0x08	; 8
    2b52:	8c 93       	st	X, r24
    2b54:	05 c0       	rjmp	.+10     	; 0x2b60 <ADC_u8StartChainAsynch+0xf8>
		}
		else
		{
			Local_u8ErrorState = BUSY_STATE ;
    2b56:	81 e0       	ldi	r24, 0x01	; 1
    2b58:	89 83       	std	Y+1, r24	; 0x01
    2b5a:	02 c0       	rjmp	.+4      	; 0x2b60 <ADC_u8StartChainAsynch+0xf8>
		}

	}
	else
	{
		Local_u8ErrorState = NULL_POINTER ;
    2b5c:	82 e0       	ldi	r24, 0x02	; 2
    2b5e:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState ;
    2b60:	89 81       	ldd	r24, Y+1	; 0x01
}
    2b62:	0f 90       	pop	r0
    2b64:	0f 90       	pop	r0
    2b66:	0f 90       	pop	r0
    2b68:	cf 91       	pop	r28
    2b6a:	df 91       	pop	r29
    2b6c:	08 95       	ret

00002b6e <__vector_16>:
//----------------------------------------------------------------------------------------------------------------------------------------------------

/* ISR for ADC conversion complete */
void __vector_16 (void)  __attribute__((signal)) ;
void __vector_16 (void)
{
    2b6e:	1f 92       	push	r1
    2b70:	0f 92       	push	r0
    2b72:	0f b6       	in	r0, 0x3f	; 63
    2b74:	0f 92       	push	r0
    2b76:	11 24       	eor	r1, r1
    2b78:	2f 93       	push	r18
    2b7a:	3f 93       	push	r19
    2b7c:	4f 93       	push	r20
    2b7e:	5f 93       	push	r21
    2b80:	6f 93       	push	r22
    2b82:	7f 93       	push	r23
    2b84:	8f 93       	push	r24
    2b86:	9f 93       	push	r25
    2b88:	af 93       	push	r26
    2b8a:	bf 93       	push	r27
    2b8c:	ef 93       	push	r30
    2b8e:	ff 93       	push	r31
    2b90:	df 93       	push	r29
    2b92:	cf 93       	push	r28
    2b94:	cd b7       	in	r28, 0x3d	; 61
    2b96:	de b7       	in	r29, 0x3e	; 62
	if (ADC_u8ISRState == SINGLE_CHANNEL_ASYNCH)
    2b98:	80 91 b7 01 	lds	r24, 0x01B7
    2b9c:	88 23       	and	r24, r24
    2b9e:	19 f5       	brne	.+70     	; 0x2be6 <__vector_16+0x78>
	{
		/*Return Conversion Result*/
				#if ADC_ADJUSTMENT == RIGHT_ADJUSTMENT
					* ADC_pu16AsynchConversionResult = (ADCL|(ADCH << 8))  ;
    2ba0:	a0 91 b2 01 	lds	r26, 0x01B2
    2ba4:	b0 91 b3 01 	lds	r27, 0x01B3
    2ba8:	e4 e2       	ldi	r30, 0x24	; 36
    2baa:	f0 e0       	ldi	r31, 0x00	; 0
    2bac:	80 81       	ld	r24, Z
    2bae:	28 2f       	mov	r18, r24
    2bb0:	30 e0       	ldi	r19, 0x00	; 0
    2bb2:	e5 e2       	ldi	r30, 0x25	; 37
    2bb4:	f0 e0       	ldi	r31, 0x00	; 0
    2bb6:	80 81       	ld	r24, Z
    2bb8:	88 2f       	mov	r24, r24
    2bba:	90 e0       	ldi	r25, 0x00	; 0
    2bbc:	98 2f       	mov	r25, r24
    2bbe:	88 27       	eor	r24, r24
    2bc0:	82 2b       	or	r24, r18
    2bc2:	93 2b       	or	r25, r19
    2bc4:	8d 93       	st	X+, r24
    2bc6:	9c 93       	st	X, r25
					#error "Wrong ADC_ADJUSTMENT config"

				#endif

		/*ADC is IDLE*/
		ADC_u8State = IDLE ;
    2bc8:	10 92 b6 01 	sts	0x01B6, r1

		/*Call Notification Function*/
		ADC_pvNotificationFunc() ;
    2bcc:	e0 91 b4 01 	lds	r30, 0x01B4
    2bd0:	f0 91 b5 01 	lds	r31, 0x01B5
    2bd4:	09 95       	icall

		/*Disable the Conversion Complete Interrupt*/
		CLR_BIT(ADSAR , ADSAR_ADIE) ;
    2bd6:	a6 e2       	ldi	r26, 0x26	; 38
    2bd8:	b0 e0       	ldi	r27, 0x00	; 0
    2bda:	e6 e2       	ldi	r30, 0x26	; 38
    2bdc:	f0 e0       	ldi	r31, 0x00	; 0
    2bde:	80 81       	ld	r24, Z
    2be0:	87 7f       	andi	r24, 0xF7	; 247
    2be2:	8c 93       	st	X, r24
    2be4:	50 c0       	rjmp	.+160    	; 0x2c86 <__vector_16+0x118>
	}
	else
	{
		/*Return Conversion Result*/
		#if ADC_ADJUSTMENT == RIGHT_ADJUSTMENT
			*ADC_pu16AsynchConversionResult = (ADCL|(ADCH << 8))  ;
    2be6:	a0 91 b2 01 	lds	r26, 0x01B2
    2bea:	b0 91 b3 01 	lds	r27, 0x01B3
    2bee:	e4 e2       	ldi	r30, 0x24	; 36
    2bf0:	f0 e0       	ldi	r31, 0x00	; 0
    2bf2:	80 81       	ld	r24, Z
    2bf4:	28 2f       	mov	r18, r24
    2bf6:	30 e0       	ldi	r19, 0x00	; 0
    2bf8:	e5 e2       	ldi	r30, 0x25	; 37
    2bfa:	f0 e0       	ldi	r31, 0x00	; 0
    2bfc:	80 81       	ld	r24, Z
    2bfe:	88 2f       	mov	r24, r24
    2c00:	90 e0       	ldi	r25, 0x00	; 0
    2c02:	98 2f       	mov	r25, r24
    2c04:	88 27       	eor	r24, r24
    2c06:	82 2b       	or	r24, r18
    2c08:	93 2b       	or	r25, r19
    2c0a:	11 96       	adiw	r26, 0x01	; 1
    2c0c:	9c 93       	st	X, r25
    2c0e:	8e 93       	st	-X, r24
			#error "Wrong ADC_ADJUSTMENT config"

		#endif

		/*Increment Data index of the chain*/
		ADC_u8Index++ ;
    2c10:	80 91 bb 01 	lds	r24, 0x01BB
    2c14:	8f 5f       	subi	r24, 0xFF	; 255
    2c16:	80 93 bb 01 	sts	0x01BB, r24

		if (ADC_u8Index == ADC_u8ChainSize)
    2c1a:	90 91 bb 01 	lds	r25, 0x01BB
    2c1e:	80 91 ba 01 	lds	r24, 0x01BA
    2c22:	98 17       	cp	r25, r24
    2c24:	79 f4       	brne	.+30     	; 0x2c44 <__vector_16+0xd6>
		{
			/*ADC is IDLE*/
			ADC_u8State = IDLE ;
    2c26:	10 92 b6 01 	sts	0x01B6, r1

			/*Call Notification Function*/
			ADC_pvNotificationFunc() ;
    2c2a:	e0 91 b4 01 	lds	r30, 0x01B4
    2c2e:	f0 91 b5 01 	lds	r31, 0x01B5
    2c32:	09 95       	icall

			/*Disable the Conversion Complete Interrupt*/
			CLR_BIT(ADSAR , ADSAR_ADIE) ;
    2c34:	a6 e2       	ldi	r26, 0x26	; 38
    2c36:	b0 e0       	ldi	r27, 0x00	; 0
    2c38:	e6 e2       	ldi	r30, 0x26	; 38
    2c3a:	f0 e0       	ldi	r31, 0x00	; 0
    2c3c:	80 81       	ld	r24, Z
    2c3e:	87 7f       	andi	r24, 0xF7	; 247
    2c40:	8c 93       	st	X, r24
    2c42:	21 c0       	rjmp	.+66     	; 0x2c86 <__vector_16+0x118>
		}
		else
		{
			/*Set required channel*/
			ADMUX &= ADC_CH_MASK ;
    2c44:	a7 e2       	ldi	r26, 0x27	; 39
    2c46:	b0 e0       	ldi	r27, 0x00	; 0
    2c48:	e7 e2       	ldi	r30, 0x27	; 39
    2c4a:	f0 e0       	ldi	r31, 0x00	; 0
    2c4c:	80 81       	ld	r24, Z
    2c4e:	80 7e       	andi	r24, 0xE0	; 224
    2c50:	8c 93       	st	X, r24
			ADMUX |= ADC_pu8ChainChannel[ADC_u8Index] ;
    2c52:	a7 e2       	ldi	r26, 0x27	; 39
    2c54:	b0 e0       	ldi	r27, 0x00	; 0
    2c56:	e7 e2       	ldi	r30, 0x27	; 39
    2c58:	f0 e0       	ldi	r31, 0x00	; 0
    2c5a:	40 81       	ld	r20, Z
    2c5c:	20 91 b8 01 	lds	r18, 0x01B8
    2c60:	30 91 b9 01 	lds	r19, 0x01B9
    2c64:	80 91 bb 01 	lds	r24, 0x01BB
    2c68:	88 2f       	mov	r24, r24
    2c6a:	90 e0       	ldi	r25, 0x00	; 0
    2c6c:	f9 01       	movw	r30, r18
    2c6e:	e8 0f       	add	r30, r24
    2c70:	f9 1f       	adc	r31, r25
    2c72:	80 81       	ld	r24, Z
    2c74:	84 2b       	or	r24, r20
    2c76:	8c 93       	st	X, r24

			/*Start Conversion*/
			SET_BIT(ADSAR , ADSAR_ADSC) ;
    2c78:	a6 e2       	ldi	r26, 0x26	; 38
    2c7a:	b0 e0       	ldi	r27, 0x00	; 0
    2c7c:	e6 e2       	ldi	r30, 0x26	; 38
    2c7e:	f0 e0       	ldi	r31, 0x00	; 0
    2c80:	80 81       	ld	r24, Z
    2c82:	80 64       	ori	r24, 0x40	; 64
    2c84:	8c 93       	st	X, r24
		}
	}
}
    2c86:	cf 91       	pop	r28
    2c88:	df 91       	pop	r29
    2c8a:	ff 91       	pop	r31
    2c8c:	ef 91       	pop	r30
    2c8e:	bf 91       	pop	r27
    2c90:	af 91       	pop	r26
    2c92:	9f 91       	pop	r25
    2c94:	8f 91       	pop	r24
    2c96:	7f 91       	pop	r23
    2c98:	6f 91       	pop	r22
    2c9a:	5f 91       	pop	r21
    2c9c:	4f 91       	pop	r20
    2c9e:	3f 91       	pop	r19
    2ca0:	2f 91       	pop	r18
    2ca2:	0f 90       	pop	r0
    2ca4:	0f be       	out	0x3f, r0	; 63
    2ca6:	0f 90       	pop	r0
    2ca8:	1f 90       	pop	r1
    2caa:	18 95       	reti

00002cac <CLCD_voidInial>:
#include "CLCD_extrachar.h"



void CLCD_voidInial        ( void                         )
{
    2cac:	0f 93       	push	r16
    2cae:	1f 93       	push	r17
    2cb0:	df 93       	push	r29
    2cb2:	cf 93       	push	r28
    2cb4:	cd b7       	in	r28, 0x3d	; 61
    2cb6:	de b7       	in	r29, 0x3e	; 62
    2cb8:	c6 54       	subi	r28, 0x46	; 70
    2cba:	d0 40       	sbci	r29, 0x00	; 0
    2cbc:	0f b6       	in	r0, 0x3f	; 63
    2cbe:	f8 94       	cli
    2cc0:	de bf       	out	0x3e, r29	; 62
    2cc2:	0f be       	out	0x3f, r0	; 63
    2cc4:	cd bf       	out	0x3d, r28	; 61
    2cc6:	fe 01       	movw	r30, r28
    2cc8:	ed 5b       	subi	r30, 0xBD	; 189
    2cca:	ff 4f       	sbci	r31, 0xFF	; 255
    2ccc:	80 e0       	ldi	r24, 0x00	; 0
    2cce:	90 e0       	ldi	r25, 0x00	; 0
    2cd0:	a8 e4       	ldi	r26, 0x48	; 72
    2cd2:	b2 e4       	ldi	r27, 0x42	; 66
    2cd4:	80 83       	st	Z, r24
    2cd6:	91 83       	std	Z+1, r25	; 0x01
    2cd8:	a2 83       	std	Z+2, r26	; 0x02
    2cda:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2cdc:	8e 01       	movw	r16, r28
    2cde:	01 5c       	subi	r16, 0xC1	; 193
    2ce0:	1f 4f       	sbci	r17, 0xFF	; 255
    2ce2:	fe 01       	movw	r30, r28
    2ce4:	ed 5b       	subi	r30, 0xBD	; 189
    2ce6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ce8:	60 81       	ld	r22, Z
    2cea:	71 81       	ldd	r23, Z+1	; 0x01
    2cec:	82 81       	ldd	r24, Z+2	; 0x02
    2cee:	93 81       	ldd	r25, Z+3	; 0x03
    2cf0:	20 e0       	ldi	r18, 0x00	; 0
    2cf2:	30 e0       	ldi	r19, 0x00	; 0
    2cf4:	4a ef       	ldi	r20, 0xFA	; 250
    2cf6:	54 e4       	ldi	r21, 0x44	; 68
    2cf8:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    2cfc:	dc 01       	movw	r26, r24
    2cfe:	cb 01       	movw	r24, r22
    2d00:	f8 01       	movw	r30, r16
    2d02:	80 83       	st	Z, r24
    2d04:	91 83       	std	Z+1, r25	; 0x01
    2d06:	a2 83       	std	Z+2, r26	; 0x02
    2d08:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2d0a:	fe 01       	movw	r30, r28
    2d0c:	ff 96       	adiw	r30, 0x3f	; 63
    2d0e:	60 81       	ld	r22, Z
    2d10:	71 81       	ldd	r23, Z+1	; 0x01
    2d12:	82 81       	ldd	r24, Z+2	; 0x02
    2d14:	93 81       	ldd	r25, Z+3	; 0x03
    2d16:	20 e0       	ldi	r18, 0x00	; 0
    2d18:	30 e0       	ldi	r19, 0x00	; 0
    2d1a:	40 e8       	ldi	r20, 0x80	; 128
    2d1c:	5f e3       	ldi	r21, 0x3F	; 63
    2d1e:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    2d22:	88 23       	and	r24, r24
    2d24:	2c f4       	brge	.+10     	; 0x2d30 <CLCD_voidInial+0x84>
		__ticks = 1;
    2d26:	81 e0       	ldi	r24, 0x01	; 1
    2d28:	90 e0       	ldi	r25, 0x00	; 0
    2d2a:	9e af       	std	Y+62, r25	; 0x3e
    2d2c:	8d af       	std	Y+61, r24	; 0x3d
    2d2e:	46 c0       	rjmp	.+140    	; 0x2dbc <CLCD_voidInial+0x110>
	else if (__tmp > 65535)
    2d30:	fe 01       	movw	r30, r28
    2d32:	ff 96       	adiw	r30, 0x3f	; 63
    2d34:	60 81       	ld	r22, Z
    2d36:	71 81       	ldd	r23, Z+1	; 0x01
    2d38:	82 81       	ldd	r24, Z+2	; 0x02
    2d3a:	93 81       	ldd	r25, Z+3	; 0x03
    2d3c:	20 e0       	ldi	r18, 0x00	; 0
    2d3e:	3f ef       	ldi	r19, 0xFF	; 255
    2d40:	4f e7       	ldi	r20, 0x7F	; 127
    2d42:	57 e4       	ldi	r21, 0x47	; 71
    2d44:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    2d48:	18 16       	cp	r1, r24
    2d4a:	64 f5       	brge	.+88     	; 0x2da4 <CLCD_voidInial+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d4c:	fe 01       	movw	r30, r28
    2d4e:	ed 5b       	subi	r30, 0xBD	; 189
    2d50:	ff 4f       	sbci	r31, 0xFF	; 255
    2d52:	60 81       	ld	r22, Z
    2d54:	71 81       	ldd	r23, Z+1	; 0x01
    2d56:	82 81       	ldd	r24, Z+2	; 0x02
    2d58:	93 81       	ldd	r25, Z+3	; 0x03
    2d5a:	20 e0       	ldi	r18, 0x00	; 0
    2d5c:	30 e0       	ldi	r19, 0x00	; 0
    2d5e:	40 e2       	ldi	r20, 0x20	; 32
    2d60:	51 e4       	ldi	r21, 0x41	; 65
    2d62:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    2d66:	dc 01       	movw	r26, r24
    2d68:	cb 01       	movw	r24, r22
    2d6a:	bc 01       	movw	r22, r24
    2d6c:	cd 01       	movw	r24, r26
    2d6e:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2d72:	dc 01       	movw	r26, r24
    2d74:	cb 01       	movw	r24, r22
    2d76:	9e af       	std	Y+62, r25	; 0x3e
    2d78:	8d af       	std	Y+61, r24	; 0x3d
    2d7a:	0f c0       	rjmp	.+30     	; 0x2d9a <CLCD_voidInial+0xee>
    2d7c:	88 ec       	ldi	r24, 0xC8	; 200
    2d7e:	90 e0       	ldi	r25, 0x00	; 0
    2d80:	9c af       	std	Y+60, r25	; 0x3c
    2d82:	8b af       	std	Y+59, r24	; 0x3b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2d84:	8b ad       	ldd	r24, Y+59	; 0x3b
    2d86:	9c ad       	ldd	r25, Y+60	; 0x3c
    2d88:	01 97       	sbiw	r24, 0x01	; 1
    2d8a:	f1 f7       	brne	.-4      	; 0x2d88 <CLCD_voidInial+0xdc>
    2d8c:	9c af       	std	Y+60, r25	; 0x3c
    2d8e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d90:	8d ad       	ldd	r24, Y+61	; 0x3d
    2d92:	9e ad       	ldd	r25, Y+62	; 0x3e
    2d94:	01 97       	sbiw	r24, 0x01	; 1
    2d96:	9e af       	std	Y+62, r25	; 0x3e
    2d98:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d9a:	8d ad       	ldd	r24, Y+61	; 0x3d
    2d9c:	9e ad       	ldd	r25, Y+62	; 0x3e
    2d9e:	00 97       	sbiw	r24, 0x00	; 0
    2da0:	69 f7       	brne	.-38     	; 0x2d7c <CLCD_voidInial+0xd0>
    2da2:	16 c0       	rjmp	.+44     	; 0x2dd0 <CLCD_voidInial+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2da4:	fe 01       	movw	r30, r28
    2da6:	ff 96       	adiw	r30, 0x3f	; 63
    2da8:	60 81       	ld	r22, Z
    2daa:	71 81       	ldd	r23, Z+1	; 0x01
    2dac:	82 81       	ldd	r24, Z+2	; 0x02
    2dae:	93 81       	ldd	r25, Z+3	; 0x03
    2db0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2db4:	dc 01       	movw	r26, r24
    2db6:	cb 01       	movw	r24, r22
    2db8:	9e af       	std	Y+62, r25	; 0x3e
    2dba:	8d af       	std	Y+61, r24	; 0x3d
    2dbc:	8d ad       	ldd	r24, Y+61	; 0x3d
    2dbe:	9e ad       	ldd	r25, Y+62	; 0x3e
    2dc0:	9a af       	std	Y+58, r25	; 0x3a
    2dc2:	89 af       	std	Y+57, r24	; 0x39
    2dc4:	89 ad       	ldd	r24, Y+57	; 0x39
    2dc6:	9a ad       	ldd	r25, Y+58	; 0x3a
    2dc8:	01 97       	sbiw	r24, 0x01	; 1
    2dca:	f1 f7       	brne	.-4      	; 0x2dc8 <CLCD_voidInial+0x11c>
    2dcc:	9a af       	std	Y+58, r25	; 0x3a
    2dce:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(1);

#elif CLCD_MODE == 4

	_delay_ms(50);
	DIO_eunmSetPinDirection (CLCD_DATA_PORT,DIO_PIN0,DIO_PIN_OUTPUT);
    2dd0:	82 e0       	ldi	r24, 0x02	; 2
    2dd2:	60 e0       	ldi	r22, 0x00	; 0
    2dd4:	41 e0       	ldi	r20, 0x01	; 1
    2dd6:	0e 94 8e 22 	call	0x451c	; 0x451c <DIO_eunmSetPinDirection>
	DIO_eunmSetPinDirection (CLCD_DATA_PORT,DIO_PIN1,DIO_PIN_OUTPUT);
    2dda:	82 e0       	ldi	r24, 0x02	; 2
    2ddc:	61 e0       	ldi	r22, 0x01	; 1
    2dde:	41 e0       	ldi	r20, 0x01	; 1
    2de0:	0e 94 8e 22 	call	0x451c	; 0x451c <DIO_eunmSetPinDirection>
	DIO_eunmSetPinDirection (CLCD_DATA_PORT,DIO_PIN2,DIO_PIN_OUTPUT);
    2de4:	82 e0       	ldi	r24, 0x02	; 2
    2de6:	62 e0       	ldi	r22, 0x02	; 2
    2de8:	41 e0       	ldi	r20, 0x01	; 1
    2dea:	0e 94 8e 22 	call	0x451c	; 0x451c <DIO_eunmSetPinDirection>
	DIO_eunmSetPinDirection (CLCD_DATA_PORT,DIO_PIN3,DIO_PIN_OUTPUT);
    2dee:	82 e0       	ldi	r24, 0x02	; 2
    2df0:	63 e0       	ldi	r22, 0x03	; 3
    2df2:	41 e0       	ldi	r20, 0x01	; 1
    2df4:	0e 94 8e 22 	call	0x451c	; 0x451c <DIO_eunmSetPinDirection>
	DIO_eunmSetPinDirection (CLCD_CONTROL_PORT,CLCD_RS,DIO_PIN_OUTPUT);
    2df8:	82 e0       	ldi	r24, 0x02	; 2
    2dfa:	60 e0       	ldi	r22, 0x00	; 0
    2dfc:	41 e0       	ldi	r20, 0x01	; 1
    2dfe:	0e 94 8e 22 	call	0x451c	; 0x451c <DIO_eunmSetPinDirection>
	DIO_eunmSetPinDirection (CLCD_CONTROL_PORT,CLCD_RM,DIO_PIN_OUTPUT);
    2e02:	82 e0       	ldi	r24, 0x02	; 2
    2e04:	61 e0       	ldi	r22, 0x01	; 1
    2e06:	41 e0       	ldi	r20, 0x01	; 1
    2e08:	0e 94 8e 22 	call	0x451c	; 0x451c <DIO_eunmSetPinDirection>
	DIO_eunmSetPinDirection (CLCD_CONTROL_PORT,CLCD_EN,DIO_PIN_OUTPUT);
    2e0c:	82 e0       	ldi	r24, 0x02	; 2
    2e0e:	62 e0       	ldi	r22, 0x02	; 2
    2e10:	41 e0       	ldi	r20, 0x01	; 1
    2e12:	0e 94 8e 22 	call	0x451c	; 0x451c <DIO_eunmSetPinDirection>

	CLCD_voidSendCommand (lcd_Home);
    2e16:	82 e0       	ldi	r24, 0x02	; 2
    2e18:	0e 94 11 19 	call	0x3222	; 0x3222 <CLCD_voidSendCommand>
    2e1c:	80 e0       	ldi	r24, 0x00	; 0
    2e1e:	90 e0       	ldi	r25, 0x00	; 0
    2e20:	a0 ef       	ldi	r26, 0xF0	; 240
    2e22:	b1 e4       	ldi	r27, 0x41	; 65
    2e24:	8d ab       	std	Y+53, r24	; 0x35
    2e26:	9e ab       	std	Y+54, r25	; 0x36
    2e28:	af ab       	std	Y+55, r26	; 0x37
    2e2a:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e2c:	6d a9       	ldd	r22, Y+53	; 0x35
    2e2e:	7e a9       	ldd	r23, Y+54	; 0x36
    2e30:	8f a9       	ldd	r24, Y+55	; 0x37
    2e32:	98 ad       	ldd	r25, Y+56	; 0x38
    2e34:	20 e0       	ldi	r18, 0x00	; 0
    2e36:	30 e0       	ldi	r19, 0x00	; 0
    2e38:	4a ef       	ldi	r20, 0xFA	; 250
    2e3a:	54 e4       	ldi	r21, 0x44	; 68
    2e3c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    2e40:	dc 01       	movw	r26, r24
    2e42:	cb 01       	movw	r24, r22
    2e44:	89 ab       	std	Y+49, r24	; 0x31
    2e46:	9a ab       	std	Y+50, r25	; 0x32
    2e48:	ab ab       	std	Y+51, r26	; 0x33
    2e4a:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2e4c:	69 a9       	ldd	r22, Y+49	; 0x31
    2e4e:	7a a9       	ldd	r23, Y+50	; 0x32
    2e50:	8b a9       	ldd	r24, Y+51	; 0x33
    2e52:	9c a9       	ldd	r25, Y+52	; 0x34
    2e54:	20 e0       	ldi	r18, 0x00	; 0
    2e56:	30 e0       	ldi	r19, 0x00	; 0
    2e58:	40 e8       	ldi	r20, 0x80	; 128
    2e5a:	5f e3       	ldi	r21, 0x3F	; 63
    2e5c:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    2e60:	88 23       	and	r24, r24
    2e62:	2c f4       	brge	.+10     	; 0x2e6e <CLCD_voidInial+0x1c2>
		__ticks = 1;
    2e64:	81 e0       	ldi	r24, 0x01	; 1
    2e66:	90 e0       	ldi	r25, 0x00	; 0
    2e68:	98 ab       	std	Y+48, r25	; 0x30
    2e6a:	8f a7       	std	Y+47, r24	; 0x2f
    2e6c:	3f c0       	rjmp	.+126    	; 0x2eec <CLCD_voidInial+0x240>
	else if (__tmp > 65535)
    2e6e:	69 a9       	ldd	r22, Y+49	; 0x31
    2e70:	7a a9       	ldd	r23, Y+50	; 0x32
    2e72:	8b a9       	ldd	r24, Y+51	; 0x33
    2e74:	9c a9       	ldd	r25, Y+52	; 0x34
    2e76:	20 e0       	ldi	r18, 0x00	; 0
    2e78:	3f ef       	ldi	r19, 0xFF	; 255
    2e7a:	4f e7       	ldi	r20, 0x7F	; 127
    2e7c:	57 e4       	ldi	r21, 0x47	; 71
    2e7e:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    2e82:	18 16       	cp	r1, r24
    2e84:	4c f5       	brge	.+82     	; 0x2ed8 <CLCD_voidInial+0x22c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e86:	6d a9       	ldd	r22, Y+53	; 0x35
    2e88:	7e a9       	ldd	r23, Y+54	; 0x36
    2e8a:	8f a9       	ldd	r24, Y+55	; 0x37
    2e8c:	98 ad       	ldd	r25, Y+56	; 0x38
    2e8e:	20 e0       	ldi	r18, 0x00	; 0
    2e90:	30 e0       	ldi	r19, 0x00	; 0
    2e92:	40 e2       	ldi	r20, 0x20	; 32
    2e94:	51 e4       	ldi	r21, 0x41	; 65
    2e96:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    2e9a:	dc 01       	movw	r26, r24
    2e9c:	cb 01       	movw	r24, r22
    2e9e:	bc 01       	movw	r22, r24
    2ea0:	cd 01       	movw	r24, r26
    2ea2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2ea6:	dc 01       	movw	r26, r24
    2ea8:	cb 01       	movw	r24, r22
    2eaa:	98 ab       	std	Y+48, r25	; 0x30
    2eac:	8f a7       	std	Y+47, r24	; 0x2f
    2eae:	0f c0       	rjmp	.+30     	; 0x2ece <CLCD_voidInial+0x222>
    2eb0:	88 ec       	ldi	r24, 0xC8	; 200
    2eb2:	90 e0       	ldi	r25, 0x00	; 0
    2eb4:	9e a7       	std	Y+46, r25	; 0x2e
    2eb6:	8d a7       	std	Y+45, r24	; 0x2d
    2eb8:	8d a5       	ldd	r24, Y+45	; 0x2d
    2eba:	9e a5       	ldd	r25, Y+46	; 0x2e
    2ebc:	01 97       	sbiw	r24, 0x01	; 1
    2ebe:	f1 f7       	brne	.-4      	; 0x2ebc <CLCD_voidInial+0x210>
    2ec0:	9e a7       	std	Y+46, r25	; 0x2e
    2ec2:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ec4:	8f a5       	ldd	r24, Y+47	; 0x2f
    2ec6:	98 a9       	ldd	r25, Y+48	; 0x30
    2ec8:	01 97       	sbiw	r24, 0x01	; 1
    2eca:	98 ab       	std	Y+48, r25	; 0x30
    2ecc:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ece:	8f a5       	ldd	r24, Y+47	; 0x2f
    2ed0:	98 a9       	ldd	r25, Y+48	; 0x30
    2ed2:	00 97       	sbiw	r24, 0x00	; 0
    2ed4:	69 f7       	brne	.-38     	; 0x2eb0 <CLCD_voidInial+0x204>
    2ed6:	14 c0       	rjmp	.+40     	; 0x2f00 <CLCD_voidInial+0x254>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ed8:	69 a9       	ldd	r22, Y+49	; 0x31
    2eda:	7a a9       	ldd	r23, Y+50	; 0x32
    2edc:	8b a9       	ldd	r24, Y+51	; 0x33
    2ede:	9c a9       	ldd	r25, Y+52	; 0x34
    2ee0:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2ee4:	dc 01       	movw	r26, r24
    2ee6:	cb 01       	movw	r24, r22
    2ee8:	98 ab       	std	Y+48, r25	; 0x30
    2eea:	8f a7       	std	Y+47, r24	; 0x2f
    2eec:	8f a5       	ldd	r24, Y+47	; 0x2f
    2eee:	98 a9       	ldd	r25, Y+48	; 0x30
    2ef0:	9c a7       	std	Y+44, r25	; 0x2c
    2ef2:	8b a7       	std	Y+43, r24	; 0x2b
    2ef4:	8b a5       	ldd	r24, Y+43	; 0x2b
    2ef6:	9c a5       	ldd	r25, Y+44	; 0x2c
    2ef8:	01 97       	sbiw	r24, 0x01	; 1
    2efa:	f1 f7       	brne	.-4      	; 0x2ef8 <CLCD_voidInial+0x24c>
    2efc:	9c a7       	std	Y+44, r25	; 0x2c
    2efe:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(30);

	CLCD_voidSendCommand (FOUR_BITS);
    2f00:	88 e2       	ldi	r24, 0x28	; 40
    2f02:	0e 94 11 19 	call	0x3222	; 0x3222 <CLCD_voidSendCommand>
    2f06:	80 e0       	ldi	r24, 0x00	; 0
    2f08:	90 e0       	ldi	r25, 0x00	; 0
    2f0a:	a0 e8       	ldi	r26, 0x80	; 128
    2f0c:	bf e3       	ldi	r27, 0x3F	; 63
    2f0e:	8f a3       	std	Y+39, r24	; 0x27
    2f10:	98 a7       	std	Y+40, r25	; 0x28
    2f12:	a9 a7       	std	Y+41, r26	; 0x29
    2f14:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f16:	6f a1       	ldd	r22, Y+39	; 0x27
    2f18:	78 a5       	ldd	r23, Y+40	; 0x28
    2f1a:	89 a5       	ldd	r24, Y+41	; 0x29
    2f1c:	9a a5       	ldd	r25, Y+42	; 0x2a
    2f1e:	20 e0       	ldi	r18, 0x00	; 0
    2f20:	30 e0       	ldi	r19, 0x00	; 0
    2f22:	4a ef       	ldi	r20, 0xFA	; 250
    2f24:	54 e4       	ldi	r21, 0x44	; 68
    2f26:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    2f2a:	dc 01       	movw	r26, r24
    2f2c:	cb 01       	movw	r24, r22
    2f2e:	8b a3       	std	Y+35, r24	; 0x23
    2f30:	9c a3       	std	Y+36, r25	; 0x24
    2f32:	ad a3       	std	Y+37, r26	; 0x25
    2f34:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2f36:	6b a1       	ldd	r22, Y+35	; 0x23
    2f38:	7c a1       	ldd	r23, Y+36	; 0x24
    2f3a:	8d a1       	ldd	r24, Y+37	; 0x25
    2f3c:	9e a1       	ldd	r25, Y+38	; 0x26
    2f3e:	20 e0       	ldi	r18, 0x00	; 0
    2f40:	30 e0       	ldi	r19, 0x00	; 0
    2f42:	40 e8       	ldi	r20, 0x80	; 128
    2f44:	5f e3       	ldi	r21, 0x3F	; 63
    2f46:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    2f4a:	88 23       	and	r24, r24
    2f4c:	2c f4       	brge	.+10     	; 0x2f58 <CLCD_voidInial+0x2ac>
		__ticks = 1;
    2f4e:	81 e0       	ldi	r24, 0x01	; 1
    2f50:	90 e0       	ldi	r25, 0x00	; 0
    2f52:	9a a3       	std	Y+34, r25	; 0x22
    2f54:	89 a3       	std	Y+33, r24	; 0x21
    2f56:	3f c0       	rjmp	.+126    	; 0x2fd6 <CLCD_voidInial+0x32a>
	else if (__tmp > 65535)
    2f58:	6b a1       	ldd	r22, Y+35	; 0x23
    2f5a:	7c a1       	ldd	r23, Y+36	; 0x24
    2f5c:	8d a1       	ldd	r24, Y+37	; 0x25
    2f5e:	9e a1       	ldd	r25, Y+38	; 0x26
    2f60:	20 e0       	ldi	r18, 0x00	; 0
    2f62:	3f ef       	ldi	r19, 0xFF	; 255
    2f64:	4f e7       	ldi	r20, 0x7F	; 127
    2f66:	57 e4       	ldi	r21, 0x47	; 71
    2f68:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    2f6c:	18 16       	cp	r1, r24
    2f6e:	4c f5       	brge	.+82     	; 0x2fc2 <CLCD_voidInial+0x316>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f70:	6f a1       	ldd	r22, Y+39	; 0x27
    2f72:	78 a5       	ldd	r23, Y+40	; 0x28
    2f74:	89 a5       	ldd	r24, Y+41	; 0x29
    2f76:	9a a5       	ldd	r25, Y+42	; 0x2a
    2f78:	20 e0       	ldi	r18, 0x00	; 0
    2f7a:	30 e0       	ldi	r19, 0x00	; 0
    2f7c:	40 e2       	ldi	r20, 0x20	; 32
    2f7e:	51 e4       	ldi	r21, 0x41	; 65
    2f80:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    2f84:	dc 01       	movw	r26, r24
    2f86:	cb 01       	movw	r24, r22
    2f88:	bc 01       	movw	r22, r24
    2f8a:	cd 01       	movw	r24, r26
    2f8c:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2f90:	dc 01       	movw	r26, r24
    2f92:	cb 01       	movw	r24, r22
    2f94:	9a a3       	std	Y+34, r25	; 0x22
    2f96:	89 a3       	std	Y+33, r24	; 0x21
    2f98:	0f c0       	rjmp	.+30     	; 0x2fb8 <CLCD_voidInial+0x30c>
    2f9a:	88 ec       	ldi	r24, 0xC8	; 200
    2f9c:	90 e0       	ldi	r25, 0x00	; 0
    2f9e:	98 a3       	std	Y+32, r25	; 0x20
    2fa0:	8f 8f       	std	Y+31, r24	; 0x1f
    2fa2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2fa4:	98 a1       	ldd	r25, Y+32	; 0x20
    2fa6:	01 97       	sbiw	r24, 0x01	; 1
    2fa8:	f1 f7       	brne	.-4      	; 0x2fa6 <CLCD_voidInial+0x2fa>
    2faa:	98 a3       	std	Y+32, r25	; 0x20
    2fac:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2fae:	89 a1       	ldd	r24, Y+33	; 0x21
    2fb0:	9a a1       	ldd	r25, Y+34	; 0x22
    2fb2:	01 97       	sbiw	r24, 0x01	; 1
    2fb4:	9a a3       	std	Y+34, r25	; 0x22
    2fb6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2fb8:	89 a1       	ldd	r24, Y+33	; 0x21
    2fba:	9a a1       	ldd	r25, Y+34	; 0x22
    2fbc:	00 97       	sbiw	r24, 0x00	; 0
    2fbe:	69 f7       	brne	.-38     	; 0x2f9a <CLCD_voidInial+0x2ee>
    2fc0:	14 c0       	rjmp	.+40     	; 0x2fea <CLCD_voidInial+0x33e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2fc2:	6b a1       	ldd	r22, Y+35	; 0x23
    2fc4:	7c a1       	ldd	r23, Y+36	; 0x24
    2fc6:	8d a1       	ldd	r24, Y+37	; 0x25
    2fc8:	9e a1       	ldd	r25, Y+38	; 0x26
    2fca:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    2fce:	dc 01       	movw	r26, r24
    2fd0:	cb 01       	movw	r24, r22
    2fd2:	9a a3       	std	Y+34, r25	; 0x22
    2fd4:	89 a3       	std	Y+33, r24	; 0x21
    2fd6:	89 a1       	ldd	r24, Y+33	; 0x21
    2fd8:	9a a1       	ldd	r25, Y+34	; 0x22
    2fda:	9e 8f       	std	Y+30, r25	; 0x1e
    2fdc:	8d 8f       	std	Y+29, r24	; 0x1d
    2fde:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2fe0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2fe2:	01 97       	sbiw	r24, 0x01	; 1
    2fe4:	f1 f7       	brne	.-4      	; 0x2fe2 <CLCD_voidInial+0x336>
    2fe6:	9e 8f       	std	Y+30, r25	; 0x1e
    2fe8:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);

	CLCD_voidSendCommand (lcd_DisplayOn_CursorOn);
    2fea:	8e e0       	ldi	r24, 0x0E	; 14
    2fec:	0e 94 11 19 	call	0x3222	; 0x3222 <CLCD_voidSendCommand>
    2ff0:	80 e0       	ldi	r24, 0x00	; 0
    2ff2:	90 e0       	ldi	r25, 0x00	; 0
    2ff4:	a0 e8       	ldi	r26, 0x80	; 128
    2ff6:	bf e3       	ldi	r27, 0x3F	; 63
    2ff8:	89 8f       	std	Y+25, r24	; 0x19
    2ffa:	9a 8f       	std	Y+26, r25	; 0x1a
    2ffc:	ab 8f       	std	Y+27, r26	; 0x1b
    2ffe:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3000:	69 8d       	ldd	r22, Y+25	; 0x19
    3002:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3004:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3006:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3008:	20 e0       	ldi	r18, 0x00	; 0
    300a:	30 e0       	ldi	r19, 0x00	; 0
    300c:	4a ef       	ldi	r20, 0xFA	; 250
    300e:	54 e4       	ldi	r21, 0x44	; 68
    3010:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3014:	dc 01       	movw	r26, r24
    3016:	cb 01       	movw	r24, r22
    3018:	8d 8b       	std	Y+21, r24	; 0x15
    301a:	9e 8b       	std	Y+22, r25	; 0x16
    301c:	af 8b       	std	Y+23, r26	; 0x17
    301e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3020:	6d 89       	ldd	r22, Y+21	; 0x15
    3022:	7e 89       	ldd	r23, Y+22	; 0x16
    3024:	8f 89       	ldd	r24, Y+23	; 0x17
    3026:	98 8d       	ldd	r25, Y+24	; 0x18
    3028:	20 e0       	ldi	r18, 0x00	; 0
    302a:	30 e0       	ldi	r19, 0x00	; 0
    302c:	40 e8       	ldi	r20, 0x80	; 128
    302e:	5f e3       	ldi	r21, 0x3F	; 63
    3030:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    3034:	88 23       	and	r24, r24
    3036:	2c f4       	brge	.+10     	; 0x3042 <CLCD_voidInial+0x396>
		__ticks = 1;
    3038:	81 e0       	ldi	r24, 0x01	; 1
    303a:	90 e0       	ldi	r25, 0x00	; 0
    303c:	9c 8b       	std	Y+20, r25	; 0x14
    303e:	8b 8b       	std	Y+19, r24	; 0x13
    3040:	3f c0       	rjmp	.+126    	; 0x30c0 <CLCD_voidInial+0x414>
	else if (__tmp > 65535)
    3042:	6d 89       	ldd	r22, Y+21	; 0x15
    3044:	7e 89       	ldd	r23, Y+22	; 0x16
    3046:	8f 89       	ldd	r24, Y+23	; 0x17
    3048:	98 8d       	ldd	r25, Y+24	; 0x18
    304a:	20 e0       	ldi	r18, 0x00	; 0
    304c:	3f ef       	ldi	r19, 0xFF	; 255
    304e:	4f e7       	ldi	r20, 0x7F	; 127
    3050:	57 e4       	ldi	r21, 0x47	; 71
    3052:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    3056:	18 16       	cp	r1, r24
    3058:	4c f5       	brge	.+82     	; 0x30ac <CLCD_voidInial+0x400>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    305a:	69 8d       	ldd	r22, Y+25	; 0x19
    305c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    305e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3060:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3062:	20 e0       	ldi	r18, 0x00	; 0
    3064:	30 e0       	ldi	r19, 0x00	; 0
    3066:	40 e2       	ldi	r20, 0x20	; 32
    3068:	51 e4       	ldi	r21, 0x41	; 65
    306a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    306e:	dc 01       	movw	r26, r24
    3070:	cb 01       	movw	r24, r22
    3072:	bc 01       	movw	r22, r24
    3074:	cd 01       	movw	r24, r26
    3076:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    307a:	dc 01       	movw	r26, r24
    307c:	cb 01       	movw	r24, r22
    307e:	9c 8b       	std	Y+20, r25	; 0x14
    3080:	8b 8b       	std	Y+19, r24	; 0x13
    3082:	0f c0       	rjmp	.+30     	; 0x30a2 <CLCD_voidInial+0x3f6>
    3084:	88 ec       	ldi	r24, 0xC8	; 200
    3086:	90 e0       	ldi	r25, 0x00	; 0
    3088:	9a 8b       	std	Y+18, r25	; 0x12
    308a:	89 8b       	std	Y+17, r24	; 0x11
    308c:	89 89       	ldd	r24, Y+17	; 0x11
    308e:	9a 89       	ldd	r25, Y+18	; 0x12
    3090:	01 97       	sbiw	r24, 0x01	; 1
    3092:	f1 f7       	brne	.-4      	; 0x3090 <CLCD_voidInial+0x3e4>
    3094:	9a 8b       	std	Y+18, r25	; 0x12
    3096:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3098:	8b 89       	ldd	r24, Y+19	; 0x13
    309a:	9c 89       	ldd	r25, Y+20	; 0x14
    309c:	01 97       	sbiw	r24, 0x01	; 1
    309e:	9c 8b       	std	Y+20, r25	; 0x14
    30a0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    30a2:	8b 89       	ldd	r24, Y+19	; 0x13
    30a4:	9c 89       	ldd	r25, Y+20	; 0x14
    30a6:	00 97       	sbiw	r24, 0x00	; 0
    30a8:	69 f7       	brne	.-38     	; 0x3084 <CLCD_voidInial+0x3d8>
    30aa:	14 c0       	rjmp	.+40     	; 0x30d4 <CLCD_voidInial+0x428>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    30ac:	6d 89       	ldd	r22, Y+21	; 0x15
    30ae:	7e 89       	ldd	r23, Y+22	; 0x16
    30b0:	8f 89       	ldd	r24, Y+23	; 0x17
    30b2:	98 8d       	ldd	r25, Y+24	; 0x18
    30b4:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    30b8:	dc 01       	movw	r26, r24
    30ba:	cb 01       	movw	r24, r22
    30bc:	9c 8b       	std	Y+20, r25	; 0x14
    30be:	8b 8b       	std	Y+19, r24	; 0x13
    30c0:	8b 89       	ldd	r24, Y+19	; 0x13
    30c2:	9c 89       	ldd	r25, Y+20	; 0x14
    30c4:	98 8b       	std	Y+16, r25	; 0x10
    30c6:	8f 87       	std	Y+15, r24	; 0x0f
    30c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    30ca:	98 89       	ldd	r25, Y+16	; 0x10
    30cc:	01 97       	sbiw	r24, 0x01	; 1
    30ce:	f1 f7       	brne	.-4      	; 0x30cc <CLCD_voidInial+0x420>
    30d0:	98 8b       	std	Y+16, r25	; 0x10
    30d2:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);

	CLCD_ClearScreen      (                        );
    30d4:	0e 94 05 21 	call	0x420a	; 0x420a <CLCD_ClearScreen>

	CLCD_voidSendCommand (lcd_EntryMode);
    30d8:	86 e0       	ldi	r24, 0x06	; 6
    30da:	0e 94 11 19 	call	0x3222	; 0x3222 <CLCD_voidSendCommand>
    30de:	80 e0       	ldi	r24, 0x00	; 0
    30e0:	90 e0       	ldi	r25, 0x00	; 0
    30e2:	a0 e8       	ldi	r26, 0x80	; 128
    30e4:	bf e3       	ldi	r27, 0x3F	; 63
    30e6:	8b 87       	std	Y+11, r24	; 0x0b
    30e8:	9c 87       	std	Y+12, r25	; 0x0c
    30ea:	ad 87       	std	Y+13, r26	; 0x0d
    30ec:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30ee:	6b 85       	ldd	r22, Y+11	; 0x0b
    30f0:	7c 85       	ldd	r23, Y+12	; 0x0c
    30f2:	8d 85       	ldd	r24, Y+13	; 0x0d
    30f4:	9e 85       	ldd	r25, Y+14	; 0x0e
    30f6:	20 e0       	ldi	r18, 0x00	; 0
    30f8:	30 e0       	ldi	r19, 0x00	; 0
    30fa:	4a ef       	ldi	r20, 0xFA	; 250
    30fc:	54 e4       	ldi	r21, 0x44	; 68
    30fe:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    3102:	dc 01       	movw	r26, r24
    3104:	cb 01       	movw	r24, r22
    3106:	8f 83       	std	Y+7, r24	; 0x07
    3108:	98 87       	std	Y+8, r25	; 0x08
    310a:	a9 87       	std	Y+9, r26	; 0x09
    310c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    310e:	6f 81       	ldd	r22, Y+7	; 0x07
    3110:	78 85       	ldd	r23, Y+8	; 0x08
    3112:	89 85       	ldd	r24, Y+9	; 0x09
    3114:	9a 85       	ldd	r25, Y+10	; 0x0a
    3116:	20 e0       	ldi	r18, 0x00	; 0
    3118:	30 e0       	ldi	r19, 0x00	; 0
    311a:	40 e8       	ldi	r20, 0x80	; 128
    311c:	5f e3       	ldi	r21, 0x3F	; 63
    311e:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    3122:	88 23       	and	r24, r24
    3124:	2c f4       	brge	.+10     	; 0x3130 <CLCD_voidInial+0x484>
		__ticks = 1;
    3126:	81 e0       	ldi	r24, 0x01	; 1
    3128:	90 e0       	ldi	r25, 0x00	; 0
    312a:	9e 83       	std	Y+6, r25	; 0x06
    312c:	8d 83       	std	Y+5, r24	; 0x05
    312e:	3f c0       	rjmp	.+126    	; 0x31ae <CLCD_voidInial+0x502>
	else if (__tmp > 65535)
    3130:	6f 81       	ldd	r22, Y+7	; 0x07
    3132:	78 85       	ldd	r23, Y+8	; 0x08
    3134:	89 85       	ldd	r24, Y+9	; 0x09
    3136:	9a 85       	ldd	r25, Y+10	; 0x0a
    3138:	20 e0       	ldi	r18, 0x00	; 0
    313a:	3f ef       	ldi	r19, 0xFF	; 255
    313c:	4f e7       	ldi	r20, 0x7F	; 127
    313e:	57 e4       	ldi	r21, 0x47	; 71
    3140:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    3144:	18 16       	cp	r1, r24
    3146:	4c f5       	brge	.+82     	; 0x319a <CLCD_voidInial+0x4ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3148:	6b 85       	ldd	r22, Y+11	; 0x0b
    314a:	7c 85       	ldd	r23, Y+12	; 0x0c
    314c:	8d 85       	ldd	r24, Y+13	; 0x0d
    314e:	9e 85       	ldd	r25, Y+14	; 0x0e
    3150:	20 e0       	ldi	r18, 0x00	; 0
    3152:	30 e0       	ldi	r19, 0x00	; 0
    3154:	40 e2       	ldi	r20, 0x20	; 32
    3156:	51 e4       	ldi	r21, 0x41	; 65
    3158:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    315c:	dc 01       	movw	r26, r24
    315e:	cb 01       	movw	r24, r22
    3160:	bc 01       	movw	r22, r24
    3162:	cd 01       	movw	r24, r26
    3164:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    3168:	dc 01       	movw	r26, r24
    316a:	cb 01       	movw	r24, r22
    316c:	9e 83       	std	Y+6, r25	; 0x06
    316e:	8d 83       	std	Y+5, r24	; 0x05
    3170:	0f c0       	rjmp	.+30     	; 0x3190 <CLCD_voidInial+0x4e4>
    3172:	88 ec       	ldi	r24, 0xC8	; 200
    3174:	90 e0       	ldi	r25, 0x00	; 0
    3176:	9c 83       	std	Y+4, r25	; 0x04
    3178:	8b 83       	std	Y+3, r24	; 0x03
    317a:	8b 81       	ldd	r24, Y+3	; 0x03
    317c:	9c 81       	ldd	r25, Y+4	; 0x04
    317e:	01 97       	sbiw	r24, 0x01	; 1
    3180:	f1 f7       	brne	.-4      	; 0x317e <CLCD_voidInial+0x4d2>
    3182:	9c 83       	std	Y+4, r25	; 0x04
    3184:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3186:	8d 81       	ldd	r24, Y+5	; 0x05
    3188:	9e 81       	ldd	r25, Y+6	; 0x06
    318a:	01 97       	sbiw	r24, 0x01	; 1
    318c:	9e 83       	std	Y+6, r25	; 0x06
    318e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3190:	8d 81       	ldd	r24, Y+5	; 0x05
    3192:	9e 81       	ldd	r25, Y+6	; 0x06
    3194:	00 97       	sbiw	r24, 0x00	; 0
    3196:	69 f7       	brne	.-38     	; 0x3172 <CLCD_voidInial+0x4c6>
    3198:	14 c0       	rjmp	.+40     	; 0x31c2 <CLCD_voidInial+0x516>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    319a:	6f 81       	ldd	r22, Y+7	; 0x07
    319c:	78 85       	ldd	r23, Y+8	; 0x08
    319e:	89 85       	ldd	r24, Y+9	; 0x09
    31a0:	9a 85       	ldd	r25, Y+10	; 0x0a
    31a2:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    31a6:	dc 01       	movw	r26, r24
    31a8:	cb 01       	movw	r24, r22
    31aa:	9e 83       	std	Y+6, r25	; 0x06
    31ac:	8d 83       	std	Y+5, r24	; 0x05
    31ae:	8d 81       	ldd	r24, Y+5	; 0x05
    31b0:	9e 81       	ldd	r25, Y+6	; 0x06
    31b2:	9a 83       	std	Y+2, r25	; 0x02
    31b4:	89 83       	std	Y+1, r24	; 0x01
    31b6:	89 81       	ldd	r24, Y+1	; 0x01
    31b8:	9a 81       	ldd	r25, Y+2	; 0x02
    31ba:	01 97       	sbiw	r24, 0x01	; 1
    31bc:	f1 f7       	brne	.-4      	; 0x31ba <CLCD_voidInial+0x50e>
    31be:	9a 83       	std	Y+2, r25	; 0x02
    31c0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);

#endif

}
    31c2:	ca 5b       	subi	r28, 0xBA	; 186
    31c4:	df 4f       	sbci	r29, 0xFF	; 255
    31c6:	0f b6       	in	r0, 0x3f	; 63
    31c8:	f8 94       	cli
    31ca:	de bf       	out	0x3e, r29	; 62
    31cc:	0f be       	out	0x3f, r0	; 63
    31ce:	cd bf       	out	0x3d, r28	; 61
    31d0:	cf 91       	pop	r28
    31d2:	df 91       	pop	r29
    31d4:	1f 91       	pop	r17
    31d6:	0f 91       	pop	r16
    31d8:	08 95       	ret

000031da <CLCD_voidSendData>:
void CLCD_voidSendData     ( u8 COPY_Data                 )
{
    31da:	df 93       	push	r29
    31dc:	cf 93       	push	r28
    31de:	0f 92       	push	r0
    31e0:	cd b7       	in	r28, 0x3d	; 61
    31e2:	de b7       	in	r29, 0x3e	; 62
    31e4:	89 83       	std	Y+1, r24	; 0x01
	DIO_eunmSetPinValue (CLCD_CONTROL_PORT,CLCD_RM,DIO_PIN_LOW);
	CLCD_voidSendFallingEdge();

#elif CLCD_MODE == 4

	DIO_eunmSetPinValue (CLCD_CONTROL_PORT,CLCD_RS,DIO_PIN_HIGH);
    31e6:	82 e0       	ldi	r24, 0x02	; 2
    31e8:	60 e0       	ldi	r22, 0x00	; 0
    31ea:	41 e0       	ldi	r20, 0x01	; 1
    31ec:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
	DIO_eunmSetPinValue (CLCD_CONTROL_PORT,CLCD_RM,DIO_PIN_LOW);
    31f0:	82 e0       	ldi	r24, 0x02	; 2
    31f2:	61 e0       	ldi	r22, 0x01	; 1
    31f4:	40 e0       	ldi	r20, 0x00	; 0
    31f6:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
	DIO_voidWriteHighNibble (CLCD_DATA_PORT,(COPY_Data>>4));
    31fa:	89 81       	ldd	r24, Y+1	; 0x01
    31fc:	98 2f       	mov	r25, r24
    31fe:	92 95       	swap	r25
    3200:	9f 70       	andi	r25, 0x0F	; 15
    3202:	82 e0       	ldi	r24, 0x02	; 2
    3204:	69 2f       	mov	r22, r25
    3206:	0e 94 96 28 	call	0x512c	; 0x512c <DIO_voidWriteHighNibble>
	CLCD_voidSendFallingEdge();
    320a:	0e 94 8d 21 	call	0x431a	; 0x431a <CLCD_voidSendFallingEdge>
	DIO_voidWriteHighNibble (CLCD_DATA_PORT,COPY_Data);
    320e:	82 e0       	ldi	r24, 0x02	; 2
    3210:	69 81       	ldd	r22, Y+1	; 0x01
    3212:	0e 94 96 28 	call	0x512c	; 0x512c <DIO_voidWriteHighNibble>
	CLCD_voidSendFallingEdge();
    3216:	0e 94 8d 21 	call	0x431a	; 0x431a <CLCD_voidSendFallingEdge>


#endif
}
    321a:	0f 90       	pop	r0
    321c:	cf 91       	pop	r28
    321e:	df 91       	pop	r29
    3220:	08 95       	ret

00003222 <CLCD_voidSendCommand>:
void CLCD_voidSendCommand  ( u8 COPY_Command              )
{
    3222:	df 93       	push	r29
    3224:	cf 93       	push	r28
    3226:	0f 92       	push	r0
    3228:	cd b7       	in	r28, 0x3d	; 61
    322a:	de b7       	in	r29, 0x3e	; 62
    322c:	89 83       	std	Y+1, r24	; 0x01
	DIO_eunmSetPinValue (CLCD_CONTROL_PORT,CLCD_RM,DIO_PIN_LOW);
	CLCD_voidSendFallingEdge();

#elif CLCD_MODE == 4

	DIO_eunmSetPinValue (CLCD_CONTROL_PORT,CLCD_RS,DIO_PIN_LOW);
    322e:	82 e0       	ldi	r24, 0x02	; 2
    3230:	60 e0       	ldi	r22, 0x00	; 0
    3232:	40 e0       	ldi	r20, 0x00	; 0
    3234:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
	DIO_eunmSetPinValue (CLCD_CONTROL_PORT,CLCD_RM,DIO_PIN_LOW);
    3238:	82 e0       	ldi	r24, 0x02	; 2
    323a:	61 e0       	ldi	r22, 0x01	; 1
    323c:	40 e0       	ldi	r20, 0x00	; 0
    323e:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
	DIO_voidWriteHighNibble (CLCD_DATA_PORT,(COPY_Command>>4));
    3242:	89 81       	ldd	r24, Y+1	; 0x01
    3244:	98 2f       	mov	r25, r24
    3246:	92 95       	swap	r25
    3248:	9f 70       	andi	r25, 0x0F	; 15
    324a:	82 e0       	ldi	r24, 0x02	; 2
    324c:	69 2f       	mov	r22, r25
    324e:	0e 94 96 28 	call	0x512c	; 0x512c <DIO_voidWriteHighNibble>
	CLCD_voidSendFallingEdge();
    3252:	0e 94 8d 21 	call	0x431a	; 0x431a <CLCD_voidSendFallingEdge>
	DIO_voidWriteHighNibble (CLCD_DATA_PORT,COPY_Command);
    3256:	82 e0       	ldi	r24, 0x02	; 2
    3258:	69 81       	ldd	r22, Y+1	; 0x01
    325a:	0e 94 96 28 	call	0x512c	; 0x512c <DIO_voidWriteHighNibble>
	CLCD_voidSendFallingEdge();
    325e:	0e 94 8d 21 	call	0x431a	; 0x431a <CLCD_voidSendFallingEdge>


#endif
}
    3262:	0f 90       	pop	r0
    3264:	cf 91       	pop	r28
    3266:	df 91       	pop	r29
    3268:	08 95       	ret

0000326a <CLCD_voidSendString>:
void CLCD_voidSendString   ( const u8 *COPY_u8PtrString   )
{
    326a:	df 93       	push	r29
    326c:	cf 93       	push	r28
    326e:	00 d0       	rcall	.+0      	; 0x3270 <CLCD_voidSendString+0x6>
    3270:	0f 92       	push	r0
    3272:	cd b7       	in	r28, 0x3d	; 61
    3274:	de b7       	in	r29, 0x3e	; 62
    3276:	9b 83       	std	Y+3, r25	; 0x03
    3278:	8a 83       	std	Y+2, r24	; 0x02
	u8 LOC_u8Iterator = 0;
    327a:	19 82       	std	Y+1, r1	; 0x01
    327c:	0e c0       	rjmp	.+28     	; 0x329a <CLCD_voidSendString+0x30>
	while(COPY_u8PtrString[LOC_u8Iterator] != '\0')
	{
		CLCD_voidSendData(COPY_u8PtrString[LOC_u8Iterator]);
    327e:	89 81       	ldd	r24, Y+1	; 0x01
    3280:	28 2f       	mov	r18, r24
    3282:	30 e0       	ldi	r19, 0x00	; 0
    3284:	8a 81       	ldd	r24, Y+2	; 0x02
    3286:	9b 81       	ldd	r25, Y+3	; 0x03
    3288:	fc 01       	movw	r30, r24
    328a:	e2 0f       	add	r30, r18
    328c:	f3 1f       	adc	r31, r19
    328e:	80 81       	ld	r24, Z
    3290:	0e 94 ed 18 	call	0x31da	; 0x31da <CLCD_voidSendData>
		LOC_u8Iterator++;
    3294:	89 81       	ldd	r24, Y+1	; 0x01
    3296:	8f 5f       	subi	r24, 0xFF	; 255
    3298:	89 83       	std	Y+1, r24	; 0x01
#endif
}
void CLCD_voidSendString   ( const u8 *COPY_u8PtrString   )
{
	u8 LOC_u8Iterator = 0;
	while(COPY_u8PtrString[LOC_u8Iterator] != '\0')
    329a:	89 81       	ldd	r24, Y+1	; 0x01
    329c:	28 2f       	mov	r18, r24
    329e:	30 e0       	ldi	r19, 0x00	; 0
    32a0:	8a 81       	ldd	r24, Y+2	; 0x02
    32a2:	9b 81       	ldd	r25, Y+3	; 0x03
    32a4:	fc 01       	movw	r30, r24
    32a6:	e2 0f       	add	r30, r18
    32a8:	f3 1f       	adc	r31, r19
    32aa:	80 81       	ld	r24, Z
    32ac:	88 23       	and	r24, r24
    32ae:	39 f7       	brne	.-50     	; 0x327e <CLCD_voidSendString+0x14>
	{
		CLCD_voidSendData(COPY_u8PtrString[LOC_u8Iterator]);
		LOC_u8Iterator++;
	}
}
    32b0:	0f 90       	pop	r0
    32b2:	0f 90       	pop	r0
    32b4:	0f 90       	pop	r0
    32b6:	cf 91       	pop	r28
    32b8:	df 91       	pop	r29
    32ba:	08 95       	ret

000032bc <CLCD_SendNumber>:
void CLCD_SendNumber       ( u64 COPY_u64Number           )
{
    32bc:	af 92       	push	r10
    32be:	bf 92       	push	r11
    32c0:	cf 92       	push	r12
    32c2:	df 92       	push	r13
    32c4:	ef 92       	push	r14
    32c6:	ff 92       	push	r15
    32c8:	0f 93       	push	r16
    32ca:	1f 93       	push	r17
    32cc:	df 93       	push	r29
    32ce:	cf 93       	push	r28
    32d0:	cd b7       	in	r28, 0x3d	; 61
    32d2:	de b7       	in	r29, 0x3e	; 62
    32d4:	c1 59       	subi	r28, 0x91	; 145
    32d6:	d0 40       	sbci	r29, 0x00	; 0
    32d8:	0f b6       	in	r0, 0x3f	; 63
    32da:	f8 94       	cli
    32dc:	de bf       	out	0x3e, r29	; 62
    32de:	0f be       	out	0x3f, r0	; 63
    32e0:	cd bf       	out	0x3d, r28	; 61
    32e2:	29 87       	std	Y+9, r18	; 0x09
    32e4:	3a 87       	std	Y+10, r19	; 0x0a
    32e6:	4b 87       	std	Y+11, r20	; 0x0b
    32e8:	5c 87       	std	Y+12, r21	; 0x0c
    32ea:	6d 87       	std	Y+13, r22	; 0x0d
    32ec:	7e 87       	std	Y+14, r23	; 0x0e
    32ee:	8f 87       	std	Y+15, r24	; 0x0f
    32f0:	98 8b       	std	Y+16, r25	; 0x10
	u64 LOC_u64Reversed = 1;
    32f2:	81 e0       	ldi	r24, 0x01	; 1
    32f4:	89 83       	std	Y+1, r24	; 0x01
    32f6:	1a 82       	std	Y+2, r1	; 0x02
    32f8:	1b 82       	std	Y+3, r1	; 0x03
    32fa:	1c 82       	std	Y+4, r1	; 0x04
    32fc:	1d 82       	std	Y+5, r1	; 0x05
    32fe:	1e 82       	std	Y+6, r1	; 0x06
    3300:	1f 82       	std	Y+7, r1	; 0x07
    3302:	18 86       	std	Y+8, r1	; 0x08
	if(COPY_u64Number==0)
    3304:	89 85       	ldd	r24, Y+9	; 0x09
    3306:	9a 85       	ldd	r25, Y+10	; 0x0a
    3308:	89 2b       	or	r24, r25
    330a:	9b 85       	ldd	r25, Y+11	; 0x0b
    330c:	89 2b       	or	r24, r25
    330e:	9c 85       	ldd	r25, Y+12	; 0x0c
    3310:	89 2b       	or	r24, r25
    3312:	9d 85       	ldd	r25, Y+13	; 0x0d
    3314:	89 2b       	or	r24, r25
    3316:	9e 85       	ldd	r25, Y+14	; 0x0e
    3318:	89 2b       	or	r24, r25
    331a:	9f 85       	ldd	r25, Y+15	; 0x0f
    331c:	89 2b       	or	r24, r25
    331e:	98 89       	ldd	r25, Y+16	; 0x10
    3320:	89 2b       	or	r24, r25
    3322:	88 23       	and	r24, r24
    3324:	09 f0       	breq	.+2      	; 0x3328 <CLCD_SendNumber+0x6c>
    3326:	9c c3       	rjmp	.+1848   	; 0x3a60 <CLCD_SendNumber+0x7a4>
	{
		CLCD_voidSendData('0');
    3328:	80 e3       	ldi	r24, 0x30	; 48
    332a:	0e 94 ed 18 	call	0x31da	; 0x31da <CLCD_voidSendData>
    332e:	83 c6       	rjmp	.+3334   	; 0x4036 <CLCD_SendNumber+0xd7a>
	}
	else
	{
		while(COPY_u64Number != 0)
		{
			LOC_u64Reversed = ( LOC_u64Reversed*10 ) + ( COPY_u64Number%10 );
    3330:	29 81       	ldd	r18, Y+1	; 0x01
    3332:	3a 81       	ldd	r19, Y+2	; 0x02
    3334:	4b 81       	ldd	r20, Y+3	; 0x03
    3336:	5c 81       	ldd	r21, Y+4	; 0x04
    3338:	6d 81       	ldd	r22, Y+5	; 0x05
    333a:	7e 81       	ldd	r23, Y+6	; 0x06
    333c:	8f 81       	ldd	r24, Y+7	; 0x07
    333e:	98 85       	ldd	r25, Y+8	; 0x08
    3340:	a2 2e       	mov	r10, r18
    3342:	b3 2e       	mov	r11, r19
    3344:	c4 2e       	mov	r12, r20
    3346:	d5 2e       	mov	r13, r21
    3348:	e6 2e       	mov	r14, r22
    334a:	f7 2e       	mov	r15, r23
    334c:	08 2f       	mov	r16, r24
    334e:	19 2f       	mov	r17, r25
    3350:	2a 2d       	mov	r18, r10
    3352:	3b 2d       	mov	r19, r11
    3354:	4c 2d       	mov	r20, r12
    3356:	5d 2d       	mov	r21, r13
    3358:	6e 2d       	mov	r22, r14
    335a:	7f 2d       	mov	r23, r15
    335c:	80 2f       	mov	r24, r16
    335e:	91 2f       	mov	r25, r17
    3360:	01 e0       	ldi	r16, 0x01	; 1
    3362:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    3366:	29 a7       	std	Y+41, r18	; 0x29
    3368:	3a a7       	std	Y+42, r19	; 0x2a
    336a:	4b a7       	std	Y+43, r20	; 0x2b
    336c:	5c a7       	std	Y+44, r21	; 0x2c
    336e:	6d a7       	std	Y+45, r22	; 0x2d
    3370:	7e a7       	std	Y+46, r23	; 0x2e
    3372:	8f a7       	std	Y+47, r24	; 0x2f
    3374:	98 ab       	std	Y+48, r25	; 0x30
    3376:	29 a5       	ldd	r18, Y+41	; 0x29
    3378:	3a a5       	ldd	r19, Y+42	; 0x2a
    337a:	4b a5       	ldd	r20, Y+43	; 0x2b
    337c:	5c a5       	ldd	r21, Y+44	; 0x2c
    337e:	6d a5       	ldd	r22, Y+45	; 0x2d
    3380:	7e a5       	ldd	r23, Y+46	; 0x2e
    3382:	8f a5       	ldd	r24, Y+47	; 0x2f
    3384:	98 a9       	ldd	r25, Y+48	; 0x30
    3386:	02 e0       	ldi	r16, 0x02	; 2
    3388:	0e 94 49 00 	call	0x92	; 0x92 <__ashldi3>
    338c:	29 ab       	std	Y+49, r18	; 0x31
    338e:	3a ab       	std	Y+50, r19	; 0x32
    3390:	4b ab       	std	Y+51, r20	; 0x33
    3392:	5c ab       	std	Y+52, r21	; 0x34
    3394:	6d ab       	std	Y+53, r22	; 0x35
    3396:	7e ab       	std	Y+54, r23	; 0x36
    3398:	8f ab       	std	Y+55, r24	; 0x37
    339a:	98 af       	std	Y+56, r25	; 0x38
    339c:	89 a5       	ldd	r24, Y+41	; 0x29
    339e:	99 a9       	ldd	r25, Y+49	; 0x31
    33a0:	89 0f       	add	r24, r25
    33a2:	89 af       	std	Y+57, r24	; 0x39
    33a4:	81 e0       	ldi	r24, 0x01	; 1
    33a6:	22 96       	adiw	r28, 0x02	; 2
    33a8:	8f af       	std	Y+63, r24	; 0x3f
    33aa:	22 97       	sbiw	r28, 0x02	; 2
    33ac:	99 ad       	ldd	r25, Y+57	; 0x39
    33ae:	89 a5       	ldd	r24, Y+41	; 0x29
    33b0:	98 17       	cp	r25, r24
    33b2:	18 f0       	brcs	.+6      	; 0x33ba <CLCD_SendNumber+0xfe>
    33b4:	22 96       	adiw	r28, 0x02	; 2
    33b6:	1f ae       	std	Y+63, r1	; 0x3f
    33b8:	22 97       	sbiw	r28, 0x02	; 2
    33ba:	9a a5       	ldd	r25, Y+42	; 0x2a
    33bc:	8a a9       	ldd	r24, Y+50	; 0x32
    33be:	98 0f       	add	r25, r24
    33c0:	9a af       	std	Y+58, r25	; 0x3a
    33c2:	91 e0       	ldi	r25, 0x01	; 1
    33c4:	23 96       	adiw	r28, 0x03	; 3
    33c6:	9f af       	std	Y+63, r25	; 0x3f
    33c8:	23 97       	sbiw	r28, 0x03	; 3
    33ca:	8a ad       	ldd	r24, Y+58	; 0x3a
    33cc:	9a a5       	ldd	r25, Y+42	; 0x2a
    33ce:	89 17       	cp	r24, r25
    33d0:	18 f0       	brcs	.+6      	; 0x33d8 <CLCD_SendNumber+0x11c>
    33d2:	23 96       	adiw	r28, 0x03	; 3
    33d4:	1f ae       	std	Y+63, r1	; 0x3f
    33d6:	23 97       	sbiw	r28, 0x03	; 3
    33d8:	22 96       	adiw	r28, 0x02	; 2
    33da:	8f ad       	ldd	r24, Y+63	; 0x3f
    33dc:	22 97       	sbiw	r28, 0x02	; 2
    33de:	9a ad       	ldd	r25, Y+58	; 0x3a
    33e0:	89 0f       	add	r24, r25
    33e2:	24 96       	adiw	r28, 0x04	; 4
    33e4:	8f af       	std	Y+63, r24	; 0x3f
    33e6:	24 97       	sbiw	r28, 0x04	; 4
    33e8:	81 e0       	ldi	r24, 0x01	; 1
    33ea:	25 96       	adiw	r28, 0x05	; 5
    33ec:	8f af       	std	Y+63, r24	; 0x3f
    33ee:	25 97       	sbiw	r28, 0x05	; 5
    33f0:	24 96       	adiw	r28, 0x04	; 4
    33f2:	9f ad       	ldd	r25, Y+63	; 0x3f
    33f4:	24 97       	sbiw	r28, 0x04	; 4
    33f6:	8a ad       	ldd	r24, Y+58	; 0x3a
    33f8:	98 17       	cp	r25, r24
    33fa:	18 f0       	brcs	.+6      	; 0x3402 <CLCD_SendNumber+0x146>
    33fc:	25 96       	adiw	r28, 0x05	; 5
    33fe:	1f ae       	std	Y+63, r1	; 0x3f
    3400:	25 97       	sbiw	r28, 0x05	; 5
    3402:	23 96       	adiw	r28, 0x03	; 3
    3404:	9f ad       	ldd	r25, Y+63	; 0x3f
    3406:	23 97       	sbiw	r28, 0x03	; 3
    3408:	25 96       	adiw	r28, 0x05	; 5
    340a:	8f ad       	ldd	r24, Y+63	; 0x3f
    340c:	25 97       	sbiw	r28, 0x05	; 5
    340e:	98 2b       	or	r25, r24
    3410:	23 96       	adiw	r28, 0x03	; 3
    3412:	9f af       	std	Y+63, r25	; 0x3f
    3414:	23 97       	sbiw	r28, 0x03	; 3
    3416:	24 96       	adiw	r28, 0x04	; 4
    3418:	9f ad       	ldd	r25, Y+63	; 0x3f
    341a:	24 97       	sbiw	r28, 0x04	; 4
    341c:	9a af       	std	Y+58, r25	; 0x3a
    341e:	8b a5       	ldd	r24, Y+43	; 0x2b
    3420:	9b a9       	ldd	r25, Y+51	; 0x33
    3422:	89 0f       	add	r24, r25
    3424:	8b af       	std	Y+59, r24	; 0x3b
    3426:	81 e0       	ldi	r24, 0x01	; 1
    3428:	26 96       	adiw	r28, 0x06	; 6
    342a:	8f af       	std	Y+63, r24	; 0x3f
    342c:	26 97       	sbiw	r28, 0x06	; 6
    342e:	9b ad       	ldd	r25, Y+59	; 0x3b
    3430:	8b a5       	ldd	r24, Y+43	; 0x2b
    3432:	98 17       	cp	r25, r24
    3434:	18 f0       	brcs	.+6      	; 0x343c <CLCD_SendNumber+0x180>
    3436:	26 96       	adiw	r28, 0x06	; 6
    3438:	1f ae       	std	Y+63, r1	; 0x3f
    343a:	26 97       	sbiw	r28, 0x06	; 6
    343c:	23 96       	adiw	r28, 0x03	; 3
    343e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3440:	23 97       	sbiw	r28, 0x03	; 3
    3442:	8b ad       	ldd	r24, Y+59	; 0x3b
    3444:	98 0f       	add	r25, r24
    3446:	27 96       	adiw	r28, 0x07	; 7
    3448:	9f af       	std	Y+63, r25	; 0x3f
    344a:	27 97       	sbiw	r28, 0x07	; 7
    344c:	91 e0       	ldi	r25, 0x01	; 1
    344e:	28 96       	adiw	r28, 0x08	; 8
    3450:	9f af       	std	Y+63, r25	; 0x3f
    3452:	28 97       	sbiw	r28, 0x08	; 8
    3454:	27 96       	adiw	r28, 0x07	; 7
    3456:	8f ad       	ldd	r24, Y+63	; 0x3f
    3458:	27 97       	sbiw	r28, 0x07	; 7
    345a:	9b ad       	ldd	r25, Y+59	; 0x3b
    345c:	89 17       	cp	r24, r25
    345e:	18 f0       	brcs	.+6      	; 0x3466 <CLCD_SendNumber+0x1aa>
    3460:	28 96       	adiw	r28, 0x08	; 8
    3462:	1f ae       	std	Y+63, r1	; 0x3f
    3464:	28 97       	sbiw	r28, 0x08	; 8
    3466:	26 96       	adiw	r28, 0x06	; 6
    3468:	8f ad       	ldd	r24, Y+63	; 0x3f
    346a:	26 97       	sbiw	r28, 0x06	; 6
    346c:	28 96       	adiw	r28, 0x08	; 8
    346e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3470:	28 97       	sbiw	r28, 0x08	; 8
    3472:	89 2b       	or	r24, r25
    3474:	26 96       	adiw	r28, 0x06	; 6
    3476:	8f af       	std	Y+63, r24	; 0x3f
    3478:	26 97       	sbiw	r28, 0x06	; 6
    347a:	27 96       	adiw	r28, 0x07	; 7
    347c:	8f ad       	ldd	r24, Y+63	; 0x3f
    347e:	27 97       	sbiw	r28, 0x07	; 7
    3480:	8b af       	std	Y+59, r24	; 0x3b
    3482:	9c a5       	ldd	r25, Y+44	; 0x2c
    3484:	8c a9       	ldd	r24, Y+52	; 0x34
    3486:	98 0f       	add	r25, r24
    3488:	9c af       	std	Y+60, r25	; 0x3c
    348a:	91 e0       	ldi	r25, 0x01	; 1
    348c:	29 96       	adiw	r28, 0x09	; 9
    348e:	9f af       	std	Y+63, r25	; 0x3f
    3490:	29 97       	sbiw	r28, 0x09	; 9
    3492:	8c ad       	ldd	r24, Y+60	; 0x3c
    3494:	9c a5       	ldd	r25, Y+44	; 0x2c
    3496:	89 17       	cp	r24, r25
    3498:	18 f0       	brcs	.+6      	; 0x34a0 <CLCD_SendNumber+0x1e4>
    349a:	29 96       	adiw	r28, 0x09	; 9
    349c:	1f ae       	std	Y+63, r1	; 0x3f
    349e:	29 97       	sbiw	r28, 0x09	; 9
    34a0:	26 96       	adiw	r28, 0x06	; 6
    34a2:	8f ad       	ldd	r24, Y+63	; 0x3f
    34a4:	26 97       	sbiw	r28, 0x06	; 6
    34a6:	9c ad       	ldd	r25, Y+60	; 0x3c
    34a8:	89 0f       	add	r24, r25
    34aa:	2a 96       	adiw	r28, 0x0a	; 10
    34ac:	8f af       	std	Y+63, r24	; 0x3f
    34ae:	2a 97       	sbiw	r28, 0x0a	; 10
    34b0:	81 e0       	ldi	r24, 0x01	; 1
    34b2:	2b 96       	adiw	r28, 0x0b	; 11
    34b4:	8f af       	std	Y+63, r24	; 0x3f
    34b6:	2b 97       	sbiw	r28, 0x0b	; 11
    34b8:	2a 96       	adiw	r28, 0x0a	; 10
    34ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    34bc:	2a 97       	sbiw	r28, 0x0a	; 10
    34be:	8c ad       	ldd	r24, Y+60	; 0x3c
    34c0:	98 17       	cp	r25, r24
    34c2:	18 f0       	brcs	.+6      	; 0x34ca <CLCD_SendNumber+0x20e>
    34c4:	2b 96       	adiw	r28, 0x0b	; 11
    34c6:	1f ae       	std	Y+63, r1	; 0x3f
    34c8:	2b 97       	sbiw	r28, 0x0b	; 11
    34ca:	29 96       	adiw	r28, 0x09	; 9
    34cc:	9f ad       	ldd	r25, Y+63	; 0x3f
    34ce:	29 97       	sbiw	r28, 0x09	; 9
    34d0:	2b 96       	adiw	r28, 0x0b	; 11
    34d2:	8f ad       	ldd	r24, Y+63	; 0x3f
    34d4:	2b 97       	sbiw	r28, 0x0b	; 11
    34d6:	98 2b       	or	r25, r24
    34d8:	29 96       	adiw	r28, 0x09	; 9
    34da:	9f af       	std	Y+63, r25	; 0x3f
    34dc:	29 97       	sbiw	r28, 0x09	; 9
    34de:	2a 96       	adiw	r28, 0x0a	; 10
    34e0:	9f ad       	ldd	r25, Y+63	; 0x3f
    34e2:	2a 97       	sbiw	r28, 0x0a	; 10
    34e4:	9c af       	std	Y+60, r25	; 0x3c
    34e6:	8d a5       	ldd	r24, Y+45	; 0x2d
    34e8:	9d a9       	ldd	r25, Y+53	; 0x35
    34ea:	89 0f       	add	r24, r25
    34ec:	8d af       	std	Y+61, r24	; 0x3d
    34ee:	81 e0       	ldi	r24, 0x01	; 1
    34f0:	2c 96       	adiw	r28, 0x0c	; 12
    34f2:	8f af       	std	Y+63, r24	; 0x3f
    34f4:	2c 97       	sbiw	r28, 0x0c	; 12
    34f6:	9d ad       	ldd	r25, Y+61	; 0x3d
    34f8:	8d a5       	ldd	r24, Y+45	; 0x2d
    34fa:	98 17       	cp	r25, r24
    34fc:	18 f0       	brcs	.+6      	; 0x3504 <CLCD_SendNumber+0x248>
    34fe:	2c 96       	adiw	r28, 0x0c	; 12
    3500:	1f ae       	std	Y+63, r1	; 0x3f
    3502:	2c 97       	sbiw	r28, 0x0c	; 12
    3504:	29 96       	adiw	r28, 0x09	; 9
    3506:	9f ad       	ldd	r25, Y+63	; 0x3f
    3508:	29 97       	sbiw	r28, 0x09	; 9
    350a:	8d ad       	ldd	r24, Y+61	; 0x3d
    350c:	98 0f       	add	r25, r24
    350e:	2d 96       	adiw	r28, 0x0d	; 13
    3510:	9f af       	std	Y+63, r25	; 0x3f
    3512:	2d 97       	sbiw	r28, 0x0d	; 13
    3514:	91 e0       	ldi	r25, 0x01	; 1
    3516:	2e 96       	adiw	r28, 0x0e	; 14
    3518:	9f af       	std	Y+63, r25	; 0x3f
    351a:	2e 97       	sbiw	r28, 0x0e	; 14
    351c:	2d 96       	adiw	r28, 0x0d	; 13
    351e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3520:	2d 97       	sbiw	r28, 0x0d	; 13
    3522:	9d ad       	ldd	r25, Y+61	; 0x3d
    3524:	89 17       	cp	r24, r25
    3526:	18 f0       	brcs	.+6      	; 0x352e <CLCD_SendNumber+0x272>
    3528:	2e 96       	adiw	r28, 0x0e	; 14
    352a:	1f ae       	std	Y+63, r1	; 0x3f
    352c:	2e 97       	sbiw	r28, 0x0e	; 14
    352e:	2c 96       	adiw	r28, 0x0c	; 12
    3530:	8f ad       	ldd	r24, Y+63	; 0x3f
    3532:	2c 97       	sbiw	r28, 0x0c	; 12
    3534:	2e 96       	adiw	r28, 0x0e	; 14
    3536:	9f ad       	ldd	r25, Y+63	; 0x3f
    3538:	2e 97       	sbiw	r28, 0x0e	; 14
    353a:	89 2b       	or	r24, r25
    353c:	2c 96       	adiw	r28, 0x0c	; 12
    353e:	8f af       	std	Y+63, r24	; 0x3f
    3540:	2c 97       	sbiw	r28, 0x0c	; 12
    3542:	2d 96       	adiw	r28, 0x0d	; 13
    3544:	8f ad       	ldd	r24, Y+63	; 0x3f
    3546:	2d 97       	sbiw	r28, 0x0d	; 13
    3548:	8d af       	std	Y+61, r24	; 0x3d
    354a:	9e a5       	ldd	r25, Y+46	; 0x2e
    354c:	8e a9       	ldd	r24, Y+54	; 0x36
    354e:	98 0f       	add	r25, r24
    3550:	9e af       	std	Y+62, r25	; 0x3e
    3552:	91 e0       	ldi	r25, 0x01	; 1
    3554:	2f 96       	adiw	r28, 0x0f	; 15
    3556:	9f af       	std	Y+63, r25	; 0x3f
    3558:	2f 97       	sbiw	r28, 0x0f	; 15
    355a:	8e ad       	ldd	r24, Y+62	; 0x3e
    355c:	9e a5       	ldd	r25, Y+46	; 0x2e
    355e:	89 17       	cp	r24, r25
    3560:	18 f0       	brcs	.+6      	; 0x3568 <CLCD_SendNumber+0x2ac>
    3562:	2f 96       	adiw	r28, 0x0f	; 15
    3564:	1f ae       	std	Y+63, r1	; 0x3f
    3566:	2f 97       	sbiw	r28, 0x0f	; 15
    3568:	2c 96       	adiw	r28, 0x0c	; 12
    356a:	8f ad       	ldd	r24, Y+63	; 0x3f
    356c:	2c 97       	sbiw	r28, 0x0c	; 12
    356e:	9e ad       	ldd	r25, Y+62	; 0x3e
    3570:	89 0f       	add	r24, r25
    3572:	60 96       	adiw	r28, 0x10	; 16
    3574:	8f af       	std	Y+63, r24	; 0x3f
    3576:	60 97       	sbiw	r28, 0x10	; 16
    3578:	81 e0       	ldi	r24, 0x01	; 1
    357a:	61 96       	adiw	r28, 0x11	; 17
    357c:	8f af       	std	Y+63, r24	; 0x3f
    357e:	61 97       	sbiw	r28, 0x11	; 17
    3580:	60 96       	adiw	r28, 0x10	; 16
    3582:	9f ad       	ldd	r25, Y+63	; 0x3f
    3584:	60 97       	sbiw	r28, 0x10	; 16
    3586:	8e ad       	ldd	r24, Y+62	; 0x3e
    3588:	98 17       	cp	r25, r24
    358a:	18 f0       	brcs	.+6      	; 0x3592 <CLCD_SendNumber+0x2d6>
    358c:	61 96       	adiw	r28, 0x11	; 17
    358e:	1f ae       	std	Y+63, r1	; 0x3f
    3590:	61 97       	sbiw	r28, 0x11	; 17
    3592:	2f 96       	adiw	r28, 0x0f	; 15
    3594:	9f ad       	ldd	r25, Y+63	; 0x3f
    3596:	2f 97       	sbiw	r28, 0x0f	; 15
    3598:	61 96       	adiw	r28, 0x11	; 17
    359a:	8f ad       	ldd	r24, Y+63	; 0x3f
    359c:	61 97       	sbiw	r28, 0x11	; 17
    359e:	98 2b       	or	r25, r24
    35a0:	2f 96       	adiw	r28, 0x0f	; 15
    35a2:	9f af       	std	Y+63, r25	; 0x3f
    35a4:	2f 97       	sbiw	r28, 0x0f	; 15
    35a6:	60 96       	adiw	r28, 0x10	; 16
    35a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    35aa:	60 97       	sbiw	r28, 0x10	; 16
    35ac:	9e af       	std	Y+62, r25	; 0x3e
    35ae:	8f a5       	ldd	r24, Y+47	; 0x2f
    35b0:	9f a9       	ldd	r25, Y+55	; 0x37
    35b2:	89 0f       	add	r24, r25
    35b4:	8f af       	std	Y+63, r24	; 0x3f
    35b6:	81 e0       	ldi	r24, 0x01	; 1
    35b8:	62 96       	adiw	r28, 0x12	; 18
    35ba:	8f af       	std	Y+63, r24	; 0x3f
    35bc:	62 97       	sbiw	r28, 0x12	; 18
    35be:	9f ad       	ldd	r25, Y+63	; 0x3f
    35c0:	8f a5       	ldd	r24, Y+47	; 0x2f
    35c2:	98 17       	cp	r25, r24
    35c4:	18 f0       	brcs	.+6      	; 0x35cc <CLCD_SendNumber+0x310>
    35c6:	62 96       	adiw	r28, 0x12	; 18
    35c8:	1f ae       	std	Y+63, r1	; 0x3f
    35ca:	62 97       	sbiw	r28, 0x12	; 18
    35cc:	2f 96       	adiw	r28, 0x0f	; 15
    35ce:	9f ad       	ldd	r25, Y+63	; 0x3f
    35d0:	2f 97       	sbiw	r28, 0x0f	; 15
    35d2:	8f ad       	ldd	r24, Y+63	; 0x3f
    35d4:	98 0f       	add	r25, r24
    35d6:	63 96       	adiw	r28, 0x13	; 19
    35d8:	9f af       	std	Y+63, r25	; 0x3f
    35da:	63 97       	sbiw	r28, 0x13	; 19
    35dc:	91 e0       	ldi	r25, 0x01	; 1
    35de:	64 96       	adiw	r28, 0x14	; 20
    35e0:	9f af       	std	Y+63, r25	; 0x3f
    35e2:	64 97       	sbiw	r28, 0x14	; 20
    35e4:	63 96       	adiw	r28, 0x13	; 19
    35e6:	8f ad       	ldd	r24, Y+63	; 0x3f
    35e8:	63 97       	sbiw	r28, 0x13	; 19
    35ea:	9f ad       	ldd	r25, Y+63	; 0x3f
    35ec:	89 17       	cp	r24, r25
    35ee:	18 f0       	brcs	.+6      	; 0x35f6 <CLCD_SendNumber+0x33a>
    35f0:	64 96       	adiw	r28, 0x14	; 20
    35f2:	1f ae       	std	Y+63, r1	; 0x3f
    35f4:	64 97       	sbiw	r28, 0x14	; 20
    35f6:	62 96       	adiw	r28, 0x12	; 18
    35f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    35fa:	62 97       	sbiw	r28, 0x12	; 18
    35fc:	64 96       	adiw	r28, 0x14	; 20
    35fe:	9f ad       	ldd	r25, Y+63	; 0x3f
    3600:	64 97       	sbiw	r28, 0x14	; 20
    3602:	89 2b       	or	r24, r25
    3604:	62 96       	adiw	r28, 0x12	; 18
    3606:	8f af       	std	Y+63, r24	; 0x3f
    3608:	62 97       	sbiw	r28, 0x12	; 18
    360a:	63 96       	adiw	r28, 0x13	; 19
    360c:	8f ad       	ldd	r24, Y+63	; 0x3f
    360e:	63 97       	sbiw	r28, 0x13	; 19
    3610:	8f af       	std	Y+63, r24	; 0x3f
    3612:	98 a9       	ldd	r25, Y+48	; 0x30
    3614:	88 ad       	ldd	r24, Y+56	; 0x38
    3616:	98 0f       	add	r25, r24
    3618:	21 96       	adiw	r28, 0x01	; 1
    361a:	9f af       	std	Y+63, r25	; 0x3f
    361c:	21 97       	sbiw	r28, 0x01	; 1
    361e:	62 96       	adiw	r28, 0x12	; 18
    3620:	8f ad       	ldd	r24, Y+63	; 0x3f
    3622:	62 97       	sbiw	r28, 0x12	; 18
    3624:	21 96       	adiw	r28, 0x01	; 1
    3626:	9f ad       	ldd	r25, Y+63	; 0x3f
    3628:	21 97       	sbiw	r28, 0x01	; 1
    362a:	89 0f       	add	r24, r25
    362c:	21 96       	adiw	r28, 0x01	; 1
    362e:	8f af       	std	Y+63, r24	; 0x3f
    3630:	21 97       	sbiw	r28, 0x01	; 1
    3632:	89 ad       	ldd	r24, Y+57	; 0x39
    3634:	89 a3       	std	Y+33, r24	; 0x21
    3636:	9a ad       	ldd	r25, Y+58	; 0x3a
    3638:	9a a3       	std	Y+34, r25	; 0x22
    363a:	8b ad       	ldd	r24, Y+59	; 0x3b
    363c:	8b a3       	std	Y+35, r24	; 0x23
    363e:	9c ad       	ldd	r25, Y+60	; 0x3c
    3640:	9c a3       	std	Y+36, r25	; 0x24
    3642:	8d ad       	ldd	r24, Y+61	; 0x3d
    3644:	8d a3       	std	Y+37, r24	; 0x25
    3646:	9e ad       	ldd	r25, Y+62	; 0x3e
    3648:	9e a3       	std	Y+38, r25	; 0x26
    364a:	8f ad       	ldd	r24, Y+63	; 0x3f
    364c:	8f a3       	std	Y+39, r24	; 0x27
    364e:	21 96       	adiw	r28, 0x01	; 1
    3650:	9f ad       	ldd	r25, Y+63	; 0x3f
    3652:	21 97       	sbiw	r28, 0x01	; 1
    3654:	98 a7       	std	Y+40, r25	; 0x28
    3656:	a9 84       	ldd	r10, Y+9	; 0x09
    3658:	ba 84       	ldd	r11, Y+10	; 0x0a
    365a:	cb 84       	ldd	r12, Y+11	; 0x0b
    365c:	dc 84       	ldd	r13, Y+12	; 0x0c
    365e:	ed 84       	ldd	r14, Y+13	; 0x0d
    3660:	fe 84       	ldd	r15, Y+14	; 0x0e
    3662:	0f 85       	ldd	r16, Y+15	; 0x0f
    3664:	18 89       	ldd	r17, Y+16	; 0x10
    3666:	2a 2d       	mov	r18, r10
    3668:	3b 2d       	mov	r19, r11
    366a:	4c 2d       	mov	r20, r12
    366c:	5d 2d       	mov	r21, r13
    366e:	6e 2d       	mov	r22, r14
    3670:	7f 2d       	mov	r23, r15
    3672:	80 2f       	mov	r24, r16
    3674:	91 2f       	mov	r25, r17
    3676:	0f 2e       	mov	r0, r31
    3678:	fa e0       	ldi	r31, 0x0A	; 10
    367a:	af 2e       	mov	r10, r31
    367c:	f0 2d       	mov	r31, r0
    367e:	bb 24       	eor	r11, r11
    3680:	cc 24       	eor	r12, r12
    3682:	dd 24       	eor	r13, r13
    3684:	ee 24       	eor	r14, r14
    3686:	ff 24       	eor	r15, r15
    3688:	00 e0       	ldi	r16, 0x00	; 0
    368a:	10 e0       	ldi	r17, 0x00	; 0
    368c:	0e 94 69 07 	call	0xed2	; 0xed2 <__umoddi3>
    3690:	a2 2e       	mov	r10, r18
    3692:	b3 2e       	mov	r11, r19
    3694:	c4 2e       	mov	r12, r20
    3696:	d5 2e       	mov	r13, r21
    3698:	e6 2e       	mov	r14, r22
    369a:	f7 2e       	mov	r15, r23
    369c:	08 2f       	mov	r16, r24
    369e:	19 2f       	mov	r17, r25
    36a0:	a9 8e       	std	Y+25, r10	; 0x19
    36a2:	ba 8e       	std	Y+26, r11	; 0x1a
    36a4:	cb 8e       	std	Y+27, r12	; 0x1b
    36a6:	dc 8e       	std	Y+28, r13	; 0x1c
    36a8:	ed 8e       	std	Y+29, r14	; 0x1d
    36aa:	fe 8e       	std	Y+30, r15	; 0x1e
    36ac:	0f 8f       	std	Y+31, r16	; 0x1f
    36ae:	18 a3       	std	Y+32, r17	; 0x20
    36b0:	89 a1       	ldd	r24, Y+33	; 0x21
    36b2:	99 8d       	ldd	r25, Y+25	; 0x19
    36b4:	89 0f       	add	r24, r25
    36b6:	65 96       	adiw	r28, 0x15	; 21
    36b8:	8f af       	std	Y+63, r24	; 0x3f
    36ba:	65 97       	sbiw	r28, 0x15	; 21
    36bc:	81 e0       	ldi	r24, 0x01	; 1
    36be:	6d 96       	adiw	r28, 0x1d	; 29
    36c0:	8f af       	std	Y+63, r24	; 0x3f
    36c2:	6d 97       	sbiw	r28, 0x1d	; 29
    36c4:	65 96       	adiw	r28, 0x15	; 21
    36c6:	9f ad       	ldd	r25, Y+63	; 0x3f
    36c8:	65 97       	sbiw	r28, 0x15	; 21
    36ca:	89 a1       	ldd	r24, Y+33	; 0x21
    36cc:	98 17       	cp	r25, r24
    36ce:	18 f0       	brcs	.+6      	; 0x36d6 <CLCD_SendNumber+0x41a>
    36d0:	6d 96       	adiw	r28, 0x1d	; 29
    36d2:	1f ae       	std	Y+63, r1	; 0x3f
    36d4:	6d 97       	sbiw	r28, 0x1d	; 29
    36d6:	9a a1       	ldd	r25, Y+34	; 0x22
    36d8:	8a 8d       	ldd	r24, Y+26	; 0x1a
    36da:	98 0f       	add	r25, r24
    36dc:	66 96       	adiw	r28, 0x16	; 22
    36de:	9f af       	std	Y+63, r25	; 0x3f
    36e0:	66 97       	sbiw	r28, 0x16	; 22
    36e2:	91 e0       	ldi	r25, 0x01	; 1
    36e4:	6e 96       	adiw	r28, 0x1e	; 30
    36e6:	9f af       	std	Y+63, r25	; 0x3f
    36e8:	6e 97       	sbiw	r28, 0x1e	; 30
    36ea:	66 96       	adiw	r28, 0x16	; 22
    36ec:	8f ad       	ldd	r24, Y+63	; 0x3f
    36ee:	66 97       	sbiw	r28, 0x16	; 22
    36f0:	9a a1       	ldd	r25, Y+34	; 0x22
    36f2:	89 17       	cp	r24, r25
    36f4:	18 f0       	brcs	.+6      	; 0x36fc <CLCD_SendNumber+0x440>
    36f6:	6e 96       	adiw	r28, 0x1e	; 30
    36f8:	1f ae       	std	Y+63, r1	; 0x3f
    36fa:	6e 97       	sbiw	r28, 0x1e	; 30
    36fc:	6d 96       	adiw	r28, 0x1d	; 29
    36fe:	8f ad       	ldd	r24, Y+63	; 0x3f
    3700:	6d 97       	sbiw	r28, 0x1d	; 29
    3702:	66 96       	adiw	r28, 0x16	; 22
    3704:	9f ad       	ldd	r25, Y+63	; 0x3f
    3706:	66 97       	sbiw	r28, 0x16	; 22
    3708:	89 0f       	add	r24, r25
    370a:	6f 96       	adiw	r28, 0x1f	; 31
    370c:	8f af       	std	Y+63, r24	; 0x3f
    370e:	6f 97       	sbiw	r28, 0x1f	; 31
    3710:	81 e0       	ldi	r24, 0x01	; 1
    3712:	a0 96       	adiw	r28, 0x20	; 32
    3714:	8f af       	std	Y+63, r24	; 0x3f
    3716:	a0 97       	sbiw	r28, 0x20	; 32
    3718:	6f 96       	adiw	r28, 0x1f	; 31
    371a:	9f ad       	ldd	r25, Y+63	; 0x3f
    371c:	6f 97       	sbiw	r28, 0x1f	; 31
    371e:	66 96       	adiw	r28, 0x16	; 22
    3720:	8f ad       	ldd	r24, Y+63	; 0x3f
    3722:	66 97       	sbiw	r28, 0x16	; 22
    3724:	98 17       	cp	r25, r24
    3726:	18 f0       	brcs	.+6      	; 0x372e <CLCD_SendNumber+0x472>
    3728:	a0 96       	adiw	r28, 0x20	; 32
    372a:	1f ae       	std	Y+63, r1	; 0x3f
    372c:	a0 97       	sbiw	r28, 0x20	; 32
    372e:	6e 96       	adiw	r28, 0x1e	; 30
    3730:	9f ad       	ldd	r25, Y+63	; 0x3f
    3732:	6e 97       	sbiw	r28, 0x1e	; 30
    3734:	a0 96       	adiw	r28, 0x20	; 32
    3736:	8f ad       	ldd	r24, Y+63	; 0x3f
    3738:	a0 97       	sbiw	r28, 0x20	; 32
    373a:	98 2b       	or	r25, r24
    373c:	6e 96       	adiw	r28, 0x1e	; 30
    373e:	9f af       	std	Y+63, r25	; 0x3f
    3740:	6e 97       	sbiw	r28, 0x1e	; 30
    3742:	6f 96       	adiw	r28, 0x1f	; 31
    3744:	9f ad       	ldd	r25, Y+63	; 0x3f
    3746:	6f 97       	sbiw	r28, 0x1f	; 31
    3748:	66 96       	adiw	r28, 0x16	; 22
    374a:	9f af       	std	Y+63, r25	; 0x3f
    374c:	66 97       	sbiw	r28, 0x16	; 22
    374e:	8b a1       	ldd	r24, Y+35	; 0x23
    3750:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3752:	89 0f       	add	r24, r25
    3754:	67 96       	adiw	r28, 0x17	; 23
    3756:	8f af       	std	Y+63, r24	; 0x3f
    3758:	67 97       	sbiw	r28, 0x17	; 23
    375a:	81 e0       	ldi	r24, 0x01	; 1
    375c:	a1 96       	adiw	r28, 0x21	; 33
    375e:	8f af       	std	Y+63, r24	; 0x3f
    3760:	a1 97       	sbiw	r28, 0x21	; 33
    3762:	67 96       	adiw	r28, 0x17	; 23
    3764:	9f ad       	ldd	r25, Y+63	; 0x3f
    3766:	67 97       	sbiw	r28, 0x17	; 23
    3768:	8b a1       	ldd	r24, Y+35	; 0x23
    376a:	98 17       	cp	r25, r24
    376c:	18 f0       	brcs	.+6      	; 0x3774 <CLCD_SendNumber+0x4b8>
    376e:	a1 96       	adiw	r28, 0x21	; 33
    3770:	1f ae       	std	Y+63, r1	; 0x3f
    3772:	a1 97       	sbiw	r28, 0x21	; 33
    3774:	6e 96       	adiw	r28, 0x1e	; 30
    3776:	9f ad       	ldd	r25, Y+63	; 0x3f
    3778:	6e 97       	sbiw	r28, 0x1e	; 30
    377a:	67 96       	adiw	r28, 0x17	; 23
    377c:	8f ad       	ldd	r24, Y+63	; 0x3f
    377e:	67 97       	sbiw	r28, 0x17	; 23
    3780:	98 0f       	add	r25, r24
    3782:	a2 96       	adiw	r28, 0x22	; 34
    3784:	9f af       	std	Y+63, r25	; 0x3f
    3786:	a2 97       	sbiw	r28, 0x22	; 34
    3788:	91 e0       	ldi	r25, 0x01	; 1
    378a:	a3 96       	adiw	r28, 0x23	; 35
    378c:	9f af       	std	Y+63, r25	; 0x3f
    378e:	a3 97       	sbiw	r28, 0x23	; 35
    3790:	a2 96       	adiw	r28, 0x22	; 34
    3792:	8f ad       	ldd	r24, Y+63	; 0x3f
    3794:	a2 97       	sbiw	r28, 0x22	; 34
    3796:	67 96       	adiw	r28, 0x17	; 23
    3798:	9f ad       	ldd	r25, Y+63	; 0x3f
    379a:	67 97       	sbiw	r28, 0x17	; 23
    379c:	89 17       	cp	r24, r25
    379e:	18 f0       	brcs	.+6      	; 0x37a6 <CLCD_SendNumber+0x4ea>
    37a0:	a3 96       	adiw	r28, 0x23	; 35
    37a2:	1f ae       	std	Y+63, r1	; 0x3f
    37a4:	a3 97       	sbiw	r28, 0x23	; 35
    37a6:	a1 96       	adiw	r28, 0x21	; 33
    37a8:	8f ad       	ldd	r24, Y+63	; 0x3f
    37aa:	a1 97       	sbiw	r28, 0x21	; 33
    37ac:	a3 96       	adiw	r28, 0x23	; 35
    37ae:	9f ad       	ldd	r25, Y+63	; 0x3f
    37b0:	a3 97       	sbiw	r28, 0x23	; 35
    37b2:	89 2b       	or	r24, r25
    37b4:	a1 96       	adiw	r28, 0x21	; 33
    37b6:	8f af       	std	Y+63, r24	; 0x3f
    37b8:	a1 97       	sbiw	r28, 0x21	; 33
    37ba:	a2 96       	adiw	r28, 0x22	; 34
    37bc:	8f ad       	ldd	r24, Y+63	; 0x3f
    37be:	a2 97       	sbiw	r28, 0x22	; 34
    37c0:	67 96       	adiw	r28, 0x17	; 23
    37c2:	8f af       	std	Y+63, r24	; 0x3f
    37c4:	67 97       	sbiw	r28, 0x17	; 23
    37c6:	9c a1       	ldd	r25, Y+36	; 0x24
    37c8:	8c 8d       	ldd	r24, Y+28	; 0x1c
    37ca:	98 0f       	add	r25, r24
    37cc:	68 96       	adiw	r28, 0x18	; 24
    37ce:	9f af       	std	Y+63, r25	; 0x3f
    37d0:	68 97       	sbiw	r28, 0x18	; 24
    37d2:	91 e0       	ldi	r25, 0x01	; 1
    37d4:	a4 96       	adiw	r28, 0x24	; 36
    37d6:	9f af       	std	Y+63, r25	; 0x3f
    37d8:	a4 97       	sbiw	r28, 0x24	; 36
    37da:	68 96       	adiw	r28, 0x18	; 24
    37dc:	8f ad       	ldd	r24, Y+63	; 0x3f
    37de:	68 97       	sbiw	r28, 0x18	; 24
    37e0:	9c a1       	ldd	r25, Y+36	; 0x24
    37e2:	89 17       	cp	r24, r25
    37e4:	18 f0       	brcs	.+6      	; 0x37ec <CLCD_SendNumber+0x530>
    37e6:	a4 96       	adiw	r28, 0x24	; 36
    37e8:	1f ae       	std	Y+63, r1	; 0x3f
    37ea:	a4 97       	sbiw	r28, 0x24	; 36
    37ec:	a1 96       	adiw	r28, 0x21	; 33
    37ee:	8f ad       	ldd	r24, Y+63	; 0x3f
    37f0:	a1 97       	sbiw	r28, 0x21	; 33
    37f2:	68 96       	adiw	r28, 0x18	; 24
    37f4:	9f ad       	ldd	r25, Y+63	; 0x3f
    37f6:	68 97       	sbiw	r28, 0x18	; 24
    37f8:	89 0f       	add	r24, r25
    37fa:	a5 96       	adiw	r28, 0x25	; 37
    37fc:	8f af       	std	Y+63, r24	; 0x3f
    37fe:	a5 97       	sbiw	r28, 0x25	; 37
    3800:	81 e0       	ldi	r24, 0x01	; 1
    3802:	a6 96       	adiw	r28, 0x26	; 38
    3804:	8f af       	std	Y+63, r24	; 0x3f
    3806:	a6 97       	sbiw	r28, 0x26	; 38
    3808:	a5 96       	adiw	r28, 0x25	; 37
    380a:	9f ad       	ldd	r25, Y+63	; 0x3f
    380c:	a5 97       	sbiw	r28, 0x25	; 37
    380e:	68 96       	adiw	r28, 0x18	; 24
    3810:	8f ad       	ldd	r24, Y+63	; 0x3f
    3812:	68 97       	sbiw	r28, 0x18	; 24
    3814:	98 17       	cp	r25, r24
    3816:	18 f0       	brcs	.+6      	; 0x381e <CLCD_SendNumber+0x562>
    3818:	a6 96       	adiw	r28, 0x26	; 38
    381a:	1f ae       	std	Y+63, r1	; 0x3f
    381c:	a6 97       	sbiw	r28, 0x26	; 38
    381e:	a4 96       	adiw	r28, 0x24	; 36
    3820:	9f ad       	ldd	r25, Y+63	; 0x3f
    3822:	a4 97       	sbiw	r28, 0x24	; 36
    3824:	a6 96       	adiw	r28, 0x26	; 38
    3826:	8f ad       	ldd	r24, Y+63	; 0x3f
    3828:	a6 97       	sbiw	r28, 0x26	; 38
    382a:	98 2b       	or	r25, r24
    382c:	a4 96       	adiw	r28, 0x24	; 36
    382e:	9f af       	std	Y+63, r25	; 0x3f
    3830:	a4 97       	sbiw	r28, 0x24	; 36
    3832:	a5 96       	adiw	r28, 0x25	; 37
    3834:	9f ad       	ldd	r25, Y+63	; 0x3f
    3836:	a5 97       	sbiw	r28, 0x25	; 37
    3838:	68 96       	adiw	r28, 0x18	; 24
    383a:	9f af       	std	Y+63, r25	; 0x3f
    383c:	68 97       	sbiw	r28, 0x18	; 24
    383e:	8d a1       	ldd	r24, Y+37	; 0x25
    3840:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3842:	89 0f       	add	r24, r25
    3844:	69 96       	adiw	r28, 0x19	; 25
    3846:	8f af       	std	Y+63, r24	; 0x3f
    3848:	69 97       	sbiw	r28, 0x19	; 25
    384a:	81 e0       	ldi	r24, 0x01	; 1
    384c:	a7 96       	adiw	r28, 0x27	; 39
    384e:	8f af       	std	Y+63, r24	; 0x3f
    3850:	a7 97       	sbiw	r28, 0x27	; 39
    3852:	69 96       	adiw	r28, 0x19	; 25
    3854:	9f ad       	ldd	r25, Y+63	; 0x3f
    3856:	69 97       	sbiw	r28, 0x19	; 25
    3858:	8d a1       	ldd	r24, Y+37	; 0x25
    385a:	98 17       	cp	r25, r24
    385c:	18 f0       	brcs	.+6      	; 0x3864 <CLCD_SendNumber+0x5a8>
    385e:	a7 96       	adiw	r28, 0x27	; 39
    3860:	1f ae       	std	Y+63, r1	; 0x3f
    3862:	a7 97       	sbiw	r28, 0x27	; 39
    3864:	a4 96       	adiw	r28, 0x24	; 36
    3866:	9f ad       	ldd	r25, Y+63	; 0x3f
    3868:	a4 97       	sbiw	r28, 0x24	; 36
    386a:	69 96       	adiw	r28, 0x19	; 25
    386c:	8f ad       	ldd	r24, Y+63	; 0x3f
    386e:	69 97       	sbiw	r28, 0x19	; 25
    3870:	98 0f       	add	r25, r24
    3872:	a8 96       	adiw	r28, 0x28	; 40
    3874:	9f af       	std	Y+63, r25	; 0x3f
    3876:	a8 97       	sbiw	r28, 0x28	; 40
    3878:	91 e0       	ldi	r25, 0x01	; 1
    387a:	a9 96       	adiw	r28, 0x29	; 41
    387c:	9f af       	std	Y+63, r25	; 0x3f
    387e:	a9 97       	sbiw	r28, 0x29	; 41
    3880:	a8 96       	adiw	r28, 0x28	; 40
    3882:	8f ad       	ldd	r24, Y+63	; 0x3f
    3884:	a8 97       	sbiw	r28, 0x28	; 40
    3886:	69 96       	adiw	r28, 0x19	; 25
    3888:	9f ad       	ldd	r25, Y+63	; 0x3f
    388a:	69 97       	sbiw	r28, 0x19	; 25
    388c:	89 17       	cp	r24, r25
    388e:	18 f0       	brcs	.+6      	; 0x3896 <CLCD_SendNumber+0x5da>
    3890:	a9 96       	adiw	r28, 0x29	; 41
    3892:	1f ae       	std	Y+63, r1	; 0x3f
    3894:	a9 97       	sbiw	r28, 0x29	; 41
    3896:	a7 96       	adiw	r28, 0x27	; 39
    3898:	8f ad       	ldd	r24, Y+63	; 0x3f
    389a:	a7 97       	sbiw	r28, 0x27	; 39
    389c:	a9 96       	adiw	r28, 0x29	; 41
    389e:	9f ad       	ldd	r25, Y+63	; 0x3f
    38a0:	a9 97       	sbiw	r28, 0x29	; 41
    38a2:	89 2b       	or	r24, r25
    38a4:	a7 96       	adiw	r28, 0x27	; 39
    38a6:	8f af       	std	Y+63, r24	; 0x3f
    38a8:	a7 97       	sbiw	r28, 0x27	; 39
    38aa:	a8 96       	adiw	r28, 0x28	; 40
    38ac:	8f ad       	ldd	r24, Y+63	; 0x3f
    38ae:	a8 97       	sbiw	r28, 0x28	; 40
    38b0:	69 96       	adiw	r28, 0x19	; 25
    38b2:	8f af       	std	Y+63, r24	; 0x3f
    38b4:	69 97       	sbiw	r28, 0x19	; 25
    38b6:	9e a1       	ldd	r25, Y+38	; 0x26
    38b8:	8e 8d       	ldd	r24, Y+30	; 0x1e
    38ba:	98 0f       	add	r25, r24
    38bc:	6a 96       	adiw	r28, 0x1a	; 26
    38be:	9f af       	std	Y+63, r25	; 0x3f
    38c0:	6a 97       	sbiw	r28, 0x1a	; 26
    38c2:	91 e0       	ldi	r25, 0x01	; 1
    38c4:	aa 96       	adiw	r28, 0x2a	; 42
    38c6:	9f af       	std	Y+63, r25	; 0x3f
    38c8:	aa 97       	sbiw	r28, 0x2a	; 42
    38ca:	6a 96       	adiw	r28, 0x1a	; 26
    38cc:	8f ad       	ldd	r24, Y+63	; 0x3f
    38ce:	6a 97       	sbiw	r28, 0x1a	; 26
    38d0:	9e a1       	ldd	r25, Y+38	; 0x26
    38d2:	89 17       	cp	r24, r25
    38d4:	18 f0       	brcs	.+6      	; 0x38dc <CLCD_SendNumber+0x620>
    38d6:	aa 96       	adiw	r28, 0x2a	; 42
    38d8:	1f ae       	std	Y+63, r1	; 0x3f
    38da:	aa 97       	sbiw	r28, 0x2a	; 42
    38dc:	a7 96       	adiw	r28, 0x27	; 39
    38de:	8f ad       	ldd	r24, Y+63	; 0x3f
    38e0:	a7 97       	sbiw	r28, 0x27	; 39
    38e2:	6a 96       	adiw	r28, 0x1a	; 26
    38e4:	9f ad       	ldd	r25, Y+63	; 0x3f
    38e6:	6a 97       	sbiw	r28, 0x1a	; 26
    38e8:	89 0f       	add	r24, r25
    38ea:	ab 96       	adiw	r28, 0x2b	; 43
    38ec:	8f af       	std	Y+63, r24	; 0x3f
    38ee:	ab 97       	sbiw	r28, 0x2b	; 43
    38f0:	81 e0       	ldi	r24, 0x01	; 1
    38f2:	ac 96       	adiw	r28, 0x2c	; 44
    38f4:	8f af       	std	Y+63, r24	; 0x3f
    38f6:	ac 97       	sbiw	r28, 0x2c	; 44
    38f8:	ab 96       	adiw	r28, 0x2b	; 43
    38fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    38fc:	ab 97       	sbiw	r28, 0x2b	; 43
    38fe:	6a 96       	adiw	r28, 0x1a	; 26
    3900:	8f ad       	ldd	r24, Y+63	; 0x3f
    3902:	6a 97       	sbiw	r28, 0x1a	; 26
    3904:	98 17       	cp	r25, r24
    3906:	18 f0       	brcs	.+6      	; 0x390e <CLCD_SendNumber+0x652>
    3908:	ac 96       	adiw	r28, 0x2c	; 44
    390a:	1f ae       	std	Y+63, r1	; 0x3f
    390c:	ac 97       	sbiw	r28, 0x2c	; 44
    390e:	aa 96       	adiw	r28, 0x2a	; 42
    3910:	9f ad       	ldd	r25, Y+63	; 0x3f
    3912:	aa 97       	sbiw	r28, 0x2a	; 42
    3914:	ac 96       	adiw	r28, 0x2c	; 44
    3916:	8f ad       	ldd	r24, Y+63	; 0x3f
    3918:	ac 97       	sbiw	r28, 0x2c	; 44
    391a:	98 2b       	or	r25, r24
    391c:	aa 96       	adiw	r28, 0x2a	; 42
    391e:	9f af       	std	Y+63, r25	; 0x3f
    3920:	aa 97       	sbiw	r28, 0x2a	; 42
    3922:	ab 96       	adiw	r28, 0x2b	; 43
    3924:	9f ad       	ldd	r25, Y+63	; 0x3f
    3926:	ab 97       	sbiw	r28, 0x2b	; 43
    3928:	6a 96       	adiw	r28, 0x1a	; 26
    392a:	9f af       	std	Y+63, r25	; 0x3f
    392c:	6a 97       	sbiw	r28, 0x1a	; 26
    392e:	8f a1       	ldd	r24, Y+39	; 0x27
    3930:	9f 8d       	ldd	r25, Y+31	; 0x1f
    3932:	89 0f       	add	r24, r25
    3934:	6b 96       	adiw	r28, 0x1b	; 27
    3936:	8f af       	std	Y+63, r24	; 0x3f
    3938:	6b 97       	sbiw	r28, 0x1b	; 27
    393a:	81 e0       	ldi	r24, 0x01	; 1
    393c:	ad 96       	adiw	r28, 0x2d	; 45
    393e:	8f af       	std	Y+63, r24	; 0x3f
    3940:	ad 97       	sbiw	r28, 0x2d	; 45
    3942:	6b 96       	adiw	r28, 0x1b	; 27
    3944:	9f ad       	ldd	r25, Y+63	; 0x3f
    3946:	6b 97       	sbiw	r28, 0x1b	; 27
    3948:	8f a1       	ldd	r24, Y+39	; 0x27
    394a:	98 17       	cp	r25, r24
    394c:	18 f0       	brcs	.+6      	; 0x3954 <CLCD_SendNumber+0x698>
    394e:	ad 96       	adiw	r28, 0x2d	; 45
    3950:	1f ae       	std	Y+63, r1	; 0x3f
    3952:	ad 97       	sbiw	r28, 0x2d	; 45
    3954:	aa 96       	adiw	r28, 0x2a	; 42
    3956:	9f ad       	ldd	r25, Y+63	; 0x3f
    3958:	aa 97       	sbiw	r28, 0x2a	; 42
    395a:	6b 96       	adiw	r28, 0x1b	; 27
    395c:	8f ad       	ldd	r24, Y+63	; 0x3f
    395e:	6b 97       	sbiw	r28, 0x1b	; 27
    3960:	98 0f       	add	r25, r24
    3962:	ae 96       	adiw	r28, 0x2e	; 46
    3964:	9f af       	std	Y+63, r25	; 0x3f
    3966:	ae 97       	sbiw	r28, 0x2e	; 46
    3968:	91 e0       	ldi	r25, 0x01	; 1
    396a:	af 96       	adiw	r28, 0x2f	; 47
    396c:	9f af       	std	Y+63, r25	; 0x3f
    396e:	af 97       	sbiw	r28, 0x2f	; 47
    3970:	ae 96       	adiw	r28, 0x2e	; 46
    3972:	8f ad       	ldd	r24, Y+63	; 0x3f
    3974:	ae 97       	sbiw	r28, 0x2e	; 46
    3976:	6b 96       	adiw	r28, 0x1b	; 27
    3978:	9f ad       	ldd	r25, Y+63	; 0x3f
    397a:	6b 97       	sbiw	r28, 0x1b	; 27
    397c:	89 17       	cp	r24, r25
    397e:	18 f0       	brcs	.+6      	; 0x3986 <CLCD_SendNumber+0x6ca>
    3980:	af 96       	adiw	r28, 0x2f	; 47
    3982:	1f ae       	std	Y+63, r1	; 0x3f
    3984:	af 97       	sbiw	r28, 0x2f	; 47
    3986:	ad 96       	adiw	r28, 0x2d	; 45
    3988:	8f ad       	ldd	r24, Y+63	; 0x3f
    398a:	ad 97       	sbiw	r28, 0x2d	; 45
    398c:	af 96       	adiw	r28, 0x2f	; 47
    398e:	9f ad       	ldd	r25, Y+63	; 0x3f
    3990:	af 97       	sbiw	r28, 0x2f	; 47
    3992:	89 2b       	or	r24, r25
    3994:	ad 96       	adiw	r28, 0x2d	; 45
    3996:	8f af       	std	Y+63, r24	; 0x3f
    3998:	ad 97       	sbiw	r28, 0x2d	; 45
    399a:	ae 96       	adiw	r28, 0x2e	; 46
    399c:	8f ad       	ldd	r24, Y+63	; 0x3f
    399e:	ae 97       	sbiw	r28, 0x2e	; 46
    39a0:	6b 96       	adiw	r28, 0x1b	; 27
    39a2:	8f af       	std	Y+63, r24	; 0x3f
    39a4:	6b 97       	sbiw	r28, 0x1b	; 27
    39a6:	98 a5       	ldd	r25, Y+40	; 0x28
    39a8:	88 a1       	ldd	r24, Y+32	; 0x20
    39aa:	98 0f       	add	r25, r24
    39ac:	6c 96       	adiw	r28, 0x1c	; 28
    39ae:	9f af       	std	Y+63, r25	; 0x3f
    39b0:	6c 97       	sbiw	r28, 0x1c	; 28
    39b2:	ad 96       	adiw	r28, 0x2d	; 45
    39b4:	8f ad       	ldd	r24, Y+63	; 0x3f
    39b6:	ad 97       	sbiw	r28, 0x2d	; 45
    39b8:	6c 96       	adiw	r28, 0x1c	; 28
    39ba:	9f ad       	ldd	r25, Y+63	; 0x3f
    39bc:	6c 97       	sbiw	r28, 0x1c	; 28
    39be:	89 0f       	add	r24, r25
    39c0:	6c 96       	adiw	r28, 0x1c	; 28
    39c2:	8f af       	std	Y+63, r24	; 0x3f
    39c4:	6c 97       	sbiw	r28, 0x1c	; 28
    39c6:	65 96       	adiw	r28, 0x15	; 21
    39c8:	8f ad       	ldd	r24, Y+63	; 0x3f
    39ca:	65 97       	sbiw	r28, 0x15	; 21
    39cc:	89 83       	std	Y+1, r24	; 0x01
    39ce:	66 96       	adiw	r28, 0x16	; 22
    39d0:	9f ad       	ldd	r25, Y+63	; 0x3f
    39d2:	66 97       	sbiw	r28, 0x16	; 22
    39d4:	9a 83       	std	Y+2, r25	; 0x02
    39d6:	67 96       	adiw	r28, 0x17	; 23
    39d8:	8f ad       	ldd	r24, Y+63	; 0x3f
    39da:	67 97       	sbiw	r28, 0x17	; 23
    39dc:	8b 83       	std	Y+3, r24	; 0x03
    39de:	68 96       	adiw	r28, 0x18	; 24
    39e0:	9f ad       	ldd	r25, Y+63	; 0x3f
    39e2:	68 97       	sbiw	r28, 0x18	; 24
    39e4:	9c 83       	std	Y+4, r25	; 0x04
    39e6:	69 96       	adiw	r28, 0x19	; 25
    39e8:	8f ad       	ldd	r24, Y+63	; 0x3f
    39ea:	69 97       	sbiw	r28, 0x19	; 25
    39ec:	8d 83       	std	Y+5, r24	; 0x05
    39ee:	6a 96       	adiw	r28, 0x1a	; 26
    39f0:	9f ad       	ldd	r25, Y+63	; 0x3f
    39f2:	6a 97       	sbiw	r28, 0x1a	; 26
    39f4:	9e 83       	std	Y+6, r25	; 0x06
    39f6:	6b 96       	adiw	r28, 0x1b	; 27
    39f8:	8f ad       	ldd	r24, Y+63	; 0x3f
    39fa:	6b 97       	sbiw	r28, 0x1b	; 27
    39fc:	8f 83       	std	Y+7, r24	; 0x07
    39fe:	6c 96       	adiw	r28, 0x1c	; 28
    3a00:	9f ad       	ldd	r25, Y+63	; 0x3f
    3a02:	6c 97       	sbiw	r28, 0x1c	; 28
    3a04:	98 87       	std	Y+8, r25	; 0x08
			COPY_u64Number/=10;
    3a06:	a9 84       	ldd	r10, Y+9	; 0x09
    3a08:	ba 84       	ldd	r11, Y+10	; 0x0a
    3a0a:	cb 84       	ldd	r12, Y+11	; 0x0b
    3a0c:	dc 84       	ldd	r13, Y+12	; 0x0c
    3a0e:	ed 84       	ldd	r14, Y+13	; 0x0d
    3a10:	fe 84       	ldd	r15, Y+14	; 0x0e
    3a12:	0f 85       	ldd	r16, Y+15	; 0x0f
    3a14:	18 89       	ldd	r17, Y+16	; 0x10
    3a16:	2a 2d       	mov	r18, r10
    3a18:	3b 2d       	mov	r19, r11
    3a1a:	4c 2d       	mov	r20, r12
    3a1c:	5d 2d       	mov	r21, r13
    3a1e:	6e 2d       	mov	r22, r14
    3a20:	7f 2d       	mov	r23, r15
    3a22:	80 2f       	mov	r24, r16
    3a24:	91 2f       	mov	r25, r17
    3a26:	0f 2e       	mov	r0, r31
    3a28:	fa e0       	ldi	r31, 0x0A	; 10
    3a2a:	af 2e       	mov	r10, r31
    3a2c:	f0 2d       	mov	r31, r0
    3a2e:	bb 24       	eor	r11, r11
    3a30:	cc 24       	eor	r12, r12
    3a32:	dd 24       	eor	r13, r13
    3a34:	ee 24       	eor	r14, r14
    3a36:	ff 24       	eor	r15, r15
    3a38:	00 e0       	ldi	r16, 0x00	; 0
    3a3a:	10 e0       	ldi	r17, 0x00	; 0
    3a3c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__udivdi3>
    3a40:	a2 2e       	mov	r10, r18
    3a42:	b3 2e       	mov	r11, r19
    3a44:	c4 2e       	mov	r12, r20
    3a46:	d5 2e       	mov	r13, r21
    3a48:	e6 2e       	mov	r14, r22
    3a4a:	f7 2e       	mov	r15, r23
    3a4c:	08 2f       	mov	r16, r24
    3a4e:	19 2f       	mov	r17, r25
    3a50:	a9 86       	std	Y+9, r10	; 0x09
    3a52:	ba 86       	std	Y+10, r11	; 0x0a
    3a54:	cb 86       	std	Y+11, r12	; 0x0b
    3a56:	dc 86       	std	Y+12, r13	; 0x0c
    3a58:	ed 86       	std	Y+13, r14	; 0x0d
    3a5a:	fe 86       	std	Y+14, r15	; 0x0e
    3a5c:	0f 87       	std	Y+15, r16	; 0x0f
    3a5e:	18 8b       	std	Y+16, r17	; 0x10
	{
		CLCD_voidSendData('0');
	}
	else
	{
		while(COPY_u64Number != 0)
    3a60:	89 85       	ldd	r24, Y+9	; 0x09
    3a62:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a64:	89 2b       	or	r24, r25
    3a66:	9b 85       	ldd	r25, Y+11	; 0x0b
    3a68:	89 2b       	or	r24, r25
    3a6a:	9c 85       	ldd	r25, Y+12	; 0x0c
    3a6c:	89 2b       	or	r24, r25
    3a6e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3a70:	89 2b       	or	r24, r25
    3a72:	9e 85       	ldd	r25, Y+14	; 0x0e
    3a74:	89 2b       	or	r24, r25
    3a76:	9f 85       	ldd	r25, Y+15	; 0x0f
    3a78:	89 2b       	or	r24, r25
    3a7a:	98 89       	ldd	r25, Y+16	; 0x10
    3a7c:	89 2b       	or	r24, r25
    3a7e:	88 23       	and	r24, r24
    3a80:	09 f0       	breq	.+2      	; 0x3a84 <CLCD_SendNumber+0x7c8>
    3a82:	56 cc       	rjmp	.-1876   	; 0x3330 <CLCD_SendNumber+0x74>
    3a84:	b8 c2       	rjmp	.+1392   	; 0x3ff6 <CLCD_SendNumber+0xd3a>
			LOC_u64Reversed = ( LOC_u64Reversed*10 ) + ( COPY_u64Number%10 );
			COPY_u64Number/=10;
		}
		while(LOC_u64Reversed != 1)
		{
			LOC_u64Reversed = ( LOC_u64Reversed%10 ) + 48;
    3a86:	a9 80       	ldd	r10, Y+1	; 0x01
    3a88:	ba 80       	ldd	r11, Y+2	; 0x02
    3a8a:	cb 80       	ldd	r12, Y+3	; 0x03
    3a8c:	dc 80       	ldd	r13, Y+4	; 0x04
    3a8e:	ed 80       	ldd	r14, Y+5	; 0x05
    3a90:	fe 80       	ldd	r15, Y+6	; 0x06
    3a92:	0f 81       	ldd	r16, Y+7	; 0x07
    3a94:	18 85       	ldd	r17, Y+8	; 0x08
    3a96:	2a 2d       	mov	r18, r10
    3a98:	3b 2d       	mov	r19, r11
    3a9a:	4c 2d       	mov	r20, r12
    3a9c:	5d 2d       	mov	r21, r13
    3a9e:	6e 2d       	mov	r22, r14
    3aa0:	7f 2d       	mov	r23, r15
    3aa2:	80 2f       	mov	r24, r16
    3aa4:	91 2f       	mov	r25, r17
    3aa6:	0f 2e       	mov	r0, r31
    3aa8:	fa e0       	ldi	r31, 0x0A	; 10
    3aaa:	af 2e       	mov	r10, r31
    3aac:	f0 2d       	mov	r31, r0
    3aae:	bb 24       	eor	r11, r11
    3ab0:	cc 24       	eor	r12, r12
    3ab2:	dd 24       	eor	r13, r13
    3ab4:	ee 24       	eor	r14, r14
    3ab6:	ff 24       	eor	r15, r15
    3ab8:	00 e0       	ldi	r16, 0x00	; 0
    3aba:	10 e0       	ldi	r17, 0x00	; 0
    3abc:	0e 94 69 07 	call	0xed2	; 0xed2 <__umoddi3>
    3ac0:	a2 2e       	mov	r10, r18
    3ac2:	b3 2e       	mov	r11, r19
    3ac4:	c4 2e       	mov	r12, r20
    3ac6:	d5 2e       	mov	r13, r21
    3ac8:	e6 2e       	mov	r14, r22
    3aca:	f7 2e       	mov	r15, r23
    3acc:	08 2f       	mov	r16, r24
    3ace:	19 2f       	mov	r17, r25
    3ad0:	a9 8a       	std	Y+17, r10	; 0x11
    3ad2:	ba 8a       	std	Y+18, r11	; 0x12
    3ad4:	cb 8a       	std	Y+19, r12	; 0x13
    3ad6:	dc 8a       	std	Y+20, r13	; 0x14
    3ad8:	ed 8a       	std	Y+21, r14	; 0x15
    3ada:	fe 8a       	std	Y+22, r15	; 0x16
    3adc:	0f 8b       	std	Y+23, r16	; 0x17
    3ade:	18 8f       	std	Y+24, r17	; 0x18
    3ae0:	80 e3       	ldi	r24, 0x30	; 48
    3ae2:	e0 96       	adiw	r28, 0x30	; 48
    3ae4:	8f af       	std	Y+63, r24	; 0x3f
    3ae6:	e0 97       	sbiw	r28, 0x30	; 48
    3ae8:	e1 96       	adiw	r28, 0x31	; 49
    3aea:	1f ae       	std	Y+63, r1	; 0x3f
    3aec:	e1 97       	sbiw	r28, 0x31	; 49
    3aee:	e2 96       	adiw	r28, 0x32	; 50
    3af0:	1f ae       	std	Y+63, r1	; 0x3f
    3af2:	e2 97       	sbiw	r28, 0x32	; 50
    3af4:	e3 96       	adiw	r28, 0x33	; 51
    3af6:	1f ae       	std	Y+63, r1	; 0x3f
    3af8:	e3 97       	sbiw	r28, 0x33	; 51
    3afa:	e4 96       	adiw	r28, 0x34	; 52
    3afc:	1f ae       	std	Y+63, r1	; 0x3f
    3afe:	e4 97       	sbiw	r28, 0x34	; 52
    3b00:	e5 96       	adiw	r28, 0x35	; 53
    3b02:	1f ae       	std	Y+63, r1	; 0x3f
    3b04:	e5 97       	sbiw	r28, 0x35	; 53
    3b06:	e6 96       	adiw	r28, 0x36	; 54
    3b08:	1f ae       	std	Y+63, r1	; 0x3f
    3b0a:	e6 97       	sbiw	r28, 0x36	; 54
    3b0c:	e7 96       	adiw	r28, 0x37	; 55
    3b0e:	1f ae       	std	Y+63, r1	; 0x3f
    3b10:	e7 97       	sbiw	r28, 0x37	; 55
    3b12:	99 89       	ldd	r25, Y+17	; 0x11
    3b14:	e0 96       	adiw	r28, 0x30	; 48
    3b16:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b18:	e0 97       	sbiw	r28, 0x30	; 48
    3b1a:	98 0f       	add	r25, r24
    3b1c:	e8 96       	adiw	r28, 0x38	; 56
    3b1e:	9f af       	std	Y+63, r25	; 0x3f
    3b20:	e8 97       	sbiw	r28, 0x38	; 56
    3b22:	91 e0       	ldi	r25, 0x01	; 1
    3b24:	c1 58       	subi	r28, 0x81	; 129
    3b26:	df 4f       	sbci	r29, 0xFF	; 255
    3b28:	98 83       	st	Y, r25
    3b2a:	cf 57       	subi	r28, 0x7F	; 127
    3b2c:	d0 40       	sbci	r29, 0x00	; 0
    3b2e:	e8 96       	adiw	r28, 0x38	; 56
    3b30:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b32:	e8 97       	sbiw	r28, 0x38	; 56
    3b34:	99 89       	ldd	r25, Y+17	; 0x11
    3b36:	89 17       	cp	r24, r25
    3b38:	28 f0       	brcs	.+10     	; 0x3b44 <CLCD_SendNumber+0x888>
    3b3a:	c1 58       	subi	r28, 0x81	; 129
    3b3c:	df 4f       	sbci	r29, 0xFF	; 255
    3b3e:	18 82       	st	Y, r1
    3b40:	cf 57       	subi	r28, 0x7F	; 127
    3b42:	d0 40       	sbci	r29, 0x00	; 0
    3b44:	8a 89       	ldd	r24, Y+18	; 0x12
    3b46:	e1 96       	adiw	r28, 0x31	; 49
    3b48:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b4a:	e1 97       	sbiw	r28, 0x31	; 49
    3b4c:	89 0f       	add	r24, r25
    3b4e:	e9 96       	adiw	r28, 0x39	; 57
    3b50:	8f af       	std	Y+63, r24	; 0x3f
    3b52:	e9 97       	sbiw	r28, 0x39	; 57
    3b54:	81 e0       	ldi	r24, 0x01	; 1
    3b56:	c0 58       	subi	r28, 0x80	; 128
    3b58:	df 4f       	sbci	r29, 0xFF	; 255
    3b5a:	88 83       	st	Y, r24
    3b5c:	c0 58       	subi	r28, 0x80	; 128
    3b5e:	d0 40       	sbci	r29, 0x00	; 0
    3b60:	e9 96       	adiw	r28, 0x39	; 57
    3b62:	9f ad       	ldd	r25, Y+63	; 0x3f
    3b64:	e9 97       	sbiw	r28, 0x39	; 57
    3b66:	8a 89       	ldd	r24, Y+18	; 0x12
    3b68:	98 17       	cp	r25, r24
    3b6a:	28 f0       	brcs	.+10     	; 0x3b76 <CLCD_SendNumber+0x8ba>
    3b6c:	c0 58       	subi	r28, 0x80	; 128
    3b6e:	df 4f       	sbci	r29, 0xFF	; 255
    3b70:	18 82       	st	Y, r1
    3b72:	c0 58       	subi	r28, 0x80	; 128
    3b74:	d0 40       	sbci	r29, 0x00	; 0
    3b76:	c1 58       	subi	r28, 0x81	; 129
    3b78:	df 4f       	sbci	r29, 0xFF	; 255
    3b7a:	98 81       	ld	r25, Y
    3b7c:	cf 57       	subi	r28, 0x7F	; 127
    3b7e:	d0 40       	sbci	r29, 0x00	; 0
    3b80:	e9 96       	adiw	r28, 0x39	; 57
    3b82:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b84:	e9 97       	sbiw	r28, 0x39	; 57
    3b86:	98 0f       	add	r25, r24
    3b88:	cf 57       	subi	r28, 0x7F	; 127
    3b8a:	df 4f       	sbci	r29, 0xFF	; 255
    3b8c:	98 83       	st	Y, r25
    3b8e:	c1 58       	subi	r28, 0x81	; 129
    3b90:	d0 40       	sbci	r29, 0x00	; 0
    3b92:	91 e0       	ldi	r25, 0x01	; 1
    3b94:	ce 57       	subi	r28, 0x7E	; 126
    3b96:	df 4f       	sbci	r29, 0xFF	; 255
    3b98:	98 83       	st	Y, r25
    3b9a:	c2 58       	subi	r28, 0x82	; 130
    3b9c:	d0 40       	sbci	r29, 0x00	; 0
    3b9e:	cf 57       	subi	r28, 0x7F	; 127
    3ba0:	df 4f       	sbci	r29, 0xFF	; 255
    3ba2:	88 81       	ld	r24, Y
    3ba4:	c1 58       	subi	r28, 0x81	; 129
    3ba6:	d0 40       	sbci	r29, 0x00	; 0
    3ba8:	e9 96       	adiw	r28, 0x39	; 57
    3baa:	9f ad       	ldd	r25, Y+63	; 0x3f
    3bac:	e9 97       	sbiw	r28, 0x39	; 57
    3bae:	89 17       	cp	r24, r25
    3bb0:	28 f0       	brcs	.+10     	; 0x3bbc <CLCD_SendNumber+0x900>
    3bb2:	ce 57       	subi	r28, 0x7E	; 126
    3bb4:	df 4f       	sbci	r29, 0xFF	; 255
    3bb6:	18 82       	st	Y, r1
    3bb8:	c2 58       	subi	r28, 0x82	; 130
    3bba:	d0 40       	sbci	r29, 0x00	; 0
    3bbc:	c0 58       	subi	r28, 0x80	; 128
    3bbe:	df 4f       	sbci	r29, 0xFF	; 255
    3bc0:	88 81       	ld	r24, Y
    3bc2:	c0 58       	subi	r28, 0x80	; 128
    3bc4:	d0 40       	sbci	r29, 0x00	; 0
    3bc6:	ce 57       	subi	r28, 0x7E	; 126
    3bc8:	df 4f       	sbci	r29, 0xFF	; 255
    3bca:	98 81       	ld	r25, Y
    3bcc:	c2 58       	subi	r28, 0x82	; 130
    3bce:	d0 40       	sbci	r29, 0x00	; 0
    3bd0:	89 2b       	or	r24, r25
    3bd2:	c0 58       	subi	r28, 0x80	; 128
    3bd4:	df 4f       	sbci	r29, 0xFF	; 255
    3bd6:	88 83       	st	Y, r24
    3bd8:	c0 58       	subi	r28, 0x80	; 128
    3bda:	d0 40       	sbci	r29, 0x00	; 0
    3bdc:	cf 57       	subi	r28, 0x7F	; 127
    3bde:	df 4f       	sbci	r29, 0xFF	; 255
    3be0:	88 81       	ld	r24, Y
    3be2:	c1 58       	subi	r28, 0x81	; 129
    3be4:	d0 40       	sbci	r29, 0x00	; 0
    3be6:	e9 96       	adiw	r28, 0x39	; 57
    3be8:	8f af       	std	Y+63, r24	; 0x3f
    3bea:	e9 97       	sbiw	r28, 0x39	; 57
    3bec:	9b 89       	ldd	r25, Y+19	; 0x13
    3bee:	e2 96       	adiw	r28, 0x32	; 50
    3bf0:	8f ad       	ldd	r24, Y+63	; 0x3f
    3bf2:	e2 97       	sbiw	r28, 0x32	; 50
    3bf4:	98 0f       	add	r25, r24
    3bf6:	ea 96       	adiw	r28, 0x3a	; 58
    3bf8:	9f af       	std	Y+63, r25	; 0x3f
    3bfa:	ea 97       	sbiw	r28, 0x3a	; 58
    3bfc:	91 e0       	ldi	r25, 0x01	; 1
    3bfe:	cd 57       	subi	r28, 0x7D	; 125
    3c00:	df 4f       	sbci	r29, 0xFF	; 255
    3c02:	98 83       	st	Y, r25
    3c04:	c3 58       	subi	r28, 0x83	; 131
    3c06:	d0 40       	sbci	r29, 0x00	; 0
    3c08:	ea 96       	adiw	r28, 0x3a	; 58
    3c0a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c0c:	ea 97       	sbiw	r28, 0x3a	; 58
    3c0e:	9b 89       	ldd	r25, Y+19	; 0x13
    3c10:	89 17       	cp	r24, r25
    3c12:	28 f0       	brcs	.+10     	; 0x3c1e <CLCD_SendNumber+0x962>
    3c14:	cd 57       	subi	r28, 0x7D	; 125
    3c16:	df 4f       	sbci	r29, 0xFF	; 255
    3c18:	18 82       	st	Y, r1
    3c1a:	c3 58       	subi	r28, 0x83	; 131
    3c1c:	d0 40       	sbci	r29, 0x00	; 0
    3c1e:	c0 58       	subi	r28, 0x80	; 128
    3c20:	df 4f       	sbci	r29, 0xFF	; 255
    3c22:	88 81       	ld	r24, Y
    3c24:	c0 58       	subi	r28, 0x80	; 128
    3c26:	d0 40       	sbci	r29, 0x00	; 0
    3c28:	ea 96       	adiw	r28, 0x3a	; 58
    3c2a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c2c:	ea 97       	sbiw	r28, 0x3a	; 58
    3c2e:	89 0f       	add	r24, r25
    3c30:	cc 57       	subi	r28, 0x7C	; 124
    3c32:	df 4f       	sbci	r29, 0xFF	; 255
    3c34:	88 83       	st	Y, r24
    3c36:	c4 58       	subi	r28, 0x84	; 132
    3c38:	d0 40       	sbci	r29, 0x00	; 0
    3c3a:	81 e0       	ldi	r24, 0x01	; 1
    3c3c:	cb 57       	subi	r28, 0x7B	; 123
    3c3e:	df 4f       	sbci	r29, 0xFF	; 255
    3c40:	88 83       	st	Y, r24
    3c42:	c5 58       	subi	r28, 0x85	; 133
    3c44:	d0 40       	sbci	r29, 0x00	; 0
    3c46:	cc 57       	subi	r28, 0x7C	; 124
    3c48:	df 4f       	sbci	r29, 0xFF	; 255
    3c4a:	98 81       	ld	r25, Y
    3c4c:	c4 58       	subi	r28, 0x84	; 132
    3c4e:	d0 40       	sbci	r29, 0x00	; 0
    3c50:	ea 96       	adiw	r28, 0x3a	; 58
    3c52:	8f ad       	ldd	r24, Y+63	; 0x3f
    3c54:	ea 97       	sbiw	r28, 0x3a	; 58
    3c56:	98 17       	cp	r25, r24
    3c58:	28 f0       	brcs	.+10     	; 0x3c64 <CLCD_SendNumber+0x9a8>
    3c5a:	cb 57       	subi	r28, 0x7B	; 123
    3c5c:	df 4f       	sbci	r29, 0xFF	; 255
    3c5e:	18 82       	st	Y, r1
    3c60:	c5 58       	subi	r28, 0x85	; 133
    3c62:	d0 40       	sbci	r29, 0x00	; 0
    3c64:	cd 57       	subi	r28, 0x7D	; 125
    3c66:	df 4f       	sbci	r29, 0xFF	; 255
    3c68:	98 81       	ld	r25, Y
    3c6a:	c3 58       	subi	r28, 0x83	; 131
    3c6c:	d0 40       	sbci	r29, 0x00	; 0
    3c6e:	cb 57       	subi	r28, 0x7B	; 123
    3c70:	df 4f       	sbci	r29, 0xFF	; 255
    3c72:	88 81       	ld	r24, Y
    3c74:	c5 58       	subi	r28, 0x85	; 133
    3c76:	d0 40       	sbci	r29, 0x00	; 0
    3c78:	98 2b       	or	r25, r24
    3c7a:	cd 57       	subi	r28, 0x7D	; 125
    3c7c:	df 4f       	sbci	r29, 0xFF	; 255
    3c7e:	98 83       	st	Y, r25
    3c80:	c3 58       	subi	r28, 0x83	; 131
    3c82:	d0 40       	sbci	r29, 0x00	; 0
    3c84:	cc 57       	subi	r28, 0x7C	; 124
    3c86:	df 4f       	sbci	r29, 0xFF	; 255
    3c88:	98 81       	ld	r25, Y
    3c8a:	c4 58       	subi	r28, 0x84	; 132
    3c8c:	d0 40       	sbci	r29, 0x00	; 0
    3c8e:	ea 96       	adiw	r28, 0x3a	; 58
    3c90:	9f af       	std	Y+63, r25	; 0x3f
    3c92:	ea 97       	sbiw	r28, 0x3a	; 58
    3c94:	8c 89       	ldd	r24, Y+20	; 0x14
    3c96:	e3 96       	adiw	r28, 0x33	; 51
    3c98:	9f ad       	ldd	r25, Y+63	; 0x3f
    3c9a:	e3 97       	sbiw	r28, 0x33	; 51
    3c9c:	89 0f       	add	r24, r25
    3c9e:	eb 96       	adiw	r28, 0x3b	; 59
    3ca0:	8f af       	std	Y+63, r24	; 0x3f
    3ca2:	eb 97       	sbiw	r28, 0x3b	; 59
    3ca4:	81 e0       	ldi	r24, 0x01	; 1
    3ca6:	ca 57       	subi	r28, 0x7A	; 122
    3ca8:	df 4f       	sbci	r29, 0xFF	; 255
    3caa:	88 83       	st	Y, r24
    3cac:	c6 58       	subi	r28, 0x86	; 134
    3cae:	d0 40       	sbci	r29, 0x00	; 0
    3cb0:	eb 96       	adiw	r28, 0x3b	; 59
    3cb2:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cb4:	eb 97       	sbiw	r28, 0x3b	; 59
    3cb6:	8c 89       	ldd	r24, Y+20	; 0x14
    3cb8:	98 17       	cp	r25, r24
    3cba:	28 f0       	brcs	.+10     	; 0x3cc6 <CLCD_SendNumber+0xa0a>
    3cbc:	ca 57       	subi	r28, 0x7A	; 122
    3cbe:	df 4f       	sbci	r29, 0xFF	; 255
    3cc0:	18 82       	st	Y, r1
    3cc2:	c6 58       	subi	r28, 0x86	; 134
    3cc4:	d0 40       	sbci	r29, 0x00	; 0
    3cc6:	cd 57       	subi	r28, 0x7D	; 125
    3cc8:	df 4f       	sbci	r29, 0xFF	; 255
    3cca:	98 81       	ld	r25, Y
    3ccc:	c3 58       	subi	r28, 0x83	; 131
    3cce:	d0 40       	sbci	r29, 0x00	; 0
    3cd0:	eb 96       	adiw	r28, 0x3b	; 59
    3cd2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3cd4:	eb 97       	sbiw	r28, 0x3b	; 59
    3cd6:	98 0f       	add	r25, r24
    3cd8:	c9 57       	subi	r28, 0x79	; 121
    3cda:	df 4f       	sbci	r29, 0xFF	; 255
    3cdc:	98 83       	st	Y, r25
    3cde:	c7 58       	subi	r28, 0x87	; 135
    3ce0:	d0 40       	sbci	r29, 0x00	; 0
    3ce2:	91 e0       	ldi	r25, 0x01	; 1
    3ce4:	c8 57       	subi	r28, 0x78	; 120
    3ce6:	df 4f       	sbci	r29, 0xFF	; 255
    3ce8:	98 83       	st	Y, r25
    3cea:	c8 58       	subi	r28, 0x88	; 136
    3cec:	d0 40       	sbci	r29, 0x00	; 0
    3cee:	c9 57       	subi	r28, 0x79	; 121
    3cf0:	df 4f       	sbci	r29, 0xFF	; 255
    3cf2:	88 81       	ld	r24, Y
    3cf4:	c7 58       	subi	r28, 0x87	; 135
    3cf6:	d0 40       	sbci	r29, 0x00	; 0
    3cf8:	eb 96       	adiw	r28, 0x3b	; 59
    3cfa:	9f ad       	ldd	r25, Y+63	; 0x3f
    3cfc:	eb 97       	sbiw	r28, 0x3b	; 59
    3cfe:	89 17       	cp	r24, r25
    3d00:	28 f0       	brcs	.+10     	; 0x3d0c <CLCD_SendNumber+0xa50>
    3d02:	c8 57       	subi	r28, 0x78	; 120
    3d04:	df 4f       	sbci	r29, 0xFF	; 255
    3d06:	18 82       	st	Y, r1
    3d08:	c8 58       	subi	r28, 0x88	; 136
    3d0a:	d0 40       	sbci	r29, 0x00	; 0
    3d0c:	ca 57       	subi	r28, 0x7A	; 122
    3d0e:	df 4f       	sbci	r29, 0xFF	; 255
    3d10:	88 81       	ld	r24, Y
    3d12:	c6 58       	subi	r28, 0x86	; 134
    3d14:	d0 40       	sbci	r29, 0x00	; 0
    3d16:	c8 57       	subi	r28, 0x78	; 120
    3d18:	df 4f       	sbci	r29, 0xFF	; 255
    3d1a:	98 81       	ld	r25, Y
    3d1c:	c8 58       	subi	r28, 0x88	; 136
    3d1e:	d0 40       	sbci	r29, 0x00	; 0
    3d20:	89 2b       	or	r24, r25
    3d22:	ca 57       	subi	r28, 0x7A	; 122
    3d24:	df 4f       	sbci	r29, 0xFF	; 255
    3d26:	88 83       	st	Y, r24
    3d28:	c6 58       	subi	r28, 0x86	; 134
    3d2a:	d0 40       	sbci	r29, 0x00	; 0
    3d2c:	c9 57       	subi	r28, 0x79	; 121
    3d2e:	df 4f       	sbci	r29, 0xFF	; 255
    3d30:	88 81       	ld	r24, Y
    3d32:	c7 58       	subi	r28, 0x87	; 135
    3d34:	d0 40       	sbci	r29, 0x00	; 0
    3d36:	eb 96       	adiw	r28, 0x3b	; 59
    3d38:	8f af       	std	Y+63, r24	; 0x3f
    3d3a:	eb 97       	sbiw	r28, 0x3b	; 59
    3d3c:	9d 89       	ldd	r25, Y+21	; 0x15
    3d3e:	e4 96       	adiw	r28, 0x34	; 52
    3d40:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d42:	e4 97       	sbiw	r28, 0x34	; 52
    3d44:	98 0f       	add	r25, r24
    3d46:	ec 96       	adiw	r28, 0x3c	; 60
    3d48:	9f af       	std	Y+63, r25	; 0x3f
    3d4a:	ec 97       	sbiw	r28, 0x3c	; 60
    3d4c:	91 e0       	ldi	r25, 0x01	; 1
    3d4e:	c7 57       	subi	r28, 0x77	; 119
    3d50:	df 4f       	sbci	r29, 0xFF	; 255
    3d52:	98 83       	st	Y, r25
    3d54:	c9 58       	subi	r28, 0x89	; 137
    3d56:	d0 40       	sbci	r29, 0x00	; 0
    3d58:	ec 96       	adiw	r28, 0x3c	; 60
    3d5a:	8f ad       	ldd	r24, Y+63	; 0x3f
    3d5c:	ec 97       	sbiw	r28, 0x3c	; 60
    3d5e:	9d 89       	ldd	r25, Y+21	; 0x15
    3d60:	89 17       	cp	r24, r25
    3d62:	28 f0       	brcs	.+10     	; 0x3d6e <CLCD_SendNumber+0xab2>
    3d64:	c7 57       	subi	r28, 0x77	; 119
    3d66:	df 4f       	sbci	r29, 0xFF	; 255
    3d68:	18 82       	st	Y, r1
    3d6a:	c9 58       	subi	r28, 0x89	; 137
    3d6c:	d0 40       	sbci	r29, 0x00	; 0
    3d6e:	ca 57       	subi	r28, 0x7A	; 122
    3d70:	df 4f       	sbci	r29, 0xFF	; 255
    3d72:	88 81       	ld	r24, Y
    3d74:	c6 58       	subi	r28, 0x86	; 134
    3d76:	d0 40       	sbci	r29, 0x00	; 0
    3d78:	ec 96       	adiw	r28, 0x3c	; 60
    3d7a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3d7c:	ec 97       	sbiw	r28, 0x3c	; 60
    3d7e:	89 0f       	add	r24, r25
    3d80:	c6 57       	subi	r28, 0x76	; 118
    3d82:	df 4f       	sbci	r29, 0xFF	; 255
    3d84:	88 83       	st	Y, r24
    3d86:	ca 58       	subi	r28, 0x8A	; 138
    3d88:	d0 40       	sbci	r29, 0x00	; 0
    3d8a:	81 e0       	ldi	r24, 0x01	; 1
    3d8c:	c5 57       	subi	r28, 0x75	; 117
    3d8e:	df 4f       	sbci	r29, 0xFF	; 255
    3d90:	88 83       	st	Y, r24
    3d92:	cb 58       	subi	r28, 0x8B	; 139
    3d94:	d0 40       	sbci	r29, 0x00	; 0
    3d96:	c6 57       	subi	r28, 0x76	; 118
    3d98:	df 4f       	sbci	r29, 0xFF	; 255
    3d9a:	98 81       	ld	r25, Y
    3d9c:	ca 58       	subi	r28, 0x8A	; 138
    3d9e:	d0 40       	sbci	r29, 0x00	; 0
    3da0:	ec 96       	adiw	r28, 0x3c	; 60
    3da2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3da4:	ec 97       	sbiw	r28, 0x3c	; 60
    3da6:	98 17       	cp	r25, r24
    3da8:	28 f0       	brcs	.+10     	; 0x3db4 <CLCD_SendNumber+0xaf8>
    3daa:	c5 57       	subi	r28, 0x75	; 117
    3dac:	df 4f       	sbci	r29, 0xFF	; 255
    3dae:	18 82       	st	Y, r1
    3db0:	cb 58       	subi	r28, 0x8B	; 139
    3db2:	d0 40       	sbci	r29, 0x00	; 0
    3db4:	c7 57       	subi	r28, 0x77	; 119
    3db6:	df 4f       	sbci	r29, 0xFF	; 255
    3db8:	98 81       	ld	r25, Y
    3dba:	c9 58       	subi	r28, 0x89	; 137
    3dbc:	d0 40       	sbci	r29, 0x00	; 0
    3dbe:	c5 57       	subi	r28, 0x75	; 117
    3dc0:	df 4f       	sbci	r29, 0xFF	; 255
    3dc2:	88 81       	ld	r24, Y
    3dc4:	cb 58       	subi	r28, 0x8B	; 139
    3dc6:	d0 40       	sbci	r29, 0x00	; 0
    3dc8:	98 2b       	or	r25, r24
    3dca:	c7 57       	subi	r28, 0x77	; 119
    3dcc:	df 4f       	sbci	r29, 0xFF	; 255
    3dce:	98 83       	st	Y, r25
    3dd0:	c9 58       	subi	r28, 0x89	; 137
    3dd2:	d0 40       	sbci	r29, 0x00	; 0
    3dd4:	c6 57       	subi	r28, 0x76	; 118
    3dd6:	df 4f       	sbci	r29, 0xFF	; 255
    3dd8:	98 81       	ld	r25, Y
    3dda:	ca 58       	subi	r28, 0x8A	; 138
    3ddc:	d0 40       	sbci	r29, 0x00	; 0
    3dde:	ec 96       	adiw	r28, 0x3c	; 60
    3de0:	9f af       	std	Y+63, r25	; 0x3f
    3de2:	ec 97       	sbiw	r28, 0x3c	; 60
    3de4:	8e 89       	ldd	r24, Y+22	; 0x16
    3de6:	e5 96       	adiw	r28, 0x35	; 53
    3de8:	9f ad       	ldd	r25, Y+63	; 0x3f
    3dea:	e5 97       	sbiw	r28, 0x35	; 53
    3dec:	89 0f       	add	r24, r25
    3dee:	ed 96       	adiw	r28, 0x3d	; 61
    3df0:	8f af       	std	Y+63, r24	; 0x3f
    3df2:	ed 97       	sbiw	r28, 0x3d	; 61
    3df4:	81 e0       	ldi	r24, 0x01	; 1
    3df6:	c4 57       	subi	r28, 0x74	; 116
    3df8:	df 4f       	sbci	r29, 0xFF	; 255
    3dfa:	88 83       	st	Y, r24
    3dfc:	cc 58       	subi	r28, 0x8C	; 140
    3dfe:	d0 40       	sbci	r29, 0x00	; 0
    3e00:	ed 96       	adiw	r28, 0x3d	; 61
    3e02:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e04:	ed 97       	sbiw	r28, 0x3d	; 61
    3e06:	8e 89       	ldd	r24, Y+22	; 0x16
    3e08:	98 17       	cp	r25, r24
    3e0a:	28 f0       	brcs	.+10     	; 0x3e16 <CLCD_SendNumber+0xb5a>
    3e0c:	c4 57       	subi	r28, 0x74	; 116
    3e0e:	df 4f       	sbci	r29, 0xFF	; 255
    3e10:	18 82       	st	Y, r1
    3e12:	cc 58       	subi	r28, 0x8C	; 140
    3e14:	d0 40       	sbci	r29, 0x00	; 0
    3e16:	c7 57       	subi	r28, 0x77	; 119
    3e18:	df 4f       	sbci	r29, 0xFF	; 255
    3e1a:	98 81       	ld	r25, Y
    3e1c:	c9 58       	subi	r28, 0x89	; 137
    3e1e:	d0 40       	sbci	r29, 0x00	; 0
    3e20:	ed 96       	adiw	r28, 0x3d	; 61
    3e22:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e24:	ed 97       	sbiw	r28, 0x3d	; 61
    3e26:	98 0f       	add	r25, r24
    3e28:	c3 57       	subi	r28, 0x73	; 115
    3e2a:	df 4f       	sbci	r29, 0xFF	; 255
    3e2c:	98 83       	st	Y, r25
    3e2e:	cd 58       	subi	r28, 0x8D	; 141
    3e30:	d0 40       	sbci	r29, 0x00	; 0
    3e32:	91 e0       	ldi	r25, 0x01	; 1
    3e34:	c2 57       	subi	r28, 0x72	; 114
    3e36:	df 4f       	sbci	r29, 0xFF	; 255
    3e38:	98 83       	st	Y, r25
    3e3a:	ce 58       	subi	r28, 0x8E	; 142
    3e3c:	d0 40       	sbci	r29, 0x00	; 0
    3e3e:	c3 57       	subi	r28, 0x73	; 115
    3e40:	df 4f       	sbci	r29, 0xFF	; 255
    3e42:	88 81       	ld	r24, Y
    3e44:	cd 58       	subi	r28, 0x8D	; 141
    3e46:	d0 40       	sbci	r29, 0x00	; 0
    3e48:	ed 96       	adiw	r28, 0x3d	; 61
    3e4a:	9f ad       	ldd	r25, Y+63	; 0x3f
    3e4c:	ed 97       	sbiw	r28, 0x3d	; 61
    3e4e:	89 17       	cp	r24, r25
    3e50:	28 f0       	brcs	.+10     	; 0x3e5c <CLCD_SendNumber+0xba0>
    3e52:	c2 57       	subi	r28, 0x72	; 114
    3e54:	df 4f       	sbci	r29, 0xFF	; 255
    3e56:	18 82       	st	Y, r1
    3e58:	ce 58       	subi	r28, 0x8E	; 142
    3e5a:	d0 40       	sbci	r29, 0x00	; 0
    3e5c:	c4 57       	subi	r28, 0x74	; 116
    3e5e:	df 4f       	sbci	r29, 0xFF	; 255
    3e60:	88 81       	ld	r24, Y
    3e62:	cc 58       	subi	r28, 0x8C	; 140
    3e64:	d0 40       	sbci	r29, 0x00	; 0
    3e66:	c2 57       	subi	r28, 0x72	; 114
    3e68:	df 4f       	sbci	r29, 0xFF	; 255
    3e6a:	98 81       	ld	r25, Y
    3e6c:	ce 58       	subi	r28, 0x8E	; 142
    3e6e:	d0 40       	sbci	r29, 0x00	; 0
    3e70:	89 2b       	or	r24, r25
    3e72:	c4 57       	subi	r28, 0x74	; 116
    3e74:	df 4f       	sbci	r29, 0xFF	; 255
    3e76:	88 83       	st	Y, r24
    3e78:	cc 58       	subi	r28, 0x8C	; 140
    3e7a:	d0 40       	sbci	r29, 0x00	; 0
    3e7c:	c3 57       	subi	r28, 0x73	; 115
    3e7e:	df 4f       	sbci	r29, 0xFF	; 255
    3e80:	88 81       	ld	r24, Y
    3e82:	cd 58       	subi	r28, 0x8D	; 141
    3e84:	d0 40       	sbci	r29, 0x00	; 0
    3e86:	ed 96       	adiw	r28, 0x3d	; 61
    3e88:	8f af       	std	Y+63, r24	; 0x3f
    3e8a:	ed 97       	sbiw	r28, 0x3d	; 61
    3e8c:	9f 89       	ldd	r25, Y+23	; 0x17
    3e8e:	e6 96       	adiw	r28, 0x36	; 54
    3e90:	8f ad       	ldd	r24, Y+63	; 0x3f
    3e92:	e6 97       	sbiw	r28, 0x36	; 54
    3e94:	98 0f       	add	r25, r24
    3e96:	ee 96       	adiw	r28, 0x3e	; 62
    3e98:	9f af       	std	Y+63, r25	; 0x3f
    3e9a:	ee 97       	sbiw	r28, 0x3e	; 62
    3e9c:	91 e0       	ldi	r25, 0x01	; 1
    3e9e:	c1 57       	subi	r28, 0x71	; 113
    3ea0:	df 4f       	sbci	r29, 0xFF	; 255
    3ea2:	98 83       	st	Y, r25
    3ea4:	cf 58       	subi	r28, 0x8F	; 143
    3ea6:	d0 40       	sbci	r29, 0x00	; 0
    3ea8:	ee 96       	adiw	r28, 0x3e	; 62
    3eaa:	8f ad       	ldd	r24, Y+63	; 0x3f
    3eac:	ee 97       	sbiw	r28, 0x3e	; 62
    3eae:	9f 89       	ldd	r25, Y+23	; 0x17
    3eb0:	89 17       	cp	r24, r25
    3eb2:	28 f0       	brcs	.+10     	; 0x3ebe <CLCD_SendNumber+0xc02>
    3eb4:	c1 57       	subi	r28, 0x71	; 113
    3eb6:	df 4f       	sbci	r29, 0xFF	; 255
    3eb8:	18 82       	st	Y, r1
    3eba:	cf 58       	subi	r28, 0x8F	; 143
    3ebc:	d0 40       	sbci	r29, 0x00	; 0
    3ebe:	c4 57       	subi	r28, 0x74	; 116
    3ec0:	df 4f       	sbci	r29, 0xFF	; 255
    3ec2:	88 81       	ld	r24, Y
    3ec4:	cc 58       	subi	r28, 0x8C	; 140
    3ec6:	d0 40       	sbci	r29, 0x00	; 0
    3ec8:	ee 96       	adiw	r28, 0x3e	; 62
    3eca:	9f ad       	ldd	r25, Y+63	; 0x3f
    3ecc:	ee 97       	sbiw	r28, 0x3e	; 62
    3ece:	89 0f       	add	r24, r25
    3ed0:	c0 57       	subi	r28, 0x70	; 112
    3ed2:	df 4f       	sbci	r29, 0xFF	; 255
    3ed4:	88 83       	st	Y, r24
    3ed6:	c0 59       	subi	r28, 0x90	; 144
    3ed8:	d0 40       	sbci	r29, 0x00	; 0
    3eda:	81 e0       	ldi	r24, 0x01	; 1
    3edc:	cf 56       	subi	r28, 0x6F	; 111
    3ede:	df 4f       	sbci	r29, 0xFF	; 255
    3ee0:	88 83       	st	Y, r24
    3ee2:	c1 59       	subi	r28, 0x91	; 145
    3ee4:	d0 40       	sbci	r29, 0x00	; 0
    3ee6:	c0 57       	subi	r28, 0x70	; 112
    3ee8:	df 4f       	sbci	r29, 0xFF	; 255
    3eea:	98 81       	ld	r25, Y
    3eec:	c0 59       	subi	r28, 0x90	; 144
    3eee:	d0 40       	sbci	r29, 0x00	; 0
    3ef0:	ee 96       	adiw	r28, 0x3e	; 62
    3ef2:	8f ad       	ldd	r24, Y+63	; 0x3f
    3ef4:	ee 97       	sbiw	r28, 0x3e	; 62
    3ef6:	98 17       	cp	r25, r24
    3ef8:	28 f0       	brcs	.+10     	; 0x3f04 <CLCD_SendNumber+0xc48>
    3efa:	cf 56       	subi	r28, 0x6F	; 111
    3efc:	df 4f       	sbci	r29, 0xFF	; 255
    3efe:	18 82       	st	Y, r1
    3f00:	c1 59       	subi	r28, 0x91	; 145
    3f02:	d0 40       	sbci	r29, 0x00	; 0
    3f04:	c1 57       	subi	r28, 0x71	; 113
    3f06:	df 4f       	sbci	r29, 0xFF	; 255
    3f08:	98 81       	ld	r25, Y
    3f0a:	cf 58       	subi	r28, 0x8F	; 143
    3f0c:	d0 40       	sbci	r29, 0x00	; 0
    3f0e:	cf 56       	subi	r28, 0x6F	; 111
    3f10:	df 4f       	sbci	r29, 0xFF	; 255
    3f12:	88 81       	ld	r24, Y
    3f14:	c1 59       	subi	r28, 0x91	; 145
    3f16:	d0 40       	sbci	r29, 0x00	; 0
    3f18:	98 2b       	or	r25, r24
    3f1a:	c1 57       	subi	r28, 0x71	; 113
    3f1c:	df 4f       	sbci	r29, 0xFF	; 255
    3f1e:	98 83       	st	Y, r25
    3f20:	cf 58       	subi	r28, 0x8F	; 143
    3f22:	d0 40       	sbci	r29, 0x00	; 0
    3f24:	c0 57       	subi	r28, 0x70	; 112
    3f26:	df 4f       	sbci	r29, 0xFF	; 255
    3f28:	98 81       	ld	r25, Y
    3f2a:	c0 59       	subi	r28, 0x90	; 144
    3f2c:	d0 40       	sbci	r29, 0x00	; 0
    3f2e:	ee 96       	adiw	r28, 0x3e	; 62
    3f30:	9f af       	std	Y+63, r25	; 0x3f
    3f32:	ee 97       	sbiw	r28, 0x3e	; 62
    3f34:	88 8d       	ldd	r24, Y+24	; 0x18
    3f36:	e7 96       	adiw	r28, 0x37	; 55
    3f38:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f3a:	e7 97       	sbiw	r28, 0x37	; 55
    3f3c:	89 0f       	add	r24, r25
    3f3e:	ef 96       	adiw	r28, 0x3f	; 63
    3f40:	8f af       	std	Y+63, r24	; 0x3f
    3f42:	ef 97       	sbiw	r28, 0x3f	; 63
    3f44:	c1 57       	subi	r28, 0x71	; 113
    3f46:	df 4f       	sbci	r29, 0xFF	; 255
    3f48:	88 81       	ld	r24, Y
    3f4a:	cf 58       	subi	r28, 0x8F	; 143
    3f4c:	d0 40       	sbci	r29, 0x00	; 0
    3f4e:	ef 96       	adiw	r28, 0x3f	; 63
    3f50:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f52:	ef 97       	sbiw	r28, 0x3f	; 63
    3f54:	89 0f       	add	r24, r25
    3f56:	ef 96       	adiw	r28, 0x3f	; 63
    3f58:	8f af       	std	Y+63, r24	; 0x3f
    3f5a:	ef 97       	sbiw	r28, 0x3f	; 63
    3f5c:	e8 96       	adiw	r28, 0x38	; 56
    3f5e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f60:	e8 97       	sbiw	r28, 0x38	; 56
    3f62:	89 83       	std	Y+1, r24	; 0x01
    3f64:	e9 96       	adiw	r28, 0x39	; 57
    3f66:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f68:	e9 97       	sbiw	r28, 0x39	; 57
    3f6a:	9a 83       	std	Y+2, r25	; 0x02
    3f6c:	ea 96       	adiw	r28, 0x3a	; 58
    3f6e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f70:	ea 97       	sbiw	r28, 0x3a	; 58
    3f72:	8b 83       	std	Y+3, r24	; 0x03
    3f74:	eb 96       	adiw	r28, 0x3b	; 59
    3f76:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f78:	eb 97       	sbiw	r28, 0x3b	; 59
    3f7a:	9c 83       	std	Y+4, r25	; 0x04
    3f7c:	ec 96       	adiw	r28, 0x3c	; 60
    3f7e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f80:	ec 97       	sbiw	r28, 0x3c	; 60
    3f82:	8d 83       	std	Y+5, r24	; 0x05
    3f84:	ed 96       	adiw	r28, 0x3d	; 61
    3f86:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f88:	ed 97       	sbiw	r28, 0x3d	; 61
    3f8a:	9e 83       	std	Y+6, r25	; 0x06
    3f8c:	ee 96       	adiw	r28, 0x3e	; 62
    3f8e:	8f ad       	ldd	r24, Y+63	; 0x3f
    3f90:	ee 97       	sbiw	r28, 0x3e	; 62
    3f92:	8f 83       	std	Y+7, r24	; 0x07
    3f94:	ef 96       	adiw	r28, 0x3f	; 63
    3f96:	9f ad       	ldd	r25, Y+63	; 0x3f
    3f98:	ef 97       	sbiw	r28, 0x3f	; 63
    3f9a:	98 87       	std	Y+8, r25	; 0x08
			LOC_u64Reversed/=10;
    3f9c:	a9 80       	ldd	r10, Y+1	; 0x01
    3f9e:	ba 80       	ldd	r11, Y+2	; 0x02
    3fa0:	cb 80       	ldd	r12, Y+3	; 0x03
    3fa2:	dc 80       	ldd	r13, Y+4	; 0x04
    3fa4:	ed 80       	ldd	r14, Y+5	; 0x05
    3fa6:	fe 80       	ldd	r15, Y+6	; 0x06
    3fa8:	0f 81       	ldd	r16, Y+7	; 0x07
    3faa:	18 85       	ldd	r17, Y+8	; 0x08
    3fac:	2a 2d       	mov	r18, r10
    3fae:	3b 2d       	mov	r19, r11
    3fb0:	4c 2d       	mov	r20, r12
    3fb2:	5d 2d       	mov	r21, r13
    3fb4:	6e 2d       	mov	r22, r14
    3fb6:	7f 2d       	mov	r23, r15
    3fb8:	80 2f       	mov	r24, r16
    3fba:	91 2f       	mov	r25, r17
    3fbc:	0f 2e       	mov	r0, r31
    3fbe:	fa e0       	ldi	r31, 0x0A	; 10
    3fc0:	af 2e       	mov	r10, r31
    3fc2:	f0 2d       	mov	r31, r0
    3fc4:	bb 24       	eor	r11, r11
    3fc6:	cc 24       	eor	r12, r12
    3fc8:	dd 24       	eor	r13, r13
    3fca:	ee 24       	eor	r14, r14
    3fcc:	ff 24       	eor	r15, r15
    3fce:	00 e0       	ldi	r16, 0x00	; 0
    3fd0:	10 e0       	ldi	r17, 0x00	; 0
    3fd2:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <__udivdi3>
    3fd6:	a2 2e       	mov	r10, r18
    3fd8:	b3 2e       	mov	r11, r19
    3fda:	c4 2e       	mov	r12, r20
    3fdc:	d5 2e       	mov	r13, r21
    3fde:	e6 2e       	mov	r14, r22
    3fe0:	f7 2e       	mov	r15, r23
    3fe2:	08 2f       	mov	r16, r24
    3fe4:	19 2f       	mov	r17, r25
    3fe6:	a9 82       	std	Y+1, r10	; 0x01
    3fe8:	ba 82       	std	Y+2, r11	; 0x02
    3fea:	cb 82       	std	Y+3, r12	; 0x03
    3fec:	dc 82       	std	Y+4, r13	; 0x04
    3fee:	ed 82       	std	Y+5, r14	; 0x05
    3ff0:	fe 82       	std	Y+6, r15	; 0x06
    3ff2:	0f 83       	std	Y+7, r16	; 0x07
    3ff4:	18 87       	std	Y+8, r17	; 0x08
		while(COPY_u64Number != 0)
		{
			LOC_u64Reversed = ( LOC_u64Reversed*10 ) + ( COPY_u64Number%10 );
			COPY_u64Number/=10;
		}
		while(LOC_u64Reversed != 1)
    3ff6:	89 81       	ldd	r24, Y+1	; 0x01
    3ff8:	81 30       	cpi	r24, 0x01	; 1
    3ffa:	09 f0       	breq	.+2      	; 0x3ffe <CLCD_SendNumber+0xd42>
    3ffc:	44 cd       	rjmp	.-1400   	; 0x3a86 <CLCD_SendNumber+0x7ca>
    3ffe:	8a 81       	ldd	r24, Y+2	; 0x02
    4000:	88 23       	and	r24, r24
    4002:	09 f0       	breq	.+2      	; 0x4006 <CLCD_SendNumber+0xd4a>
    4004:	40 cd       	rjmp	.-1408   	; 0x3a86 <CLCD_SendNumber+0x7ca>
    4006:	8b 81       	ldd	r24, Y+3	; 0x03
    4008:	88 23       	and	r24, r24
    400a:	09 f0       	breq	.+2      	; 0x400e <CLCD_SendNumber+0xd52>
    400c:	3c cd       	rjmp	.-1416   	; 0x3a86 <CLCD_SendNumber+0x7ca>
    400e:	8c 81       	ldd	r24, Y+4	; 0x04
    4010:	88 23       	and	r24, r24
    4012:	09 f0       	breq	.+2      	; 0x4016 <CLCD_SendNumber+0xd5a>
    4014:	38 cd       	rjmp	.-1424   	; 0x3a86 <CLCD_SendNumber+0x7ca>
    4016:	8d 81       	ldd	r24, Y+5	; 0x05
    4018:	88 23       	and	r24, r24
    401a:	09 f0       	breq	.+2      	; 0x401e <CLCD_SendNumber+0xd62>
    401c:	34 cd       	rjmp	.-1432   	; 0x3a86 <CLCD_SendNumber+0x7ca>
    401e:	8e 81       	ldd	r24, Y+6	; 0x06
    4020:	88 23       	and	r24, r24
    4022:	09 f0       	breq	.+2      	; 0x4026 <CLCD_SendNumber+0xd6a>
    4024:	30 cd       	rjmp	.-1440   	; 0x3a86 <CLCD_SendNumber+0x7ca>
    4026:	8f 81       	ldd	r24, Y+7	; 0x07
    4028:	88 23       	and	r24, r24
    402a:	09 f0       	breq	.+2      	; 0x402e <CLCD_SendNumber+0xd72>
    402c:	2c cd       	rjmp	.-1448   	; 0x3a86 <CLCD_SendNumber+0x7ca>
    402e:	88 85       	ldd	r24, Y+8	; 0x08
    4030:	88 23       	and	r24, r24
    4032:	09 f0       	breq	.+2      	; 0x4036 <CLCD_SendNumber+0xd7a>
    4034:	28 cd       	rjmp	.-1456   	; 0x3a86 <CLCD_SendNumber+0x7ca>
		{
			LOC_u64Reversed = ( LOC_u64Reversed%10 ) + 48;
			LOC_u64Reversed/=10;
		}
	}
}
    4036:	cf 56       	subi	r28, 0x6F	; 111
    4038:	df 4f       	sbci	r29, 0xFF	; 255
    403a:	0f b6       	in	r0, 0x3f	; 63
    403c:	f8 94       	cli
    403e:	de bf       	out	0x3e, r29	; 62
    4040:	0f be       	out	0x3f, r0	; 63
    4042:	cd bf       	out	0x3d, r28	; 61
    4044:	cf 91       	pop	r28
    4046:	df 91       	pop	r29
    4048:	1f 91       	pop	r17
    404a:	0f 91       	pop	r16
    404c:	ff 90       	pop	r15
    404e:	ef 90       	pop	r14
    4050:	df 90       	pop	r13
    4052:	cf 90       	pop	r12
    4054:	bf 90       	pop	r11
    4056:	af 90       	pop	r10
    4058:	08 95       	ret

0000405a <CLCD_SetPosition>:
void CLCD_SetPosition      ( u8 COPY_u8Row , u8 COPY_u8Col)
{
    405a:	df 93       	push	r29
    405c:	cf 93       	push	r28
    405e:	cd b7       	in	r28, 0x3d	; 61
    4060:	de b7       	in	r29, 0x3e	; 62
    4062:	61 97       	sbiw	r28, 0x11	; 17
    4064:	0f b6       	in	r0, 0x3f	; 63
    4066:	f8 94       	cli
    4068:	de bf       	out	0x3e, r29	; 62
    406a:	0f be       	out	0x3f, r0	; 63
    406c:	cd bf       	out	0x3d, r28	; 61
    406e:	88 8b       	std	Y+16, r24	; 0x10
    4070:	69 8b       	std	Y+17, r22	; 0x11
	u8 LOC_u8Data ;
	if(COPY_u8Row<1||COPY_u8Row>2||COPY_u8Col>16||COPY_u8Col<1)
    4072:	88 89       	ldd	r24, Y+16	; 0x10
    4074:	88 23       	and	r24, r24
    4076:	49 f0       	breq	.+18     	; 0x408a <CLCD_SetPosition+0x30>
    4078:	88 89       	ldd	r24, Y+16	; 0x10
    407a:	83 30       	cpi	r24, 0x03	; 3
    407c:	30 f4       	brcc	.+12     	; 0x408a <CLCD_SetPosition+0x30>
    407e:	89 89       	ldd	r24, Y+17	; 0x11
    4080:	81 31       	cpi	r24, 0x11	; 17
    4082:	18 f4       	brcc	.+6      	; 0x408a <CLCD_SetPosition+0x30>
    4084:	89 89       	ldd	r24, Y+17	; 0x11
    4086:	88 23       	and	r24, r24
    4088:	19 f4       	brne	.+6      	; 0x4090 <CLCD_SetPosition+0x36>
	{
		LOC_u8Data = lcd_SetCursor;
    408a:	80 e8       	ldi	r24, 0x80	; 128
    408c:	8f 87       	std	Y+15, r24	; 0x0f
    408e:	0d c0       	rjmp	.+26     	; 0x40aa <CLCD_SetPosition+0x50>
	}
	else if (COPY_u8Row == CLCD_ROW_1)
    4090:	88 89       	ldd	r24, Y+16	; 0x10
    4092:	81 30       	cpi	r24, 0x01	; 1
    4094:	21 f4       	brne	.+8      	; 0x409e <CLCD_SetPosition+0x44>
	{
		LOC_u8Data = ((lcd_SetCursor) + (COPY_u8Col - 1));
    4096:	89 89       	ldd	r24, Y+17	; 0x11
    4098:	81 58       	subi	r24, 0x81	; 129
    409a:	8f 87       	std	Y+15, r24	; 0x0f
    409c:	06 c0       	rjmp	.+12     	; 0x40aa <CLCD_SetPosition+0x50>
	}
	else if (COPY_u8Row == CLCD_ROW_2)
    409e:	88 89       	ldd	r24, Y+16	; 0x10
    40a0:	82 30       	cpi	r24, 0x02	; 2
    40a2:	19 f4       	brne	.+6      	; 0x40aa <CLCD_SetPosition+0x50>
	{
		LOC_u8Data = ((lcd_SetCursor) + (64) + (COPY_u8Col - 1));
    40a4:	89 89       	ldd	r24, Y+17	; 0x11
    40a6:	81 54       	subi	r24, 0x41	; 65
    40a8:	8f 87       	std	Y+15, r24	; 0x0f
	}
	CLCD_voidSendCommand (LOC_u8Data);
    40aa:	8f 85       	ldd	r24, Y+15	; 0x0f
    40ac:	0e 94 11 19 	call	0x3222	; 0x3222 <CLCD_voidSendCommand>
    40b0:	80 e0       	ldi	r24, 0x00	; 0
    40b2:	90 e0       	ldi	r25, 0x00	; 0
    40b4:	a0 e8       	ldi	r26, 0x80	; 128
    40b6:	bf e3       	ldi	r27, 0x3F	; 63
    40b8:	8b 87       	std	Y+11, r24	; 0x0b
    40ba:	9c 87       	std	Y+12, r25	; 0x0c
    40bc:	ad 87       	std	Y+13, r26	; 0x0d
    40be:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    40c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    40c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    40c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    40c8:	20 e0       	ldi	r18, 0x00	; 0
    40ca:	30 e0       	ldi	r19, 0x00	; 0
    40cc:	4a ef       	ldi	r20, 0xFA	; 250
    40ce:	54 e4       	ldi	r21, 0x44	; 68
    40d0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    40d4:	dc 01       	movw	r26, r24
    40d6:	cb 01       	movw	r24, r22
    40d8:	8f 83       	std	Y+7, r24	; 0x07
    40da:	98 87       	std	Y+8, r25	; 0x08
    40dc:	a9 87       	std	Y+9, r26	; 0x09
    40de:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    40e0:	6f 81       	ldd	r22, Y+7	; 0x07
    40e2:	78 85       	ldd	r23, Y+8	; 0x08
    40e4:	89 85       	ldd	r24, Y+9	; 0x09
    40e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    40e8:	20 e0       	ldi	r18, 0x00	; 0
    40ea:	30 e0       	ldi	r19, 0x00	; 0
    40ec:	40 e8       	ldi	r20, 0x80	; 128
    40ee:	5f e3       	ldi	r21, 0x3F	; 63
    40f0:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    40f4:	88 23       	and	r24, r24
    40f6:	2c f4       	brge	.+10     	; 0x4102 <CLCD_SetPosition+0xa8>
		__ticks = 1;
    40f8:	81 e0       	ldi	r24, 0x01	; 1
    40fa:	90 e0       	ldi	r25, 0x00	; 0
    40fc:	9e 83       	std	Y+6, r25	; 0x06
    40fe:	8d 83       	std	Y+5, r24	; 0x05
    4100:	3f c0       	rjmp	.+126    	; 0x4180 <CLCD_SetPosition+0x126>
	else if (__tmp > 65535)
    4102:	6f 81       	ldd	r22, Y+7	; 0x07
    4104:	78 85       	ldd	r23, Y+8	; 0x08
    4106:	89 85       	ldd	r24, Y+9	; 0x09
    4108:	9a 85       	ldd	r25, Y+10	; 0x0a
    410a:	20 e0       	ldi	r18, 0x00	; 0
    410c:	3f ef       	ldi	r19, 0xFF	; 255
    410e:	4f e7       	ldi	r20, 0x7F	; 127
    4110:	57 e4       	ldi	r21, 0x47	; 71
    4112:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    4116:	18 16       	cp	r1, r24
    4118:	4c f5       	brge	.+82     	; 0x416c <CLCD_SetPosition+0x112>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    411a:	6b 85       	ldd	r22, Y+11	; 0x0b
    411c:	7c 85       	ldd	r23, Y+12	; 0x0c
    411e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4120:	9e 85       	ldd	r25, Y+14	; 0x0e
    4122:	20 e0       	ldi	r18, 0x00	; 0
    4124:	30 e0       	ldi	r19, 0x00	; 0
    4126:	40 e2       	ldi	r20, 0x20	; 32
    4128:	51 e4       	ldi	r21, 0x41	; 65
    412a:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    412e:	dc 01       	movw	r26, r24
    4130:	cb 01       	movw	r24, r22
    4132:	bc 01       	movw	r22, r24
    4134:	cd 01       	movw	r24, r26
    4136:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    413a:	dc 01       	movw	r26, r24
    413c:	cb 01       	movw	r24, r22
    413e:	9e 83       	std	Y+6, r25	; 0x06
    4140:	8d 83       	std	Y+5, r24	; 0x05
    4142:	0f c0       	rjmp	.+30     	; 0x4162 <CLCD_SetPosition+0x108>
    4144:	88 ec       	ldi	r24, 0xC8	; 200
    4146:	90 e0       	ldi	r25, 0x00	; 0
    4148:	9c 83       	std	Y+4, r25	; 0x04
    414a:	8b 83       	std	Y+3, r24	; 0x03
    414c:	8b 81       	ldd	r24, Y+3	; 0x03
    414e:	9c 81       	ldd	r25, Y+4	; 0x04
    4150:	01 97       	sbiw	r24, 0x01	; 1
    4152:	f1 f7       	brne	.-4      	; 0x4150 <CLCD_SetPosition+0xf6>
    4154:	9c 83       	std	Y+4, r25	; 0x04
    4156:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4158:	8d 81       	ldd	r24, Y+5	; 0x05
    415a:	9e 81       	ldd	r25, Y+6	; 0x06
    415c:	01 97       	sbiw	r24, 0x01	; 1
    415e:	9e 83       	std	Y+6, r25	; 0x06
    4160:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4162:	8d 81       	ldd	r24, Y+5	; 0x05
    4164:	9e 81       	ldd	r25, Y+6	; 0x06
    4166:	00 97       	sbiw	r24, 0x00	; 0
    4168:	69 f7       	brne	.-38     	; 0x4144 <CLCD_SetPosition+0xea>
    416a:	14 c0       	rjmp	.+40     	; 0x4194 <CLCD_SetPosition+0x13a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    416c:	6f 81       	ldd	r22, Y+7	; 0x07
    416e:	78 85       	ldd	r23, Y+8	; 0x08
    4170:	89 85       	ldd	r24, Y+9	; 0x09
    4172:	9a 85       	ldd	r25, Y+10	; 0x0a
    4174:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4178:	dc 01       	movw	r26, r24
    417a:	cb 01       	movw	r24, r22
    417c:	9e 83       	std	Y+6, r25	; 0x06
    417e:	8d 83       	std	Y+5, r24	; 0x05
    4180:	8d 81       	ldd	r24, Y+5	; 0x05
    4182:	9e 81       	ldd	r25, Y+6	; 0x06
    4184:	9a 83       	std	Y+2, r25	; 0x02
    4186:	89 83       	std	Y+1, r24	; 0x01
    4188:	89 81       	ldd	r24, Y+1	; 0x01
    418a:	9a 81       	ldd	r25, Y+2	; 0x02
    418c:	01 97       	sbiw	r24, 0x01	; 1
    418e:	f1 f7       	brne	.-4      	; 0x418c <CLCD_SetPosition+0x132>
    4190:	9a 83       	std	Y+2, r25	; 0x02
    4192:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    4194:	61 96       	adiw	r28, 0x11	; 17
    4196:	0f b6       	in	r0, 0x3f	; 63
    4198:	f8 94       	cli
    419a:	de bf       	out	0x3e, r29	; 62
    419c:	0f be       	out	0x3f, r0	; 63
    419e:	cd bf       	out	0x3d, r28	; 61
    41a0:	cf 91       	pop	r28
    41a2:	df 91       	pop	r29
    41a4:	08 95       	ret

000041a6 <CLCD_SetExtraChar>:
void CLCD_SetExtraChar     ( u8 COPY_u8Row , u8 COPY_u8Col)
{
    41a6:	df 93       	push	r29
    41a8:	cf 93       	push	r28
    41aa:	00 d0       	rcall	.+0      	; 0x41ac <CLCD_SetExtraChar+0x6>
    41ac:	0f 92       	push	r0
    41ae:	cd b7       	in	r28, 0x3d	; 61
    41b0:	de b7       	in	r29, 0x3e	; 62
    41b2:	8a 83       	std	Y+2, r24	; 0x02
    41b4:	6b 83       	std	Y+3, r22	; 0x03
	u8 LOC_u8Iterator = 0;
    41b6:	19 82       	std	Y+1, r1	; 0x01
	CLCD_voidSendCommand (lcd_CGRAM);
    41b8:	80 e4       	ldi	r24, 0x40	; 64
    41ba:	0e 94 11 19 	call	0x3222	; 0x3222 <CLCD_voidSendCommand>

	for( LOC_u8Iterator = 0 ; LOC_u8Iterator < (sizeof(CLCD_u8Extrachar)/sizeof(CLCD_u8Extrachar[0])) ; LOC_u8Iterator++ )
    41be:	19 82       	std	Y+1, r1	; 0x01
    41c0:	0c c0       	rjmp	.+24     	; 0x41da <CLCD_SetExtraChar+0x34>
	{
		CLCD_voidSendData ( CLCD_u8Extrachar[LOC_u8Iterator] );
    41c2:	89 81       	ldd	r24, Y+1	; 0x01
    41c4:	88 2f       	mov	r24, r24
    41c6:	90 e0       	ldi	r25, 0x00	; 0
    41c8:	fc 01       	movw	r30, r24
    41ca:	e2 59       	subi	r30, 0x92	; 146
    41cc:	fe 4f       	sbci	r31, 0xFE	; 254
    41ce:	80 81       	ld	r24, Z
    41d0:	0e 94 ed 18 	call	0x31da	; 0x31da <CLCD_voidSendData>
void CLCD_SetExtraChar     ( u8 COPY_u8Row , u8 COPY_u8Col)
{
	u8 LOC_u8Iterator = 0;
	CLCD_voidSendCommand (lcd_CGRAM);

	for( LOC_u8Iterator = 0 ; LOC_u8Iterator < (sizeof(CLCD_u8Extrachar)/sizeof(CLCD_u8Extrachar[0])) ; LOC_u8Iterator++ )
    41d4:	89 81       	ldd	r24, Y+1	; 0x01
    41d6:	8f 5f       	subi	r24, 0xFF	; 255
    41d8:	89 83       	std	Y+1, r24	; 0x01
    41da:	89 81       	ldd	r24, Y+1	; 0x01
    41dc:	80 34       	cpi	r24, 0x40	; 64
    41de:	88 f3       	brcs	.-30     	; 0x41c2 <CLCD_SetExtraChar+0x1c>
	{
		CLCD_voidSendData ( CLCD_u8Extrachar[LOC_u8Iterator] );
	}

	CLCD_SetPosition ( COPY_u8Row , COPY_u8Col );
    41e0:	8a 81       	ldd	r24, Y+2	; 0x02
    41e2:	6b 81       	ldd	r22, Y+3	; 0x03
    41e4:	0e 94 2d 20 	call	0x405a	; 0x405a <CLCD_SetPosition>

	for( LOC_u8Iterator = 0 ; LOC_u8Iterator < 8 ; LOC_u8Iterator++ )
    41e8:	19 82       	std	Y+1, r1	; 0x01
    41ea:	06 c0       	rjmp	.+12     	; 0x41f8 <CLCD_SetExtraChar+0x52>
	{
		CLCD_voidSendData ( LOC_u8Iterator );
    41ec:	89 81       	ldd	r24, Y+1	; 0x01
    41ee:	0e 94 ed 18 	call	0x31da	; 0x31da <CLCD_voidSendData>
		CLCD_voidSendData ( CLCD_u8Extrachar[LOC_u8Iterator] );
	}

	CLCD_SetPosition ( COPY_u8Row , COPY_u8Col );

	for( LOC_u8Iterator = 0 ; LOC_u8Iterator < 8 ; LOC_u8Iterator++ )
    41f2:	89 81       	ldd	r24, Y+1	; 0x01
    41f4:	8f 5f       	subi	r24, 0xFF	; 255
    41f6:	89 83       	std	Y+1, r24	; 0x01
    41f8:	89 81       	ldd	r24, Y+1	; 0x01
    41fa:	88 30       	cpi	r24, 0x08	; 8
    41fc:	b8 f3       	brcs	.-18     	; 0x41ec <CLCD_SetExtraChar+0x46>
	{
		CLCD_voidSendData ( LOC_u8Iterator );
	}
}
    41fe:	0f 90       	pop	r0
    4200:	0f 90       	pop	r0
    4202:	0f 90       	pop	r0
    4204:	cf 91       	pop	r28
    4206:	df 91       	pop	r29
    4208:	08 95       	ret

0000420a <CLCD_ClearScreen>:
void CLCD_ClearScreen      ( void                         )
{
    420a:	df 93       	push	r29
    420c:	cf 93       	push	r28
    420e:	cd b7       	in	r28, 0x3d	; 61
    4210:	de b7       	in	r29, 0x3e	; 62
    4212:	2e 97       	sbiw	r28, 0x0e	; 14
    4214:	0f b6       	in	r0, 0x3f	; 63
    4216:	f8 94       	cli
    4218:	de bf       	out	0x3e, r29	; 62
    421a:	0f be       	out	0x3f, r0	; 63
    421c:	cd bf       	out	0x3d, r28	; 61
	CLCD_voidSendCommand (lcd_Clear);
    421e:	81 e0       	ldi	r24, 0x01	; 1
    4220:	0e 94 11 19 	call	0x3222	; 0x3222 <CLCD_voidSendCommand>
    4224:	80 e0       	ldi	r24, 0x00	; 0
    4226:	90 e0       	ldi	r25, 0x00	; 0
    4228:	a0 e2       	ldi	r26, 0x20	; 32
    422a:	b1 e4       	ldi	r27, 0x41	; 65
    422c:	8b 87       	std	Y+11, r24	; 0x0b
    422e:	9c 87       	std	Y+12, r25	; 0x0c
    4230:	ad 87       	std	Y+13, r26	; 0x0d
    4232:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4234:	6b 85       	ldd	r22, Y+11	; 0x0b
    4236:	7c 85       	ldd	r23, Y+12	; 0x0c
    4238:	8d 85       	ldd	r24, Y+13	; 0x0d
    423a:	9e 85       	ldd	r25, Y+14	; 0x0e
    423c:	20 e0       	ldi	r18, 0x00	; 0
    423e:	30 e0       	ldi	r19, 0x00	; 0
    4240:	4a ef       	ldi	r20, 0xFA	; 250
    4242:	54 e4       	ldi	r21, 0x44	; 68
    4244:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    4248:	dc 01       	movw	r26, r24
    424a:	cb 01       	movw	r24, r22
    424c:	8f 83       	std	Y+7, r24	; 0x07
    424e:	98 87       	std	Y+8, r25	; 0x08
    4250:	a9 87       	std	Y+9, r26	; 0x09
    4252:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4254:	6f 81       	ldd	r22, Y+7	; 0x07
    4256:	78 85       	ldd	r23, Y+8	; 0x08
    4258:	89 85       	ldd	r24, Y+9	; 0x09
    425a:	9a 85       	ldd	r25, Y+10	; 0x0a
    425c:	20 e0       	ldi	r18, 0x00	; 0
    425e:	30 e0       	ldi	r19, 0x00	; 0
    4260:	40 e8       	ldi	r20, 0x80	; 128
    4262:	5f e3       	ldi	r21, 0x3F	; 63
    4264:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    4268:	88 23       	and	r24, r24
    426a:	2c f4       	brge	.+10     	; 0x4276 <CLCD_ClearScreen+0x6c>
		__ticks = 1;
    426c:	81 e0       	ldi	r24, 0x01	; 1
    426e:	90 e0       	ldi	r25, 0x00	; 0
    4270:	9e 83       	std	Y+6, r25	; 0x06
    4272:	8d 83       	std	Y+5, r24	; 0x05
    4274:	3f c0       	rjmp	.+126    	; 0x42f4 <CLCD_ClearScreen+0xea>
	else if (__tmp > 65535)
    4276:	6f 81       	ldd	r22, Y+7	; 0x07
    4278:	78 85       	ldd	r23, Y+8	; 0x08
    427a:	89 85       	ldd	r24, Y+9	; 0x09
    427c:	9a 85       	ldd	r25, Y+10	; 0x0a
    427e:	20 e0       	ldi	r18, 0x00	; 0
    4280:	3f ef       	ldi	r19, 0xFF	; 255
    4282:	4f e7       	ldi	r20, 0x7F	; 127
    4284:	57 e4       	ldi	r21, 0x47	; 71
    4286:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    428a:	18 16       	cp	r1, r24
    428c:	4c f5       	brge	.+82     	; 0x42e0 <CLCD_ClearScreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    428e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4290:	7c 85       	ldd	r23, Y+12	; 0x0c
    4292:	8d 85       	ldd	r24, Y+13	; 0x0d
    4294:	9e 85       	ldd	r25, Y+14	; 0x0e
    4296:	20 e0       	ldi	r18, 0x00	; 0
    4298:	30 e0       	ldi	r19, 0x00	; 0
    429a:	40 e2       	ldi	r20, 0x20	; 32
    429c:	51 e4       	ldi	r21, 0x41	; 65
    429e:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    42a2:	dc 01       	movw	r26, r24
    42a4:	cb 01       	movw	r24, r22
    42a6:	bc 01       	movw	r22, r24
    42a8:	cd 01       	movw	r24, r26
    42aa:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    42ae:	dc 01       	movw	r26, r24
    42b0:	cb 01       	movw	r24, r22
    42b2:	9e 83       	std	Y+6, r25	; 0x06
    42b4:	8d 83       	std	Y+5, r24	; 0x05
    42b6:	0f c0       	rjmp	.+30     	; 0x42d6 <CLCD_ClearScreen+0xcc>
    42b8:	88 ec       	ldi	r24, 0xC8	; 200
    42ba:	90 e0       	ldi	r25, 0x00	; 0
    42bc:	9c 83       	std	Y+4, r25	; 0x04
    42be:	8b 83       	std	Y+3, r24	; 0x03
    42c0:	8b 81       	ldd	r24, Y+3	; 0x03
    42c2:	9c 81       	ldd	r25, Y+4	; 0x04
    42c4:	01 97       	sbiw	r24, 0x01	; 1
    42c6:	f1 f7       	brne	.-4      	; 0x42c4 <CLCD_ClearScreen+0xba>
    42c8:	9c 83       	std	Y+4, r25	; 0x04
    42ca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42cc:	8d 81       	ldd	r24, Y+5	; 0x05
    42ce:	9e 81       	ldd	r25, Y+6	; 0x06
    42d0:	01 97       	sbiw	r24, 0x01	; 1
    42d2:	9e 83       	std	Y+6, r25	; 0x06
    42d4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42d6:	8d 81       	ldd	r24, Y+5	; 0x05
    42d8:	9e 81       	ldd	r25, Y+6	; 0x06
    42da:	00 97       	sbiw	r24, 0x00	; 0
    42dc:	69 f7       	brne	.-38     	; 0x42b8 <CLCD_ClearScreen+0xae>
    42de:	14 c0       	rjmp	.+40     	; 0x4308 <CLCD_ClearScreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42e0:	6f 81       	ldd	r22, Y+7	; 0x07
    42e2:	78 85       	ldd	r23, Y+8	; 0x08
    42e4:	89 85       	ldd	r24, Y+9	; 0x09
    42e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    42e8:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    42ec:	dc 01       	movw	r26, r24
    42ee:	cb 01       	movw	r24, r22
    42f0:	9e 83       	std	Y+6, r25	; 0x06
    42f2:	8d 83       	std	Y+5, r24	; 0x05
    42f4:	8d 81       	ldd	r24, Y+5	; 0x05
    42f6:	9e 81       	ldd	r25, Y+6	; 0x06
    42f8:	9a 83       	std	Y+2, r25	; 0x02
    42fa:	89 83       	std	Y+1, r24	; 0x01
    42fc:	89 81       	ldd	r24, Y+1	; 0x01
    42fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4300:	01 97       	sbiw	r24, 0x01	; 1
    4302:	f1 f7       	brne	.-4      	; 0x4300 <CLCD_ClearScreen+0xf6>
    4304:	9a 83       	std	Y+2, r25	; 0x02
    4306:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
}
    4308:	2e 96       	adiw	r28, 0x0e	; 14
    430a:	0f b6       	in	r0, 0x3f	; 63
    430c:	f8 94       	cli
    430e:	de bf       	out	0x3e, r29	; 62
    4310:	0f be       	out	0x3f, r0	; 63
    4312:	cd bf       	out	0x3d, r28	; 61
    4314:	cf 91       	pop	r28
    4316:	df 91       	pop	r29
    4318:	08 95       	ret

0000431a <CLCD_voidSendFallingEdge>:
static void CLCD_voidSendFallingEdge()
{
    431a:	df 93       	push	r29
    431c:	cf 93       	push	r28
    431e:	cd b7       	in	r28, 0x3d	; 61
    4320:	de b7       	in	r29, 0x3e	; 62
    4322:	6c 97       	sbiw	r28, 0x1c	; 28
    4324:	0f b6       	in	r0, 0x3f	; 63
    4326:	f8 94       	cli
    4328:	de bf       	out	0x3e, r29	; 62
    432a:	0f be       	out	0x3f, r0	; 63
    432c:	cd bf       	out	0x3d, r28	; 61
	DIO_eunmSetPinValue(CLCD_CONTROL_PORT,CLCD_EN,DIO_PIN_HIGH);
    432e:	82 e0       	ldi	r24, 0x02	; 2
    4330:	62 e0       	ldi	r22, 0x02	; 2
    4332:	41 e0       	ldi	r20, 0x01	; 1
    4334:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
    4338:	80 e0       	ldi	r24, 0x00	; 0
    433a:	90 e0       	ldi	r25, 0x00	; 0
    433c:	a0 e8       	ldi	r26, 0x80	; 128
    433e:	bf e3       	ldi	r27, 0x3F	; 63
    4340:	89 8f       	std	Y+25, r24	; 0x19
    4342:	9a 8f       	std	Y+26, r25	; 0x1a
    4344:	ab 8f       	std	Y+27, r26	; 0x1b
    4346:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4348:	69 8d       	ldd	r22, Y+25	; 0x19
    434a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    434c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    434e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4350:	20 e0       	ldi	r18, 0x00	; 0
    4352:	30 e0       	ldi	r19, 0x00	; 0
    4354:	4a ef       	ldi	r20, 0xFA	; 250
    4356:	54 e4       	ldi	r21, 0x44	; 68
    4358:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    435c:	dc 01       	movw	r26, r24
    435e:	cb 01       	movw	r24, r22
    4360:	8d 8b       	std	Y+21, r24	; 0x15
    4362:	9e 8b       	std	Y+22, r25	; 0x16
    4364:	af 8b       	std	Y+23, r26	; 0x17
    4366:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4368:	6d 89       	ldd	r22, Y+21	; 0x15
    436a:	7e 89       	ldd	r23, Y+22	; 0x16
    436c:	8f 89       	ldd	r24, Y+23	; 0x17
    436e:	98 8d       	ldd	r25, Y+24	; 0x18
    4370:	20 e0       	ldi	r18, 0x00	; 0
    4372:	30 e0       	ldi	r19, 0x00	; 0
    4374:	40 e8       	ldi	r20, 0x80	; 128
    4376:	5f e3       	ldi	r21, 0x3F	; 63
    4378:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    437c:	88 23       	and	r24, r24
    437e:	2c f4       	brge	.+10     	; 0x438a <CLCD_voidSendFallingEdge+0x70>
		__ticks = 1;
    4380:	81 e0       	ldi	r24, 0x01	; 1
    4382:	90 e0       	ldi	r25, 0x00	; 0
    4384:	9c 8b       	std	Y+20, r25	; 0x14
    4386:	8b 8b       	std	Y+19, r24	; 0x13
    4388:	3f c0       	rjmp	.+126    	; 0x4408 <CLCD_voidSendFallingEdge+0xee>
	else if (__tmp > 65535)
    438a:	6d 89       	ldd	r22, Y+21	; 0x15
    438c:	7e 89       	ldd	r23, Y+22	; 0x16
    438e:	8f 89       	ldd	r24, Y+23	; 0x17
    4390:	98 8d       	ldd	r25, Y+24	; 0x18
    4392:	20 e0       	ldi	r18, 0x00	; 0
    4394:	3f ef       	ldi	r19, 0xFF	; 255
    4396:	4f e7       	ldi	r20, 0x7F	; 127
    4398:	57 e4       	ldi	r21, 0x47	; 71
    439a:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    439e:	18 16       	cp	r1, r24
    43a0:	4c f5       	brge	.+82     	; 0x43f4 <CLCD_voidSendFallingEdge+0xda>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    43a2:	69 8d       	ldd	r22, Y+25	; 0x19
    43a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    43a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    43a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    43aa:	20 e0       	ldi	r18, 0x00	; 0
    43ac:	30 e0       	ldi	r19, 0x00	; 0
    43ae:	40 e2       	ldi	r20, 0x20	; 32
    43b0:	51 e4       	ldi	r21, 0x41	; 65
    43b2:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    43b6:	dc 01       	movw	r26, r24
    43b8:	cb 01       	movw	r24, r22
    43ba:	bc 01       	movw	r22, r24
    43bc:	cd 01       	movw	r24, r26
    43be:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    43c2:	dc 01       	movw	r26, r24
    43c4:	cb 01       	movw	r24, r22
    43c6:	9c 8b       	std	Y+20, r25	; 0x14
    43c8:	8b 8b       	std	Y+19, r24	; 0x13
    43ca:	0f c0       	rjmp	.+30     	; 0x43ea <CLCD_voidSendFallingEdge+0xd0>
    43cc:	88 ec       	ldi	r24, 0xC8	; 200
    43ce:	90 e0       	ldi	r25, 0x00	; 0
    43d0:	9a 8b       	std	Y+18, r25	; 0x12
    43d2:	89 8b       	std	Y+17, r24	; 0x11
    43d4:	89 89       	ldd	r24, Y+17	; 0x11
    43d6:	9a 89       	ldd	r25, Y+18	; 0x12
    43d8:	01 97       	sbiw	r24, 0x01	; 1
    43da:	f1 f7       	brne	.-4      	; 0x43d8 <CLCD_voidSendFallingEdge+0xbe>
    43dc:	9a 8b       	std	Y+18, r25	; 0x12
    43de:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43e0:	8b 89       	ldd	r24, Y+19	; 0x13
    43e2:	9c 89       	ldd	r25, Y+20	; 0x14
    43e4:	01 97       	sbiw	r24, 0x01	; 1
    43e6:	9c 8b       	std	Y+20, r25	; 0x14
    43e8:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43ea:	8b 89       	ldd	r24, Y+19	; 0x13
    43ec:	9c 89       	ldd	r25, Y+20	; 0x14
    43ee:	00 97       	sbiw	r24, 0x00	; 0
    43f0:	69 f7       	brne	.-38     	; 0x43cc <CLCD_voidSendFallingEdge+0xb2>
    43f2:	14 c0       	rjmp	.+40     	; 0x441c <CLCD_voidSendFallingEdge+0x102>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    43f4:	6d 89       	ldd	r22, Y+21	; 0x15
    43f6:	7e 89       	ldd	r23, Y+22	; 0x16
    43f8:	8f 89       	ldd	r24, Y+23	; 0x17
    43fa:	98 8d       	ldd	r25, Y+24	; 0x18
    43fc:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    4400:	dc 01       	movw	r26, r24
    4402:	cb 01       	movw	r24, r22
    4404:	9c 8b       	std	Y+20, r25	; 0x14
    4406:	8b 8b       	std	Y+19, r24	; 0x13
    4408:	8b 89       	ldd	r24, Y+19	; 0x13
    440a:	9c 89       	ldd	r25, Y+20	; 0x14
    440c:	98 8b       	std	Y+16, r25	; 0x10
    440e:	8f 87       	std	Y+15, r24	; 0x0f
    4410:	8f 85       	ldd	r24, Y+15	; 0x0f
    4412:	98 89       	ldd	r25, Y+16	; 0x10
    4414:	01 97       	sbiw	r24, 0x01	; 1
    4416:	f1 f7       	brne	.-4      	; 0x4414 <CLCD_voidSendFallingEdge+0xfa>
    4418:	98 8b       	std	Y+16, r25	; 0x10
    441a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_eunmSetPinValue(CLCD_CONTROL_PORT,CLCD_EN,DIO_PIN_LOW);
    441c:	82 e0       	ldi	r24, 0x02	; 2
    441e:	62 e0       	ldi	r22, 0x02	; 2
    4420:	40 e0       	ldi	r20, 0x00	; 0
    4422:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
    4426:	80 e0       	ldi	r24, 0x00	; 0
    4428:	90 e0       	ldi	r25, 0x00	; 0
    442a:	a0 e8       	ldi	r26, 0x80	; 128
    442c:	bf e3       	ldi	r27, 0x3F	; 63
    442e:	8b 87       	std	Y+11, r24	; 0x0b
    4430:	9c 87       	std	Y+12, r25	; 0x0c
    4432:	ad 87       	std	Y+13, r26	; 0x0d
    4434:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4436:	6b 85       	ldd	r22, Y+11	; 0x0b
    4438:	7c 85       	ldd	r23, Y+12	; 0x0c
    443a:	8d 85       	ldd	r24, Y+13	; 0x0d
    443c:	9e 85       	ldd	r25, Y+14	; 0x0e
    443e:	20 e0       	ldi	r18, 0x00	; 0
    4440:	30 e0       	ldi	r19, 0x00	; 0
    4442:	4a ef       	ldi	r20, 0xFA	; 250
    4444:	54 e4       	ldi	r21, 0x44	; 68
    4446:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    444a:	dc 01       	movw	r26, r24
    444c:	cb 01       	movw	r24, r22
    444e:	8f 83       	std	Y+7, r24	; 0x07
    4450:	98 87       	std	Y+8, r25	; 0x08
    4452:	a9 87       	std	Y+9, r26	; 0x09
    4454:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4456:	6f 81       	ldd	r22, Y+7	; 0x07
    4458:	78 85       	ldd	r23, Y+8	; 0x08
    445a:	89 85       	ldd	r24, Y+9	; 0x09
    445c:	9a 85       	ldd	r25, Y+10	; 0x0a
    445e:	20 e0       	ldi	r18, 0x00	; 0
    4460:	30 e0       	ldi	r19, 0x00	; 0
    4462:	40 e8       	ldi	r20, 0x80	; 128
    4464:	5f e3       	ldi	r21, 0x3F	; 63
    4466:	0e 94 dd 10 	call	0x21ba	; 0x21ba <__ltsf2>
    446a:	88 23       	and	r24, r24
    446c:	2c f4       	brge	.+10     	; 0x4478 <CLCD_voidSendFallingEdge+0x15e>
		__ticks = 1;
    446e:	81 e0       	ldi	r24, 0x01	; 1
    4470:	90 e0       	ldi	r25, 0x00	; 0
    4472:	9e 83       	std	Y+6, r25	; 0x06
    4474:	8d 83       	std	Y+5, r24	; 0x05
    4476:	3f c0       	rjmp	.+126    	; 0x44f6 <CLCD_voidSendFallingEdge+0x1dc>
	else if (__tmp > 65535)
    4478:	6f 81       	ldd	r22, Y+7	; 0x07
    447a:	78 85       	ldd	r23, Y+8	; 0x08
    447c:	89 85       	ldd	r24, Y+9	; 0x09
    447e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4480:	20 e0       	ldi	r18, 0x00	; 0
    4482:	3f ef       	ldi	r19, 0xFF	; 255
    4484:	4f e7       	ldi	r20, 0x7F	; 127
    4486:	57 e4       	ldi	r21, 0x47	; 71
    4488:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__gtsf2>
    448c:	18 16       	cp	r1, r24
    448e:	4c f5       	brge	.+82     	; 0x44e2 <CLCD_voidSendFallingEdge+0x1c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4490:	6b 85       	ldd	r22, Y+11	; 0x0b
    4492:	7c 85       	ldd	r23, Y+12	; 0x0c
    4494:	8d 85       	ldd	r24, Y+13	; 0x0d
    4496:	9e 85       	ldd	r25, Y+14	; 0x0e
    4498:	20 e0       	ldi	r18, 0x00	; 0
    449a:	30 e0       	ldi	r19, 0x00	; 0
    449c:	40 e2       	ldi	r20, 0x20	; 32
    449e:	51 e4       	ldi	r21, 0x41	; 65
    44a0:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    44a4:	dc 01       	movw	r26, r24
    44a6:	cb 01       	movw	r24, r22
    44a8:	bc 01       	movw	r22, r24
    44aa:	cd 01       	movw	r24, r26
    44ac:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    44b0:	dc 01       	movw	r26, r24
    44b2:	cb 01       	movw	r24, r22
    44b4:	9e 83       	std	Y+6, r25	; 0x06
    44b6:	8d 83       	std	Y+5, r24	; 0x05
    44b8:	0f c0       	rjmp	.+30     	; 0x44d8 <CLCD_voidSendFallingEdge+0x1be>
    44ba:	88 ec       	ldi	r24, 0xC8	; 200
    44bc:	90 e0       	ldi	r25, 0x00	; 0
    44be:	9c 83       	std	Y+4, r25	; 0x04
    44c0:	8b 83       	std	Y+3, r24	; 0x03
    44c2:	8b 81       	ldd	r24, Y+3	; 0x03
    44c4:	9c 81       	ldd	r25, Y+4	; 0x04
    44c6:	01 97       	sbiw	r24, 0x01	; 1
    44c8:	f1 f7       	brne	.-4      	; 0x44c6 <CLCD_voidSendFallingEdge+0x1ac>
    44ca:	9c 83       	std	Y+4, r25	; 0x04
    44cc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    44ce:	8d 81       	ldd	r24, Y+5	; 0x05
    44d0:	9e 81       	ldd	r25, Y+6	; 0x06
    44d2:	01 97       	sbiw	r24, 0x01	; 1
    44d4:	9e 83       	std	Y+6, r25	; 0x06
    44d6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44d8:	8d 81       	ldd	r24, Y+5	; 0x05
    44da:	9e 81       	ldd	r25, Y+6	; 0x06
    44dc:	00 97       	sbiw	r24, 0x00	; 0
    44de:	69 f7       	brne	.-38     	; 0x44ba <CLCD_voidSendFallingEdge+0x1a0>
    44e0:	14 c0       	rjmp	.+40     	; 0x450a <CLCD_voidSendFallingEdge+0x1f0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44e2:	6f 81       	ldd	r22, Y+7	; 0x07
    44e4:	78 85       	ldd	r23, Y+8	; 0x08
    44e6:	89 85       	ldd	r24, Y+9	; 0x09
    44e8:	9a 85       	ldd	r25, Y+10	; 0x0a
    44ea:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    44ee:	dc 01       	movw	r26, r24
    44f0:	cb 01       	movw	r24, r22
    44f2:	9e 83       	std	Y+6, r25	; 0x06
    44f4:	8d 83       	std	Y+5, r24	; 0x05
    44f6:	8d 81       	ldd	r24, Y+5	; 0x05
    44f8:	9e 81       	ldd	r25, Y+6	; 0x06
    44fa:	9a 83       	std	Y+2, r25	; 0x02
    44fc:	89 83       	std	Y+1, r24	; 0x01
    44fe:	89 81       	ldd	r24, Y+1	; 0x01
    4500:	9a 81       	ldd	r25, Y+2	; 0x02
    4502:	01 97       	sbiw	r24, 0x01	; 1
    4504:	f1 f7       	brne	.-4      	; 0x4502 <CLCD_voidSendFallingEdge+0x1e8>
    4506:	9a 83       	std	Y+2, r25	; 0x02
    4508:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
}
    450a:	6c 96       	adiw	r28, 0x1c	; 28
    450c:	0f b6       	in	r0, 0x3f	; 63
    450e:	f8 94       	cli
    4510:	de bf       	out	0x3e, r29	; 62
    4512:	0f be       	out	0x3f, r0	; 63
    4514:	cd bf       	out	0x3d, r28	; 61
    4516:	cf 91       	pop	r28
    4518:	df 91       	pop	r29
    451a:	08 95       	ret

0000451c <DIO_eunmSetPinDirection>:
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

DIO_ErrorStatus DIO_eunmSetPinDirection     (u8 COPY_u8PORT ,u8 COPY_u8PIN ,u8 COPY_u8Direction )
{
    451c:	df 93       	push	r29
    451e:	cf 93       	push	r28
    4520:	cd b7       	in	r28, 0x3d	; 61
    4522:	de b7       	in	r29, 0x3e	; 62
    4524:	28 97       	sbiw	r28, 0x08	; 8
    4526:	0f b6       	in	r0, 0x3f	; 63
    4528:	f8 94       	cli
    452a:	de bf       	out	0x3e, r29	; 62
    452c:	0f be       	out	0x3f, r0	; 63
    452e:	cd bf       	out	0x3d, r28	; 61
    4530:	8a 83       	std	Y+2, r24	; 0x02
    4532:	6b 83       	std	Y+3, r22	; 0x03
    4534:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4536:	81 e0       	ldi	r24, 0x01	; 1
    4538:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD)&&(COPY_u8PIN <= DIO_PIN7))
    453a:	8a 81       	ldd	r24, Y+2	; 0x02
    453c:	84 30       	cpi	r24, 0x04	; 4
    453e:	08 f0       	brcs	.+2      	; 0x4542 <DIO_eunmSetPinDirection+0x26>
    4540:	f1 c0       	rjmp	.+482    	; 0x4724 <DIO_eunmSetPinDirection+0x208>
    4542:	8b 81       	ldd	r24, Y+3	; 0x03
    4544:	88 30       	cpi	r24, 0x08	; 8
    4546:	08 f0       	brcs	.+2      	; 0x454a <DIO_eunmSetPinDirection+0x2e>
    4548:	ed c0       	rjmp	.+474    	; 0x4724 <DIO_eunmSetPinDirection+0x208>
	{
		if (COPY_u8Direction == DIO_PIN_OUTPUT)
    454a:	8c 81       	ldd	r24, Y+4	; 0x04
    454c:	81 30       	cpi	r24, 0x01	; 1
    454e:	09 f0       	breq	.+2      	; 0x4552 <DIO_eunmSetPinDirection+0x36>
    4550:	6f c0       	rjmp	.+222    	; 0x4630 <DIO_eunmSetPinDirection+0x114>
		{
			switch(COPY_u8PORT)
    4552:	8a 81       	ldd	r24, Y+2	; 0x02
    4554:	28 2f       	mov	r18, r24
    4556:	30 e0       	ldi	r19, 0x00	; 0
    4558:	38 87       	std	Y+8, r19	; 0x08
    455a:	2f 83       	std	Y+7, r18	; 0x07
    455c:	8f 81       	ldd	r24, Y+7	; 0x07
    455e:	98 85       	ldd	r25, Y+8	; 0x08
    4560:	81 30       	cpi	r24, 0x01	; 1
    4562:	91 05       	cpc	r25, r1
    4564:	49 f1       	breq	.+82     	; 0x45b8 <DIO_eunmSetPinDirection+0x9c>
    4566:	2f 81       	ldd	r18, Y+7	; 0x07
    4568:	38 85       	ldd	r19, Y+8	; 0x08
    456a:	22 30       	cpi	r18, 0x02	; 2
    456c:	31 05       	cpc	r19, r1
    456e:	2c f4       	brge	.+10     	; 0x457a <DIO_eunmSetPinDirection+0x5e>
    4570:	8f 81       	ldd	r24, Y+7	; 0x07
    4572:	98 85       	ldd	r25, Y+8	; 0x08
    4574:	00 97       	sbiw	r24, 0x00	; 0
    4576:	61 f0       	breq	.+24     	; 0x4590 <DIO_eunmSetPinDirection+0x74>
    4578:	d6 c0       	rjmp	.+428    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
    457a:	2f 81       	ldd	r18, Y+7	; 0x07
    457c:	38 85       	ldd	r19, Y+8	; 0x08
    457e:	22 30       	cpi	r18, 0x02	; 2
    4580:	31 05       	cpc	r19, r1
    4582:	71 f1       	breq	.+92     	; 0x45e0 <DIO_eunmSetPinDirection+0xc4>
    4584:	8f 81       	ldd	r24, Y+7	; 0x07
    4586:	98 85       	ldd	r25, Y+8	; 0x08
    4588:	83 30       	cpi	r24, 0x03	; 3
    458a:	91 05       	cpc	r25, r1
    458c:	e9 f1       	breq	.+122    	; 0x4608 <DIO_eunmSetPinDirection+0xec>
    458e:	cb c0       	rjmp	.+406    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			{
			case DIO_PORTA: SET_BIT(DDRA_R,COPY_u8PIN); break;
    4590:	aa e3       	ldi	r26, 0x3A	; 58
    4592:	b0 e0       	ldi	r27, 0x00	; 0
    4594:	ea e3       	ldi	r30, 0x3A	; 58
    4596:	f0 e0       	ldi	r31, 0x00	; 0
    4598:	80 81       	ld	r24, Z
    459a:	48 2f       	mov	r20, r24
    459c:	8b 81       	ldd	r24, Y+3	; 0x03
    459e:	28 2f       	mov	r18, r24
    45a0:	30 e0       	ldi	r19, 0x00	; 0
    45a2:	81 e0       	ldi	r24, 0x01	; 1
    45a4:	90 e0       	ldi	r25, 0x00	; 0
    45a6:	02 2e       	mov	r0, r18
    45a8:	02 c0       	rjmp	.+4      	; 0x45ae <DIO_eunmSetPinDirection+0x92>
    45aa:	88 0f       	add	r24, r24
    45ac:	99 1f       	adc	r25, r25
    45ae:	0a 94       	dec	r0
    45b0:	e2 f7       	brpl	.-8      	; 0x45aa <DIO_eunmSetPinDirection+0x8e>
    45b2:	84 2b       	or	r24, r20
    45b4:	8c 93       	st	X, r24
    45b6:	b7 c0       	rjmp	.+366    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTB: SET_BIT(DDRB_R,COPY_u8PIN); break;
    45b8:	a7 e3       	ldi	r26, 0x37	; 55
    45ba:	b0 e0       	ldi	r27, 0x00	; 0
    45bc:	e7 e3       	ldi	r30, 0x37	; 55
    45be:	f0 e0       	ldi	r31, 0x00	; 0
    45c0:	80 81       	ld	r24, Z
    45c2:	48 2f       	mov	r20, r24
    45c4:	8b 81       	ldd	r24, Y+3	; 0x03
    45c6:	28 2f       	mov	r18, r24
    45c8:	30 e0       	ldi	r19, 0x00	; 0
    45ca:	81 e0       	ldi	r24, 0x01	; 1
    45cc:	90 e0       	ldi	r25, 0x00	; 0
    45ce:	02 2e       	mov	r0, r18
    45d0:	02 c0       	rjmp	.+4      	; 0x45d6 <DIO_eunmSetPinDirection+0xba>
    45d2:	88 0f       	add	r24, r24
    45d4:	99 1f       	adc	r25, r25
    45d6:	0a 94       	dec	r0
    45d8:	e2 f7       	brpl	.-8      	; 0x45d2 <DIO_eunmSetPinDirection+0xb6>
    45da:	84 2b       	or	r24, r20
    45dc:	8c 93       	st	X, r24
    45de:	a3 c0       	rjmp	.+326    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTC: SET_BIT(DDRC_R,COPY_u8PIN); break;
    45e0:	a4 e3       	ldi	r26, 0x34	; 52
    45e2:	b0 e0       	ldi	r27, 0x00	; 0
    45e4:	e4 e3       	ldi	r30, 0x34	; 52
    45e6:	f0 e0       	ldi	r31, 0x00	; 0
    45e8:	80 81       	ld	r24, Z
    45ea:	48 2f       	mov	r20, r24
    45ec:	8b 81       	ldd	r24, Y+3	; 0x03
    45ee:	28 2f       	mov	r18, r24
    45f0:	30 e0       	ldi	r19, 0x00	; 0
    45f2:	81 e0       	ldi	r24, 0x01	; 1
    45f4:	90 e0       	ldi	r25, 0x00	; 0
    45f6:	02 2e       	mov	r0, r18
    45f8:	02 c0       	rjmp	.+4      	; 0x45fe <DIO_eunmSetPinDirection+0xe2>
    45fa:	88 0f       	add	r24, r24
    45fc:	99 1f       	adc	r25, r25
    45fe:	0a 94       	dec	r0
    4600:	e2 f7       	brpl	.-8      	; 0x45fa <DIO_eunmSetPinDirection+0xde>
    4602:	84 2b       	or	r24, r20
    4604:	8c 93       	st	X, r24
    4606:	8f c0       	rjmp	.+286    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTD: SET_BIT(DDRD_R,COPY_u8PIN); break;
    4608:	a1 e3       	ldi	r26, 0x31	; 49
    460a:	b0 e0       	ldi	r27, 0x00	; 0
    460c:	e1 e3       	ldi	r30, 0x31	; 49
    460e:	f0 e0       	ldi	r31, 0x00	; 0
    4610:	80 81       	ld	r24, Z
    4612:	48 2f       	mov	r20, r24
    4614:	8b 81       	ldd	r24, Y+3	; 0x03
    4616:	28 2f       	mov	r18, r24
    4618:	30 e0       	ldi	r19, 0x00	; 0
    461a:	81 e0       	ldi	r24, 0x01	; 1
    461c:	90 e0       	ldi	r25, 0x00	; 0
    461e:	02 2e       	mov	r0, r18
    4620:	02 c0       	rjmp	.+4      	; 0x4626 <DIO_eunmSetPinDirection+0x10a>
    4622:	88 0f       	add	r24, r24
    4624:	99 1f       	adc	r25, r25
    4626:	0a 94       	dec	r0
    4628:	e2 f7       	brpl	.-8      	; 0x4622 <DIO_eunmSetPinDirection+0x106>
    462a:	84 2b       	or	r24, r20
    462c:	8c 93       	st	X, r24
    462e:	7b c0       	rjmp	.+246    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			}
		}
		else if (COPY_u8Direction == DIO_PIN_INPUT)
    4630:	8c 81       	ldd	r24, Y+4	; 0x04
    4632:	88 23       	and	r24, r24
    4634:	09 f0       	breq	.+2      	; 0x4638 <DIO_eunmSetPinDirection+0x11c>
    4636:	74 c0       	rjmp	.+232    	; 0x4720 <DIO_eunmSetPinDirection+0x204>
		{
			switch(COPY_u8PORT)
    4638:	8a 81       	ldd	r24, Y+2	; 0x02
    463a:	28 2f       	mov	r18, r24
    463c:	30 e0       	ldi	r19, 0x00	; 0
    463e:	3e 83       	std	Y+6, r19	; 0x06
    4640:	2d 83       	std	Y+5, r18	; 0x05
    4642:	8d 81       	ldd	r24, Y+5	; 0x05
    4644:	9e 81       	ldd	r25, Y+6	; 0x06
    4646:	81 30       	cpi	r24, 0x01	; 1
    4648:	91 05       	cpc	r25, r1
    464a:	59 f1       	breq	.+86     	; 0x46a2 <DIO_eunmSetPinDirection+0x186>
    464c:	2d 81       	ldd	r18, Y+5	; 0x05
    464e:	3e 81       	ldd	r19, Y+6	; 0x06
    4650:	22 30       	cpi	r18, 0x02	; 2
    4652:	31 05       	cpc	r19, r1
    4654:	2c f4       	brge	.+10     	; 0x4660 <DIO_eunmSetPinDirection+0x144>
    4656:	8d 81       	ldd	r24, Y+5	; 0x05
    4658:	9e 81       	ldd	r25, Y+6	; 0x06
    465a:	00 97       	sbiw	r24, 0x00	; 0
    465c:	69 f0       	breq	.+26     	; 0x4678 <DIO_eunmSetPinDirection+0x15c>
    465e:	63 c0       	rjmp	.+198    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
    4660:	2d 81       	ldd	r18, Y+5	; 0x05
    4662:	3e 81       	ldd	r19, Y+6	; 0x06
    4664:	22 30       	cpi	r18, 0x02	; 2
    4666:	31 05       	cpc	r19, r1
    4668:	89 f1       	breq	.+98     	; 0x46cc <DIO_eunmSetPinDirection+0x1b0>
    466a:	8d 81       	ldd	r24, Y+5	; 0x05
    466c:	9e 81       	ldd	r25, Y+6	; 0x06
    466e:	83 30       	cpi	r24, 0x03	; 3
    4670:	91 05       	cpc	r25, r1
    4672:	09 f4       	brne	.+2      	; 0x4676 <DIO_eunmSetPinDirection+0x15a>
    4674:	40 c0       	rjmp	.+128    	; 0x46f6 <DIO_eunmSetPinDirection+0x1da>
    4676:	57 c0       	rjmp	.+174    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			{
			case DIO_PORTA: CLR_BIT(DDRA_R,COPY_u8PIN); break;
    4678:	aa e3       	ldi	r26, 0x3A	; 58
    467a:	b0 e0       	ldi	r27, 0x00	; 0
    467c:	ea e3       	ldi	r30, 0x3A	; 58
    467e:	f0 e0       	ldi	r31, 0x00	; 0
    4680:	80 81       	ld	r24, Z
    4682:	48 2f       	mov	r20, r24
    4684:	8b 81       	ldd	r24, Y+3	; 0x03
    4686:	28 2f       	mov	r18, r24
    4688:	30 e0       	ldi	r19, 0x00	; 0
    468a:	81 e0       	ldi	r24, 0x01	; 1
    468c:	90 e0       	ldi	r25, 0x00	; 0
    468e:	02 2e       	mov	r0, r18
    4690:	02 c0       	rjmp	.+4      	; 0x4696 <DIO_eunmSetPinDirection+0x17a>
    4692:	88 0f       	add	r24, r24
    4694:	99 1f       	adc	r25, r25
    4696:	0a 94       	dec	r0
    4698:	e2 f7       	brpl	.-8      	; 0x4692 <DIO_eunmSetPinDirection+0x176>
    469a:	80 95       	com	r24
    469c:	84 23       	and	r24, r20
    469e:	8c 93       	st	X, r24
    46a0:	42 c0       	rjmp	.+132    	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTB: CLR_BIT(DDRB_R,COPY_u8PIN); break;
    46a2:	a7 e3       	ldi	r26, 0x37	; 55
    46a4:	b0 e0       	ldi	r27, 0x00	; 0
    46a6:	e7 e3       	ldi	r30, 0x37	; 55
    46a8:	f0 e0       	ldi	r31, 0x00	; 0
    46aa:	80 81       	ld	r24, Z
    46ac:	48 2f       	mov	r20, r24
    46ae:	8b 81       	ldd	r24, Y+3	; 0x03
    46b0:	28 2f       	mov	r18, r24
    46b2:	30 e0       	ldi	r19, 0x00	; 0
    46b4:	81 e0       	ldi	r24, 0x01	; 1
    46b6:	90 e0       	ldi	r25, 0x00	; 0
    46b8:	02 2e       	mov	r0, r18
    46ba:	02 c0       	rjmp	.+4      	; 0x46c0 <DIO_eunmSetPinDirection+0x1a4>
    46bc:	88 0f       	add	r24, r24
    46be:	99 1f       	adc	r25, r25
    46c0:	0a 94       	dec	r0
    46c2:	e2 f7       	brpl	.-8      	; 0x46bc <DIO_eunmSetPinDirection+0x1a0>
    46c4:	80 95       	com	r24
    46c6:	84 23       	and	r24, r20
    46c8:	8c 93       	st	X, r24
    46ca:	2d c0       	rjmp	.+90     	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTC: CLR_BIT(DDRC_R,COPY_u8PIN); break;
    46cc:	a4 e3       	ldi	r26, 0x34	; 52
    46ce:	b0 e0       	ldi	r27, 0x00	; 0
    46d0:	e4 e3       	ldi	r30, 0x34	; 52
    46d2:	f0 e0       	ldi	r31, 0x00	; 0
    46d4:	80 81       	ld	r24, Z
    46d6:	48 2f       	mov	r20, r24
    46d8:	8b 81       	ldd	r24, Y+3	; 0x03
    46da:	28 2f       	mov	r18, r24
    46dc:	30 e0       	ldi	r19, 0x00	; 0
    46de:	81 e0       	ldi	r24, 0x01	; 1
    46e0:	90 e0       	ldi	r25, 0x00	; 0
    46e2:	02 2e       	mov	r0, r18
    46e4:	02 c0       	rjmp	.+4      	; 0x46ea <DIO_eunmSetPinDirection+0x1ce>
    46e6:	88 0f       	add	r24, r24
    46e8:	99 1f       	adc	r25, r25
    46ea:	0a 94       	dec	r0
    46ec:	e2 f7       	brpl	.-8      	; 0x46e6 <DIO_eunmSetPinDirection+0x1ca>
    46ee:	80 95       	com	r24
    46f0:	84 23       	and	r24, r20
    46f2:	8c 93       	st	X, r24
    46f4:	18 c0       	rjmp	.+48     	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTD: CLR_BIT(DDRD_R,COPY_u8PIN); break;
    46f6:	a1 e3       	ldi	r26, 0x31	; 49
    46f8:	b0 e0       	ldi	r27, 0x00	; 0
    46fa:	e1 e3       	ldi	r30, 0x31	; 49
    46fc:	f0 e0       	ldi	r31, 0x00	; 0
    46fe:	80 81       	ld	r24, Z
    4700:	48 2f       	mov	r20, r24
    4702:	8b 81       	ldd	r24, Y+3	; 0x03
    4704:	28 2f       	mov	r18, r24
    4706:	30 e0       	ldi	r19, 0x00	; 0
    4708:	81 e0       	ldi	r24, 0x01	; 1
    470a:	90 e0       	ldi	r25, 0x00	; 0
    470c:	02 2e       	mov	r0, r18
    470e:	02 c0       	rjmp	.+4      	; 0x4714 <DIO_eunmSetPinDirection+0x1f8>
    4710:	88 0f       	add	r24, r24
    4712:	99 1f       	adc	r25, r25
    4714:	0a 94       	dec	r0
    4716:	e2 f7       	brpl	.-8      	; 0x4710 <DIO_eunmSetPinDirection+0x1f4>
    4718:	80 95       	com	r24
    471a:	84 23       	and	r24, r20
    471c:	8c 93       	st	X, r24
    471e:	03 c0       	rjmp	.+6      	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
			}
		}
		else
		{
			LOC_enumStatus = DIO_NOK;
    4720:	19 82       	std	Y+1, r1	; 0x01
    4722:	01 c0       	rjmp	.+2      	; 0x4726 <DIO_eunmSetPinDirection+0x20a>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    4724:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    4726:	89 81       	ldd	r24, Y+1	; 0x01
}
    4728:	28 96       	adiw	r28, 0x08	; 8
    472a:	0f b6       	in	r0, 0x3f	; 63
    472c:	f8 94       	cli
    472e:	de bf       	out	0x3e, r29	; 62
    4730:	0f be       	out	0x3f, r0	; 63
    4732:	cd bf       	out	0x3d, r28	; 61
    4734:	cf 91       	pop	r28
    4736:	df 91       	pop	r29
    4738:	08 95       	ret

0000473a <DIO_eunmSetPinValue>:
DIO_ErrorStatus DIO_eunmSetPinValue         (u8 COPY_u8PORT ,u8 COPY_u8PIN ,u8 COPY_u8Value     )
{
    473a:	df 93       	push	r29
    473c:	cf 93       	push	r28
    473e:	cd b7       	in	r28, 0x3d	; 61
    4740:	de b7       	in	r29, 0x3e	; 62
    4742:	28 97       	sbiw	r28, 0x08	; 8
    4744:	0f b6       	in	r0, 0x3f	; 63
    4746:	f8 94       	cli
    4748:	de bf       	out	0x3e, r29	; 62
    474a:	0f be       	out	0x3f, r0	; 63
    474c:	cd bf       	out	0x3d, r28	; 61
    474e:	8a 83       	std	Y+2, r24	; 0x02
    4750:	6b 83       	std	Y+3, r22	; 0x03
    4752:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4754:	81 e0       	ldi	r24, 0x01	; 1
    4756:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD)&&(COPY_u8PIN <= DIO_PIN7))
    4758:	8a 81       	ldd	r24, Y+2	; 0x02
    475a:	84 30       	cpi	r24, 0x04	; 4
    475c:	08 f0       	brcs	.+2      	; 0x4760 <DIO_eunmSetPinValue+0x26>
    475e:	f1 c0       	rjmp	.+482    	; 0x4942 <DIO_eunmSetPinValue+0x208>
    4760:	8b 81       	ldd	r24, Y+3	; 0x03
    4762:	88 30       	cpi	r24, 0x08	; 8
    4764:	08 f0       	brcs	.+2      	; 0x4768 <DIO_eunmSetPinValue+0x2e>
    4766:	ed c0       	rjmp	.+474    	; 0x4942 <DIO_eunmSetPinValue+0x208>
	{
		if (COPY_u8Value == DIO_PIN_HIGH)
    4768:	8c 81       	ldd	r24, Y+4	; 0x04
    476a:	81 30       	cpi	r24, 0x01	; 1
    476c:	09 f0       	breq	.+2      	; 0x4770 <DIO_eunmSetPinValue+0x36>
    476e:	6f c0       	rjmp	.+222    	; 0x484e <DIO_eunmSetPinValue+0x114>
		{
			switch(COPY_u8PORT)
    4770:	8a 81       	ldd	r24, Y+2	; 0x02
    4772:	28 2f       	mov	r18, r24
    4774:	30 e0       	ldi	r19, 0x00	; 0
    4776:	38 87       	std	Y+8, r19	; 0x08
    4778:	2f 83       	std	Y+7, r18	; 0x07
    477a:	8f 81       	ldd	r24, Y+7	; 0x07
    477c:	98 85       	ldd	r25, Y+8	; 0x08
    477e:	81 30       	cpi	r24, 0x01	; 1
    4780:	91 05       	cpc	r25, r1
    4782:	49 f1       	breq	.+82     	; 0x47d6 <DIO_eunmSetPinValue+0x9c>
    4784:	2f 81       	ldd	r18, Y+7	; 0x07
    4786:	38 85       	ldd	r19, Y+8	; 0x08
    4788:	22 30       	cpi	r18, 0x02	; 2
    478a:	31 05       	cpc	r19, r1
    478c:	2c f4       	brge	.+10     	; 0x4798 <DIO_eunmSetPinValue+0x5e>
    478e:	8f 81       	ldd	r24, Y+7	; 0x07
    4790:	98 85       	ldd	r25, Y+8	; 0x08
    4792:	00 97       	sbiw	r24, 0x00	; 0
    4794:	61 f0       	breq	.+24     	; 0x47ae <DIO_eunmSetPinValue+0x74>
    4796:	d6 c0       	rjmp	.+428    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
    4798:	2f 81       	ldd	r18, Y+7	; 0x07
    479a:	38 85       	ldd	r19, Y+8	; 0x08
    479c:	22 30       	cpi	r18, 0x02	; 2
    479e:	31 05       	cpc	r19, r1
    47a0:	71 f1       	breq	.+92     	; 0x47fe <DIO_eunmSetPinValue+0xc4>
    47a2:	8f 81       	ldd	r24, Y+7	; 0x07
    47a4:	98 85       	ldd	r25, Y+8	; 0x08
    47a6:	83 30       	cpi	r24, 0x03	; 3
    47a8:	91 05       	cpc	r25, r1
    47aa:	e9 f1       	breq	.+122    	; 0x4826 <DIO_eunmSetPinValue+0xec>
    47ac:	cb c0       	rjmp	.+406    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			{
			case DIO_PORTA: SET_BIT(PORTA_R,COPY_u8PIN);break;
    47ae:	ab e3       	ldi	r26, 0x3B	; 59
    47b0:	b0 e0       	ldi	r27, 0x00	; 0
    47b2:	eb e3       	ldi	r30, 0x3B	; 59
    47b4:	f0 e0       	ldi	r31, 0x00	; 0
    47b6:	80 81       	ld	r24, Z
    47b8:	48 2f       	mov	r20, r24
    47ba:	8b 81       	ldd	r24, Y+3	; 0x03
    47bc:	28 2f       	mov	r18, r24
    47be:	30 e0       	ldi	r19, 0x00	; 0
    47c0:	81 e0       	ldi	r24, 0x01	; 1
    47c2:	90 e0       	ldi	r25, 0x00	; 0
    47c4:	02 2e       	mov	r0, r18
    47c6:	02 c0       	rjmp	.+4      	; 0x47cc <DIO_eunmSetPinValue+0x92>
    47c8:	88 0f       	add	r24, r24
    47ca:	99 1f       	adc	r25, r25
    47cc:	0a 94       	dec	r0
    47ce:	e2 f7       	brpl	.-8      	; 0x47c8 <DIO_eunmSetPinValue+0x8e>
    47d0:	84 2b       	or	r24, r20
    47d2:	8c 93       	st	X, r24
    47d4:	b7 c0       	rjmp	.+366    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTB: SET_BIT(PORTB_R,COPY_u8PIN);break;
    47d6:	a8 e3       	ldi	r26, 0x38	; 56
    47d8:	b0 e0       	ldi	r27, 0x00	; 0
    47da:	e8 e3       	ldi	r30, 0x38	; 56
    47dc:	f0 e0       	ldi	r31, 0x00	; 0
    47de:	80 81       	ld	r24, Z
    47e0:	48 2f       	mov	r20, r24
    47e2:	8b 81       	ldd	r24, Y+3	; 0x03
    47e4:	28 2f       	mov	r18, r24
    47e6:	30 e0       	ldi	r19, 0x00	; 0
    47e8:	81 e0       	ldi	r24, 0x01	; 1
    47ea:	90 e0       	ldi	r25, 0x00	; 0
    47ec:	02 2e       	mov	r0, r18
    47ee:	02 c0       	rjmp	.+4      	; 0x47f4 <DIO_eunmSetPinValue+0xba>
    47f0:	88 0f       	add	r24, r24
    47f2:	99 1f       	adc	r25, r25
    47f4:	0a 94       	dec	r0
    47f6:	e2 f7       	brpl	.-8      	; 0x47f0 <DIO_eunmSetPinValue+0xb6>
    47f8:	84 2b       	or	r24, r20
    47fa:	8c 93       	st	X, r24
    47fc:	a3 c0       	rjmp	.+326    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTC: SET_BIT(PORTC_R,COPY_u8PIN);break;
    47fe:	a5 e3       	ldi	r26, 0x35	; 53
    4800:	b0 e0       	ldi	r27, 0x00	; 0
    4802:	e5 e3       	ldi	r30, 0x35	; 53
    4804:	f0 e0       	ldi	r31, 0x00	; 0
    4806:	80 81       	ld	r24, Z
    4808:	48 2f       	mov	r20, r24
    480a:	8b 81       	ldd	r24, Y+3	; 0x03
    480c:	28 2f       	mov	r18, r24
    480e:	30 e0       	ldi	r19, 0x00	; 0
    4810:	81 e0       	ldi	r24, 0x01	; 1
    4812:	90 e0       	ldi	r25, 0x00	; 0
    4814:	02 2e       	mov	r0, r18
    4816:	02 c0       	rjmp	.+4      	; 0x481c <DIO_eunmSetPinValue+0xe2>
    4818:	88 0f       	add	r24, r24
    481a:	99 1f       	adc	r25, r25
    481c:	0a 94       	dec	r0
    481e:	e2 f7       	brpl	.-8      	; 0x4818 <DIO_eunmSetPinValue+0xde>
    4820:	84 2b       	or	r24, r20
    4822:	8c 93       	st	X, r24
    4824:	8f c0       	rjmp	.+286    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTD: SET_BIT(PORTD_R,COPY_u8PIN);break;
    4826:	a2 e3       	ldi	r26, 0x32	; 50
    4828:	b0 e0       	ldi	r27, 0x00	; 0
    482a:	e2 e3       	ldi	r30, 0x32	; 50
    482c:	f0 e0       	ldi	r31, 0x00	; 0
    482e:	80 81       	ld	r24, Z
    4830:	48 2f       	mov	r20, r24
    4832:	8b 81       	ldd	r24, Y+3	; 0x03
    4834:	28 2f       	mov	r18, r24
    4836:	30 e0       	ldi	r19, 0x00	; 0
    4838:	81 e0       	ldi	r24, 0x01	; 1
    483a:	90 e0       	ldi	r25, 0x00	; 0
    483c:	02 2e       	mov	r0, r18
    483e:	02 c0       	rjmp	.+4      	; 0x4844 <DIO_eunmSetPinValue+0x10a>
    4840:	88 0f       	add	r24, r24
    4842:	99 1f       	adc	r25, r25
    4844:	0a 94       	dec	r0
    4846:	e2 f7       	brpl	.-8      	; 0x4840 <DIO_eunmSetPinValue+0x106>
    4848:	84 2b       	or	r24, r20
    484a:	8c 93       	st	X, r24
    484c:	7b c0       	rjmp	.+246    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			}
		}
		else if (COPY_u8Value == DIO_PIN_LOW)
    484e:	8c 81       	ldd	r24, Y+4	; 0x04
    4850:	88 23       	and	r24, r24
    4852:	09 f0       	breq	.+2      	; 0x4856 <DIO_eunmSetPinValue+0x11c>
    4854:	74 c0       	rjmp	.+232    	; 0x493e <DIO_eunmSetPinValue+0x204>
		{
			switch(COPY_u8PORT)
    4856:	8a 81       	ldd	r24, Y+2	; 0x02
    4858:	28 2f       	mov	r18, r24
    485a:	30 e0       	ldi	r19, 0x00	; 0
    485c:	3e 83       	std	Y+6, r19	; 0x06
    485e:	2d 83       	std	Y+5, r18	; 0x05
    4860:	8d 81       	ldd	r24, Y+5	; 0x05
    4862:	9e 81       	ldd	r25, Y+6	; 0x06
    4864:	81 30       	cpi	r24, 0x01	; 1
    4866:	91 05       	cpc	r25, r1
    4868:	59 f1       	breq	.+86     	; 0x48c0 <DIO_eunmSetPinValue+0x186>
    486a:	2d 81       	ldd	r18, Y+5	; 0x05
    486c:	3e 81       	ldd	r19, Y+6	; 0x06
    486e:	22 30       	cpi	r18, 0x02	; 2
    4870:	31 05       	cpc	r19, r1
    4872:	2c f4       	brge	.+10     	; 0x487e <DIO_eunmSetPinValue+0x144>
    4874:	8d 81       	ldd	r24, Y+5	; 0x05
    4876:	9e 81       	ldd	r25, Y+6	; 0x06
    4878:	00 97       	sbiw	r24, 0x00	; 0
    487a:	69 f0       	breq	.+26     	; 0x4896 <DIO_eunmSetPinValue+0x15c>
    487c:	63 c0       	rjmp	.+198    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
    487e:	2d 81       	ldd	r18, Y+5	; 0x05
    4880:	3e 81       	ldd	r19, Y+6	; 0x06
    4882:	22 30       	cpi	r18, 0x02	; 2
    4884:	31 05       	cpc	r19, r1
    4886:	89 f1       	breq	.+98     	; 0x48ea <DIO_eunmSetPinValue+0x1b0>
    4888:	8d 81       	ldd	r24, Y+5	; 0x05
    488a:	9e 81       	ldd	r25, Y+6	; 0x06
    488c:	83 30       	cpi	r24, 0x03	; 3
    488e:	91 05       	cpc	r25, r1
    4890:	09 f4       	brne	.+2      	; 0x4894 <DIO_eunmSetPinValue+0x15a>
    4892:	40 c0       	rjmp	.+128    	; 0x4914 <DIO_eunmSetPinValue+0x1da>
    4894:	57 c0       	rjmp	.+174    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			{
			case DIO_PORTA: CLR_BIT(PORTA_R,COPY_u8PIN);break;
    4896:	ab e3       	ldi	r26, 0x3B	; 59
    4898:	b0 e0       	ldi	r27, 0x00	; 0
    489a:	eb e3       	ldi	r30, 0x3B	; 59
    489c:	f0 e0       	ldi	r31, 0x00	; 0
    489e:	80 81       	ld	r24, Z
    48a0:	48 2f       	mov	r20, r24
    48a2:	8b 81       	ldd	r24, Y+3	; 0x03
    48a4:	28 2f       	mov	r18, r24
    48a6:	30 e0       	ldi	r19, 0x00	; 0
    48a8:	81 e0       	ldi	r24, 0x01	; 1
    48aa:	90 e0       	ldi	r25, 0x00	; 0
    48ac:	02 2e       	mov	r0, r18
    48ae:	02 c0       	rjmp	.+4      	; 0x48b4 <DIO_eunmSetPinValue+0x17a>
    48b0:	88 0f       	add	r24, r24
    48b2:	99 1f       	adc	r25, r25
    48b4:	0a 94       	dec	r0
    48b6:	e2 f7       	brpl	.-8      	; 0x48b0 <DIO_eunmSetPinValue+0x176>
    48b8:	80 95       	com	r24
    48ba:	84 23       	and	r24, r20
    48bc:	8c 93       	st	X, r24
    48be:	42 c0       	rjmp	.+132    	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTB: CLR_BIT(PORTB_R,COPY_u8PIN);break;
    48c0:	a8 e3       	ldi	r26, 0x38	; 56
    48c2:	b0 e0       	ldi	r27, 0x00	; 0
    48c4:	e8 e3       	ldi	r30, 0x38	; 56
    48c6:	f0 e0       	ldi	r31, 0x00	; 0
    48c8:	80 81       	ld	r24, Z
    48ca:	48 2f       	mov	r20, r24
    48cc:	8b 81       	ldd	r24, Y+3	; 0x03
    48ce:	28 2f       	mov	r18, r24
    48d0:	30 e0       	ldi	r19, 0x00	; 0
    48d2:	81 e0       	ldi	r24, 0x01	; 1
    48d4:	90 e0       	ldi	r25, 0x00	; 0
    48d6:	02 2e       	mov	r0, r18
    48d8:	02 c0       	rjmp	.+4      	; 0x48de <DIO_eunmSetPinValue+0x1a4>
    48da:	88 0f       	add	r24, r24
    48dc:	99 1f       	adc	r25, r25
    48de:	0a 94       	dec	r0
    48e0:	e2 f7       	brpl	.-8      	; 0x48da <DIO_eunmSetPinValue+0x1a0>
    48e2:	80 95       	com	r24
    48e4:	84 23       	and	r24, r20
    48e6:	8c 93       	st	X, r24
    48e8:	2d c0       	rjmp	.+90     	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTC: CLR_BIT(PORTC_R,COPY_u8PIN);break;
    48ea:	a5 e3       	ldi	r26, 0x35	; 53
    48ec:	b0 e0       	ldi	r27, 0x00	; 0
    48ee:	e5 e3       	ldi	r30, 0x35	; 53
    48f0:	f0 e0       	ldi	r31, 0x00	; 0
    48f2:	80 81       	ld	r24, Z
    48f4:	48 2f       	mov	r20, r24
    48f6:	8b 81       	ldd	r24, Y+3	; 0x03
    48f8:	28 2f       	mov	r18, r24
    48fa:	30 e0       	ldi	r19, 0x00	; 0
    48fc:	81 e0       	ldi	r24, 0x01	; 1
    48fe:	90 e0       	ldi	r25, 0x00	; 0
    4900:	02 2e       	mov	r0, r18
    4902:	02 c0       	rjmp	.+4      	; 0x4908 <DIO_eunmSetPinValue+0x1ce>
    4904:	88 0f       	add	r24, r24
    4906:	99 1f       	adc	r25, r25
    4908:	0a 94       	dec	r0
    490a:	e2 f7       	brpl	.-8      	; 0x4904 <DIO_eunmSetPinValue+0x1ca>
    490c:	80 95       	com	r24
    490e:	84 23       	and	r24, r20
    4910:	8c 93       	st	X, r24
    4912:	18 c0       	rjmp	.+48     	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTD: CLR_BIT(PORTD_R,COPY_u8PIN);break;
    4914:	a2 e3       	ldi	r26, 0x32	; 50
    4916:	b0 e0       	ldi	r27, 0x00	; 0
    4918:	e2 e3       	ldi	r30, 0x32	; 50
    491a:	f0 e0       	ldi	r31, 0x00	; 0
    491c:	80 81       	ld	r24, Z
    491e:	48 2f       	mov	r20, r24
    4920:	8b 81       	ldd	r24, Y+3	; 0x03
    4922:	28 2f       	mov	r18, r24
    4924:	30 e0       	ldi	r19, 0x00	; 0
    4926:	81 e0       	ldi	r24, 0x01	; 1
    4928:	90 e0       	ldi	r25, 0x00	; 0
    492a:	02 2e       	mov	r0, r18
    492c:	02 c0       	rjmp	.+4      	; 0x4932 <DIO_eunmSetPinValue+0x1f8>
    492e:	88 0f       	add	r24, r24
    4930:	99 1f       	adc	r25, r25
    4932:	0a 94       	dec	r0
    4934:	e2 f7       	brpl	.-8      	; 0x492e <DIO_eunmSetPinValue+0x1f4>
    4936:	80 95       	com	r24
    4938:	84 23       	and	r24, r20
    493a:	8c 93       	st	X, r24
    493c:	03 c0       	rjmp	.+6      	; 0x4944 <DIO_eunmSetPinValue+0x20a>
			}
		}
		else
		{
			LOC_enumStatus = DIO_NOK ;
    493e:	19 82       	std	Y+1, r1	; 0x01
    4940:	01 c0       	rjmp	.+2      	; 0x4944 <DIO_eunmSetPinValue+0x20a>
		}
	}

	else
	{
		LOC_enumStatus = DIO_NOK ;
    4942:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumStatus ;
    4944:	89 81       	ldd	r24, Y+1	; 0x01
}
    4946:	28 96       	adiw	r28, 0x08	; 8
    4948:	0f b6       	in	r0, 0x3f	; 63
    494a:	f8 94       	cli
    494c:	de bf       	out	0x3e, r29	; 62
    494e:	0f be       	out	0x3f, r0	; 63
    4950:	cd bf       	out	0x3d, r28	; 61
    4952:	cf 91       	pop	r28
    4954:	df 91       	pop	r29
    4956:	08 95       	ret

00004958 <DIO_eunmGetPin>:
DIO_ErrorStatus DIO_eunmGetPin              (u8 COPY_u8PORT ,u8 COPY_u8PIN  ,u8 *COPY_PtrData   )
{
    4958:	df 93       	push	r29
    495a:	cf 93       	push	r28
    495c:	cd b7       	in	r28, 0x3d	; 61
    495e:	de b7       	in	r29, 0x3e	; 62
    4960:	27 97       	sbiw	r28, 0x07	; 7
    4962:	0f b6       	in	r0, 0x3f	; 63
    4964:	f8 94       	cli
    4966:	de bf       	out	0x3e, r29	; 62
    4968:	0f be       	out	0x3f, r0	; 63
    496a:	cd bf       	out	0x3d, r28	; 61
    496c:	8a 83       	std	Y+2, r24	; 0x02
    496e:	6b 83       	std	Y+3, r22	; 0x03
    4970:	5d 83       	std	Y+5, r21	; 0x05
    4972:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4974:	81 e0       	ldi	r24, 0x01	; 1
    4976:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD)&&(COPY_u8PIN <= DIO_PIN7))
    4978:	8a 81       	ldd	r24, Y+2	; 0x02
    497a:	84 30       	cpi	r24, 0x04	; 4
    497c:	08 f0       	brcs	.+2      	; 0x4980 <DIO_eunmGetPin+0x28>
    497e:	a6 c0       	rjmp	.+332    	; 0x4acc <DIO_eunmGetPin+0x174>
    4980:	8b 81       	ldd	r24, Y+3	; 0x03
    4982:	88 30       	cpi	r24, 0x08	; 8
    4984:	08 f0       	brcs	.+2      	; 0x4988 <DIO_eunmGetPin+0x30>
    4986:	a2 c0       	rjmp	.+324    	; 0x4acc <DIO_eunmGetPin+0x174>
	{
		switch (COPY_u8PORT)
    4988:	8a 81       	ldd	r24, Y+2	; 0x02
    498a:	28 2f       	mov	r18, r24
    498c:	30 e0       	ldi	r19, 0x00	; 0
    498e:	3f 83       	std	Y+7, r19	; 0x07
    4990:	2e 83       	std	Y+6, r18	; 0x06
    4992:	4e 81       	ldd	r20, Y+6	; 0x06
    4994:	5f 81       	ldd	r21, Y+7	; 0x07
    4996:	41 30       	cpi	r20, 0x01	; 1
    4998:	51 05       	cpc	r21, r1
    499a:	c1 f1       	breq	.+112    	; 0x4a0c <DIO_eunmGetPin+0xb4>
    499c:	8e 81       	ldd	r24, Y+6	; 0x06
    499e:	9f 81       	ldd	r25, Y+7	; 0x07
    49a0:	82 30       	cpi	r24, 0x02	; 2
    49a2:	91 05       	cpc	r25, r1
    49a4:	34 f4       	brge	.+12     	; 0x49b2 <DIO_eunmGetPin+0x5a>
    49a6:	2e 81       	ldd	r18, Y+6	; 0x06
    49a8:	3f 81       	ldd	r19, Y+7	; 0x07
    49aa:	21 15       	cp	r18, r1
    49ac:	31 05       	cpc	r19, r1
    49ae:	71 f0       	breq	.+28     	; 0x49cc <DIO_eunmGetPin+0x74>
    49b0:	8e c0       	rjmp	.+284    	; 0x4ace <DIO_eunmGetPin+0x176>
    49b2:	4e 81       	ldd	r20, Y+6	; 0x06
    49b4:	5f 81       	ldd	r21, Y+7	; 0x07
    49b6:	42 30       	cpi	r20, 0x02	; 2
    49b8:	51 05       	cpc	r21, r1
    49ba:	09 f4       	brne	.+2      	; 0x49be <DIO_eunmGetPin+0x66>
    49bc:	47 c0       	rjmp	.+142    	; 0x4a4c <DIO_eunmGetPin+0xf4>
    49be:	8e 81       	ldd	r24, Y+6	; 0x06
    49c0:	9f 81       	ldd	r25, Y+7	; 0x07
    49c2:	83 30       	cpi	r24, 0x03	; 3
    49c4:	91 05       	cpc	r25, r1
    49c6:	09 f4       	brne	.+2      	; 0x49ca <DIO_eunmGetPin+0x72>
    49c8:	61 c0       	rjmp	.+194    	; 0x4a8c <DIO_eunmGetPin+0x134>
    49ca:	81 c0       	rjmp	.+258    	; 0x4ace <DIO_eunmGetPin+0x176>
		{
		case DIO_PORTA: *COPY_PtrData = RED_BIT(PINA_R,COPY_u8PIN);break;
    49cc:	e9 e3       	ldi	r30, 0x39	; 57
    49ce:	f0 e0       	ldi	r31, 0x00	; 0
    49d0:	80 81       	ld	r24, Z
    49d2:	48 2f       	mov	r20, r24
    49d4:	50 e0       	ldi	r21, 0x00	; 0
    49d6:	8b 81       	ldd	r24, Y+3	; 0x03
    49d8:	28 2f       	mov	r18, r24
    49da:	30 e0       	ldi	r19, 0x00	; 0
    49dc:	81 e0       	ldi	r24, 0x01	; 1
    49de:	90 e0       	ldi	r25, 0x00	; 0
    49e0:	02 c0       	rjmp	.+4      	; 0x49e6 <DIO_eunmGetPin+0x8e>
    49e2:	88 0f       	add	r24, r24
    49e4:	99 1f       	adc	r25, r25
    49e6:	2a 95       	dec	r18
    49e8:	e2 f7       	brpl	.-8      	; 0x49e2 <DIO_eunmGetPin+0x8a>
    49ea:	9a 01       	movw	r18, r20
    49ec:	28 23       	and	r18, r24
    49ee:	39 23       	and	r19, r25
    49f0:	8b 81       	ldd	r24, Y+3	; 0x03
    49f2:	88 2f       	mov	r24, r24
    49f4:	90 e0       	ldi	r25, 0x00	; 0
    49f6:	a9 01       	movw	r20, r18
    49f8:	02 c0       	rjmp	.+4      	; 0x49fe <DIO_eunmGetPin+0xa6>
    49fa:	55 95       	asr	r21
    49fc:	47 95       	ror	r20
    49fe:	8a 95       	dec	r24
    4a00:	e2 f7       	brpl	.-8      	; 0x49fa <DIO_eunmGetPin+0xa2>
    4a02:	ca 01       	movw	r24, r20
    4a04:	ec 81       	ldd	r30, Y+4	; 0x04
    4a06:	fd 81       	ldd	r31, Y+5	; 0x05
    4a08:	80 83       	st	Z, r24
    4a0a:	61 c0       	rjmp	.+194    	; 0x4ace <DIO_eunmGetPin+0x176>
		case DIO_PORTB: *COPY_PtrData = RED_BIT(PINB_R,COPY_u8PIN);break;
    4a0c:	e6 e3       	ldi	r30, 0x36	; 54
    4a0e:	f0 e0       	ldi	r31, 0x00	; 0
    4a10:	80 81       	ld	r24, Z
    4a12:	48 2f       	mov	r20, r24
    4a14:	50 e0       	ldi	r21, 0x00	; 0
    4a16:	8b 81       	ldd	r24, Y+3	; 0x03
    4a18:	28 2f       	mov	r18, r24
    4a1a:	30 e0       	ldi	r19, 0x00	; 0
    4a1c:	81 e0       	ldi	r24, 0x01	; 1
    4a1e:	90 e0       	ldi	r25, 0x00	; 0
    4a20:	02 c0       	rjmp	.+4      	; 0x4a26 <DIO_eunmGetPin+0xce>
    4a22:	88 0f       	add	r24, r24
    4a24:	99 1f       	adc	r25, r25
    4a26:	2a 95       	dec	r18
    4a28:	e2 f7       	brpl	.-8      	; 0x4a22 <DIO_eunmGetPin+0xca>
    4a2a:	9a 01       	movw	r18, r20
    4a2c:	28 23       	and	r18, r24
    4a2e:	39 23       	and	r19, r25
    4a30:	8b 81       	ldd	r24, Y+3	; 0x03
    4a32:	88 2f       	mov	r24, r24
    4a34:	90 e0       	ldi	r25, 0x00	; 0
    4a36:	a9 01       	movw	r20, r18
    4a38:	02 c0       	rjmp	.+4      	; 0x4a3e <DIO_eunmGetPin+0xe6>
    4a3a:	55 95       	asr	r21
    4a3c:	47 95       	ror	r20
    4a3e:	8a 95       	dec	r24
    4a40:	e2 f7       	brpl	.-8      	; 0x4a3a <DIO_eunmGetPin+0xe2>
    4a42:	ca 01       	movw	r24, r20
    4a44:	ec 81       	ldd	r30, Y+4	; 0x04
    4a46:	fd 81       	ldd	r31, Y+5	; 0x05
    4a48:	80 83       	st	Z, r24
    4a4a:	41 c0       	rjmp	.+130    	; 0x4ace <DIO_eunmGetPin+0x176>
		case DIO_PORTC: *COPY_PtrData = RED_BIT(PINC_R,COPY_u8PIN);break;
    4a4c:	e3 e3       	ldi	r30, 0x33	; 51
    4a4e:	f0 e0       	ldi	r31, 0x00	; 0
    4a50:	80 81       	ld	r24, Z
    4a52:	48 2f       	mov	r20, r24
    4a54:	50 e0       	ldi	r21, 0x00	; 0
    4a56:	8b 81       	ldd	r24, Y+3	; 0x03
    4a58:	28 2f       	mov	r18, r24
    4a5a:	30 e0       	ldi	r19, 0x00	; 0
    4a5c:	81 e0       	ldi	r24, 0x01	; 1
    4a5e:	90 e0       	ldi	r25, 0x00	; 0
    4a60:	02 c0       	rjmp	.+4      	; 0x4a66 <DIO_eunmGetPin+0x10e>
    4a62:	88 0f       	add	r24, r24
    4a64:	99 1f       	adc	r25, r25
    4a66:	2a 95       	dec	r18
    4a68:	e2 f7       	brpl	.-8      	; 0x4a62 <DIO_eunmGetPin+0x10a>
    4a6a:	9a 01       	movw	r18, r20
    4a6c:	28 23       	and	r18, r24
    4a6e:	39 23       	and	r19, r25
    4a70:	8b 81       	ldd	r24, Y+3	; 0x03
    4a72:	88 2f       	mov	r24, r24
    4a74:	90 e0       	ldi	r25, 0x00	; 0
    4a76:	a9 01       	movw	r20, r18
    4a78:	02 c0       	rjmp	.+4      	; 0x4a7e <DIO_eunmGetPin+0x126>
    4a7a:	55 95       	asr	r21
    4a7c:	47 95       	ror	r20
    4a7e:	8a 95       	dec	r24
    4a80:	e2 f7       	brpl	.-8      	; 0x4a7a <DIO_eunmGetPin+0x122>
    4a82:	ca 01       	movw	r24, r20
    4a84:	ec 81       	ldd	r30, Y+4	; 0x04
    4a86:	fd 81       	ldd	r31, Y+5	; 0x05
    4a88:	80 83       	st	Z, r24
    4a8a:	21 c0       	rjmp	.+66     	; 0x4ace <DIO_eunmGetPin+0x176>
		case DIO_PORTD: *COPY_PtrData = RED_BIT(PIND_R,COPY_u8PIN);break;
    4a8c:	e0 e3       	ldi	r30, 0x30	; 48
    4a8e:	f0 e0       	ldi	r31, 0x00	; 0
    4a90:	80 81       	ld	r24, Z
    4a92:	48 2f       	mov	r20, r24
    4a94:	50 e0       	ldi	r21, 0x00	; 0
    4a96:	8b 81       	ldd	r24, Y+3	; 0x03
    4a98:	28 2f       	mov	r18, r24
    4a9a:	30 e0       	ldi	r19, 0x00	; 0
    4a9c:	81 e0       	ldi	r24, 0x01	; 1
    4a9e:	90 e0       	ldi	r25, 0x00	; 0
    4aa0:	02 c0       	rjmp	.+4      	; 0x4aa6 <DIO_eunmGetPin+0x14e>
    4aa2:	88 0f       	add	r24, r24
    4aa4:	99 1f       	adc	r25, r25
    4aa6:	2a 95       	dec	r18
    4aa8:	e2 f7       	brpl	.-8      	; 0x4aa2 <DIO_eunmGetPin+0x14a>
    4aaa:	9a 01       	movw	r18, r20
    4aac:	28 23       	and	r18, r24
    4aae:	39 23       	and	r19, r25
    4ab0:	8b 81       	ldd	r24, Y+3	; 0x03
    4ab2:	88 2f       	mov	r24, r24
    4ab4:	90 e0       	ldi	r25, 0x00	; 0
    4ab6:	a9 01       	movw	r20, r18
    4ab8:	02 c0       	rjmp	.+4      	; 0x4abe <DIO_eunmGetPin+0x166>
    4aba:	55 95       	asr	r21
    4abc:	47 95       	ror	r20
    4abe:	8a 95       	dec	r24
    4ac0:	e2 f7       	brpl	.-8      	; 0x4aba <DIO_eunmGetPin+0x162>
    4ac2:	ca 01       	movw	r24, r20
    4ac4:	ec 81       	ldd	r30, Y+4	; 0x04
    4ac6:	fd 81       	ldd	r31, Y+5	; 0x05
    4ac8:	80 83       	st	Z, r24
    4aca:	01 c0       	rjmp	.+2      	; 0x4ace <DIO_eunmGetPin+0x176>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    4acc:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    4ace:	89 81       	ldd	r24, Y+1	; 0x01
}
    4ad0:	27 96       	adiw	r28, 0x07	; 7
    4ad2:	0f b6       	in	r0, 0x3f	; 63
    4ad4:	f8 94       	cli
    4ad6:	de bf       	out	0x3e, r29	; 62
    4ad8:	0f be       	out	0x3f, r0	; 63
    4ada:	cd bf       	out	0x3d, r28	; 61
    4adc:	cf 91       	pop	r28
    4ade:	df 91       	pop	r29
    4ae0:	08 95       	ret

00004ae2 <DIO_eunmTogglePin>:
DIO_ErrorStatus DIO_eunmTogglePin           (u8 COPY_u8PORT ,u8 COPY_u8PIN                      )
{
    4ae2:	df 93       	push	r29
    4ae4:	cf 93       	push	r28
    4ae6:	00 d0       	rcall	.+0      	; 0x4ae8 <DIO_eunmTogglePin+0x6>
    4ae8:	00 d0       	rcall	.+0      	; 0x4aea <DIO_eunmTogglePin+0x8>
    4aea:	0f 92       	push	r0
    4aec:	cd b7       	in	r28, 0x3d	; 61
    4aee:	de b7       	in	r29, 0x3e	; 62
    4af0:	8a 83       	std	Y+2, r24	; 0x02
    4af2:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4af4:	81 e0       	ldi	r24, 0x01	; 1
    4af6:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD)&&(COPY_u8PIN <= DIO_PIN7))
    4af8:	8a 81       	ldd	r24, Y+2	; 0x02
    4afa:	84 30       	cpi	r24, 0x04	; 4
    4afc:	08 f0       	brcs	.+2      	; 0x4b00 <DIO_eunmTogglePin+0x1e>
    4afe:	73 c0       	rjmp	.+230    	; 0x4be6 <DIO_eunmTogglePin+0x104>
    4b00:	8b 81       	ldd	r24, Y+3	; 0x03
    4b02:	88 30       	cpi	r24, 0x08	; 8
    4b04:	08 f0       	brcs	.+2      	; 0x4b08 <DIO_eunmTogglePin+0x26>
    4b06:	6f c0       	rjmp	.+222    	; 0x4be6 <DIO_eunmTogglePin+0x104>
	{
		switch (COPY_u8PORT)
    4b08:	8a 81       	ldd	r24, Y+2	; 0x02
    4b0a:	28 2f       	mov	r18, r24
    4b0c:	30 e0       	ldi	r19, 0x00	; 0
    4b0e:	3d 83       	std	Y+5, r19	; 0x05
    4b10:	2c 83       	std	Y+4, r18	; 0x04
    4b12:	8c 81       	ldd	r24, Y+4	; 0x04
    4b14:	9d 81       	ldd	r25, Y+5	; 0x05
    4b16:	81 30       	cpi	r24, 0x01	; 1
    4b18:	91 05       	cpc	r25, r1
    4b1a:	49 f1       	breq	.+82     	; 0x4b6e <DIO_eunmTogglePin+0x8c>
    4b1c:	2c 81       	ldd	r18, Y+4	; 0x04
    4b1e:	3d 81       	ldd	r19, Y+5	; 0x05
    4b20:	22 30       	cpi	r18, 0x02	; 2
    4b22:	31 05       	cpc	r19, r1
    4b24:	2c f4       	brge	.+10     	; 0x4b30 <DIO_eunmTogglePin+0x4e>
    4b26:	8c 81       	ldd	r24, Y+4	; 0x04
    4b28:	9d 81       	ldd	r25, Y+5	; 0x05
    4b2a:	00 97       	sbiw	r24, 0x00	; 0
    4b2c:	61 f0       	breq	.+24     	; 0x4b46 <DIO_eunmTogglePin+0x64>
    4b2e:	5c c0       	rjmp	.+184    	; 0x4be8 <DIO_eunmTogglePin+0x106>
    4b30:	2c 81       	ldd	r18, Y+4	; 0x04
    4b32:	3d 81       	ldd	r19, Y+5	; 0x05
    4b34:	22 30       	cpi	r18, 0x02	; 2
    4b36:	31 05       	cpc	r19, r1
    4b38:	71 f1       	breq	.+92     	; 0x4b96 <DIO_eunmTogglePin+0xb4>
    4b3a:	8c 81       	ldd	r24, Y+4	; 0x04
    4b3c:	9d 81       	ldd	r25, Y+5	; 0x05
    4b3e:	83 30       	cpi	r24, 0x03	; 3
    4b40:	91 05       	cpc	r25, r1
    4b42:	e9 f1       	breq	.+122    	; 0x4bbe <DIO_eunmTogglePin+0xdc>
    4b44:	51 c0       	rjmp	.+162    	; 0x4be8 <DIO_eunmTogglePin+0x106>
		{
		case DIO_PORTA: TOG_BIT(PORTA_R,COPY_u8PIN);break;
    4b46:	ab e3       	ldi	r26, 0x3B	; 59
    4b48:	b0 e0       	ldi	r27, 0x00	; 0
    4b4a:	eb e3       	ldi	r30, 0x3B	; 59
    4b4c:	f0 e0       	ldi	r31, 0x00	; 0
    4b4e:	80 81       	ld	r24, Z
    4b50:	48 2f       	mov	r20, r24
    4b52:	8b 81       	ldd	r24, Y+3	; 0x03
    4b54:	28 2f       	mov	r18, r24
    4b56:	30 e0       	ldi	r19, 0x00	; 0
    4b58:	81 e0       	ldi	r24, 0x01	; 1
    4b5a:	90 e0       	ldi	r25, 0x00	; 0
    4b5c:	02 2e       	mov	r0, r18
    4b5e:	02 c0       	rjmp	.+4      	; 0x4b64 <DIO_eunmTogglePin+0x82>
    4b60:	88 0f       	add	r24, r24
    4b62:	99 1f       	adc	r25, r25
    4b64:	0a 94       	dec	r0
    4b66:	e2 f7       	brpl	.-8      	; 0x4b60 <DIO_eunmTogglePin+0x7e>
    4b68:	84 27       	eor	r24, r20
    4b6a:	8c 93       	st	X, r24
    4b6c:	3d c0       	rjmp	.+122    	; 0x4be8 <DIO_eunmTogglePin+0x106>
		case DIO_PORTB: TOG_BIT(PORTB_R,COPY_u8PIN);break;
    4b6e:	a8 e3       	ldi	r26, 0x38	; 56
    4b70:	b0 e0       	ldi	r27, 0x00	; 0
    4b72:	e8 e3       	ldi	r30, 0x38	; 56
    4b74:	f0 e0       	ldi	r31, 0x00	; 0
    4b76:	80 81       	ld	r24, Z
    4b78:	48 2f       	mov	r20, r24
    4b7a:	8b 81       	ldd	r24, Y+3	; 0x03
    4b7c:	28 2f       	mov	r18, r24
    4b7e:	30 e0       	ldi	r19, 0x00	; 0
    4b80:	81 e0       	ldi	r24, 0x01	; 1
    4b82:	90 e0       	ldi	r25, 0x00	; 0
    4b84:	02 2e       	mov	r0, r18
    4b86:	02 c0       	rjmp	.+4      	; 0x4b8c <DIO_eunmTogglePin+0xaa>
    4b88:	88 0f       	add	r24, r24
    4b8a:	99 1f       	adc	r25, r25
    4b8c:	0a 94       	dec	r0
    4b8e:	e2 f7       	brpl	.-8      	; 0x4b88 <DIO_eunmTogglePin+0xa6>
    4b90:	84 27       	eor	r24, r20
    4b92:	8c 93       	st	X, r24
    4b94:	29 c0       	rjmp	.+82     	; 0x4be8 <DIO_eunmTogglePin+0x106>
		case DIO_PORTC: TOG_BIT(PORTC_R,COPY_u8PIN);break;
    4b96:	a5 e3       	ldi	r26, 0x35	; 53
    4b98:	b0 e0       	ldi	r27, 0x00	; 0
    4b9a:	e5 e3       	ldi	r30, 0x35	; 53
    4b9c:	f0 e0       	ldi	r31, 0x00	; 0
    4b9e:	80 81       	ld	r24, Z
    4ba0:	48 2f       	mov	r20, r24
    4ba2:	8b 81       	ldd	r24, Y+3	; 0x03
    4ba4:	28 2f       	mov	r18, r24
    4ba6:	30 e0       	ldi	r19, 0x00	; 0
    4ba8:	81 e0       	ldi	r24, 0x01	; 1
    4baa:	90 e0       	ldi	r25, 0x00	; 0
    4bac:	02 2e       	mov	r0, r18
    4bae:	02 c0       	rjmp	.+4      	; 0x4bb4 <DIO_eunmTogglePin+0xd2>
    4bb0:	88 0f       	add	r24, r24
    4bb2:	99 1f       	adc	r25, r25
    4bb4:	0a 94       	dec	r0
    4bb6:	e2 f7       	brpl	.-8      	; 0x4bb0 <DIO_eunmTogglePin+0xce>
    4bb8:	84 27       	eor	r24, r20
    4bba:	8c 93       	st	X, r24
    4bbc:	15 c0       	rjmp	.+42     	; 0x4be8 <DIO_eunmTogglePin+0x106>
		case DIO_PORTD: TOG_BIT(PORTD_R,COPY_u8PIN);break;
    4bbe:	a2 e3       	ldi	r26, 0x32	; 50
    4bc0:	b0 e0       	ldi	r27, 0x00	; 0
    4bc2:	e2 e3       	ldi	r30, 0x32	; 50
    4bc4:	f0 e0       	ldi	r31, 0x00	; 0
    4bc6:	80 81       	ld	r24, Z
    4bc8:	48 2f       	mov	r20, r24
    4bca:	8b 81       	ldd	r24, Y+3	; 0x03
    4bcc:	28 2f       	mov	r18, r24
    4bce:	30 e0       	ldi	r19, 0x00	; 0
    4bd0:	81 e0       	ldi	r24, 0x01	; 1
    4bd2:	90 e0       	ldi	r25, 0x00	; 0
    4bd4:	02 2e       	mov	r0, r18
    4bd6:	02 c0       	rjmp	.+4      	; 0x4bdc <DIO_eunmTogglePin+0xfa>
    4bd8:	88 0f       	add	r24, r24
    4bda:	99 1f       	adc	r25, r25
    4bdc:	0a 94       	dec	r0
    4bde:	e2 f7       	brpl	.-8      	; 0x4bd8 <DIO_eunmTogglePin+0xf6>
    4be0:	84 27       	eor	r24, r20
    4be2:	8c 93       	st	X, r24
    4be4:	01 c0       	rjmp	.+2      	; 0x4be8 <DIO_eunmTogglePin+0x106>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    4be6:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    4be8:	89 81       	ldd	r24, Y+1	; 0x01
}
    4bea:	0f 90       	pop	r0
    4bec:	0f 90       	pop	r0
    4bee:	0f 90       	pop	r0
    4bf0:	0f 90       	pop	r0
    4bf2:	0f 90       	pop	r0
    4bf4:	cf 91       	pop	r28
    4bf6:	df 91       	pop	r29
    4bf8:	08 95       	ret

00004bfa <DIO_eunmSetPortDirection>:
DIO_ErrorStatus DIO_eunmSetPortDirection    (u8 COPY_u8PORT ,u8 COPY_u8Direction                )
{
    4bfa:	df 93       	push	r29
    4bfc:	cf 93       	push	r28
    4bfe:	00 d0       	rcall	.+0      	; 0x4c00 <DIO_eunmSetPortDirection+0x6>
    4c00:	00 d0       	rcall	.+0      	; 0x4c02 <DIO_eunmSetPortDirection+0x8>
    4c02:	0f 92       	push	r0
    4c04:	cd b7       	in	r28, 0x3d	; 61
    4c06:	de b7       	in	r29, 0x3e	; 62
    4c08:	8a 83       	std	Y+2, r24	; 0x02
    4c0a:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4c0c:	81 e0       	ldi	r24, 0x01	; 1
    4c0e:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    4c10:	8a 81       	ldd	r24, Y+2	; 0x02
    4c12:	84 30       	cpi	r24, 0x04	; 4
    4c14:	98 f5       	brcc	.+102    	; 0x4c7c <DIO_eunmSetPortDirection+0x82>
	{
		switch (COPY_u8PORT)
    4c16:	8a 81       	ldd	r24, Y+2	; 0x02
    4c18:	28 2f       	mov	r18, r24
    4c1a:	30 e0       	ldi	r19, 0x00	; 0
    4c1c:	3d 83       	std	Y+5, r19	; 0x05
    4c1e:	2c 83       	std	Y+4, r18	; 0x04
    4c20:	8c 81       	ldd	r24, Y+4	; 0x04
    4c22:	9d 81       	ldd	r25, Y+5	; 0x05
    4c24:	81 30       	cpi	r24, 0x01	; 1
    4c26:	91 05       	cpc	r25, r1
    4c28:	d1 f0       	breq	.+52     	; 0x4c5e <DIO_eunmSetPortDirection+0x64>
    4c2a:	2c 81       	ldd	r18, Y+4	; 0x04
    4c2c:	3d 81       	ldd	r19, Y+5	; 0x05
    4c2e:	22 30       	cpi	r18, 0x02	; 2
    4c30:	31 05       	cpc	r19, r1
    4c32:	2c f4       	brge	.+10     	; 0x4c3e <DIO_eunmSetPortDirection+0x44>
    4c34:	8c 81       	ldd	r24, Y+4	; 0x04
    4c36:	9d 81       	ldd	r25, Y+5	; 0x05
    4c38:	00 97       	sbiw	r24, 0x00	; 0
    4c3a:	61 f0       	breq	.+24     	; 0x4c54 <DIO_eunmSetPortDirection+0x5a>
    4c3c:	20 c0       	rjmp	.+64     	; 0x4c7e <DIO_eunmSetPortDirection+0x84>
    4c3e:	2c 81       	ldd	r18, Y+4	; 0x04
    4c40:	3d 81       	ldd	r19, Y+5	; 0x05
    4c42:	22 30       	cpi	r18, 0x02	; 2
    4c44:	31 05       	cpc	r19, r1
    4c46:	81 f0       	breq	.+32     	; 0x4c68 <DIO_eunmSetPortDirection+0x6e>
    4c48:	8c 81       	ldd	r24, Y+4	; 0x04
    4c4a:	9d 81       	ldd	r25, Y+5	; 0x05
    4c4c:	83 30       	cpi	r24, 0x03	; 3
    4c4e:	91 05       	cpc	r25, r1
    4c50:	81 f0       	breq	.+32     	; 0x4c72 <DIO_eunmSetPortDirection+0x78>
    4c52:	15 c0       	rjmp	.+42     	; 0x4c7e <DIO_eunmSetPortDirection+0x84>
		{
		case DIO_PORTA: DDRA_R = COPY_u8Direction;break;
    4c54:	ea e3       	ldi	r30, 0x3A	; 58
    4c56:	f0 e0       	ldi	r31, 0x00	; 0
    4c58:	8b 81       	ldd	r24, Y+3	; 0x03
    4c5a:	80 83       	st	Z, r24
    4c5c:	10 c0       	rjmp	.+32     	; 0x4c7e <DIO_eunmSetPortDirection+0x84>
		case DIO_PORTB: DDRB_R = COPY_u8Direction;break;
    4c5e:	e7 e3       	ldi	r30, 0x37	; 55
    4c60:	f0 e0       	ldi	r31, 0x00	; 0
    4c62:	8b 81       	ldd	r24, Y+3	; 0x03
    4c64:	80 83       	st	Z, r24
    4c66:	0b c0       	rjmp	.+22     	; 0x4c7e <DIO_eunmSetPortDirection+0x84>
		case DIO_PORTC: DDRC_R = COPY_u8Direction;break;
    4c68:	e4 e3       	ldi	r30, 0x34	; 52
    4c6a:	f0 e0       	ldi	r31, 0x00	; 0
    4c6c:	8b 81       	ldd	r24, Y+3	; 0x03
    4c6e:	80 83       	st	Z, r24
    4c70:	06 c0       	rjmp	.+12     	; 0x4c7e <DIO_eunmSetPortDirection+0x84>
		case DIO_PORTD: DDRD_R = COPY_u8Direction;break;
    4c72:	e1 e3       	ldi	r30, 0x31	; 49
    4c74:	f0 e0       	ldi	r31, 0x00	; 0
    4c76:	8b 81       	ldd	r24, Y+3	; 0x03
    4c78:	80 83       	st	Z, r24
    4c7a:	01 c0       	rjmp	.+2      	; 0x4c7e <DIO_eunmSetPortDirection+0x84>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    4c7c:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    4c7e:	89 81       	ldd	r24, Y+1	; 0x01
}
    4c80:	0f 90       	pop	r0
    4c82:	0f 90       	pop	r0
    4c84:	0f 90       	pop	r0
    4c86:	0f 90       	pop	r0
    4c88:	0f 90       	pop	r0
    4c8a:	cf 91       	pop	r28
    4c8c:	df 91       	pop	r29
    4c8e:	08 95       	ret

00004c90 <DIO_eunmSetPortValue>:
DIO_ErrorStatus DIO_eunmSetPortValue        (u8 COPY_u8PORT ,u8 COPY_u8Value                    )
{
    4c90:	df 93       	push	r29
    4c92:	cf 93       	push	r28
    4c94:	00 d0       	rcall	.+0      	; 0x4c96 <DIO_eunmSetPortValue+0x6>
    4c96:	00 d0       	rcall	.+0      	; 0x4c98 <DIO_eunmSetPortValue+0x8>
    4c98:	0f 92       	push	r0
    4c9a:	cd b7       	in	r28, 0x3d	; 61
    4c9c:	de b7       	in	r29, 0x3e	; 62
    4c9e:	8a 83       	std	Y+2, r24	; 0x02
    4ca0:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4ca2:	81 e0       	ldi	r24, 0x01	; 1
    4ca4:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD) && ( (COPY_u8Value<=255) || (COPY_u8Value==DIO_PORT_LOW) || (COPY_u8Value==DIO_PORT_HIGH) ))
    4ca6:	8a 81       	ldd	r24, Y+2	; 0x02
    4ca8:	84 30       	cpi	r24, 0x04	; 4
    4caa:	98 f5       	brcc	.+102    	; 0x4d12 <DIO_eunmSetPortValue+0x82>
	{
		switch (COPY_u8PORT)
    4cac:	8a 81       	ldd	r24, Y+2	; 0x02
    4cae:	28 2f       	mov	r18, r24
    4cb0:	30 e0       	ldi	r19, 0x00	; 0
    4cb2:	3d 83       	std	Y+5, r19	; 0x05
    4cb4:	2c 83       	std	Y+4, r18	; 0x04
    4cb6:	8c 81       	ldd	r24, Y+4	; 0x04
    4cb8:	9d 81       	ldd	r25, Y+5	; 0x05
    4cba:	81 30       	cpi	r24, 0x01	; 1
    4cbc:	91 05       	cpc	r25, r1
    4cbe:	d1 f0       	breq	.+52     	; 0x4cf4 <DIO_eunmSetPortValue+0x64>
    4cc0:	2c 81       	ldd	r18, Y+4	; 0x04
    4cc2:	3d 81       	ldd	r19, Y+5	; 0x05
    4cc4:	22 30       	cpi	r18, 0x02	; 2
    4cc6:	31 05       	cpc	r19, r1
    4cc8:	2c f4       	brge	.+10     	; 0x4cd4 <DIO_eunmSetPortValue+0x44>
    4cca:	8c 81       	ldd	r24, Y+4	; 0x04
    4ccc:	9d 81       	ldd	r25, Y+5	; 0x05
    4cce:	00 97       	sbiw	r24, 0x00	; 0
    4cd0:	61 f0       	breq	.+24     	; 0x4cea <DIO_eunmSetPortValue+0x5a>
    4cd2:	20 c0       	rjmp	.+64     	; 0x4d14 <DIO_eunmSetPortValue+0x84>
    4cd4:	2c 81       	ldd	r18, Y+4	; 0x04
    4cd6:	3d 81       	ldd	r19, Y+5	; 0x05
    4cd8:	22 30       	cpi	r18, 0x02	; 2
    4cda:	31 05       	cpc	r19, r1
    4cdc:	81 f0       	breq	.+32     	; 0x4cfe <DIO_eunmSetPortValue+0x6e>
    4cde:	8c 81       	ldd	r24, Y+4	; 0x04
    4ce0:	9d 81       	ldd	r25, Y+5	; 0x05
    4ce2:	83 30       	cpi	r24, 0x03	; 3
    4ce4:	91 05       	cpc	r25, r1
    4ce6:	81 f0       	breq	.+32     	; 0x4d08 <DIO_eunmSetPortValue+0x78>
    4ce8:	15 c0       	rjmp	.+42     	; 0x4d14 <DIO_eunmSetPortValue+0x84>
		{
		case DIO_PORTA: PORTA_R = COPY_u8Value;break;
    4cea:	eb e3       	ldi	r30, 0x3B	; 59
    4cec:	f0 e0       	ldi	r31, 0x00	; 0
    4cee:	8b 81       	ldd	r24, Y+3	; 0x03
    4cf0:	80 83       	st	Z, r24
    4cf2:	10 c0       	rjmp	.+32     	; 0x4d14 <DIO_eunmSetPortValue+0x84>
		case DIO_PORTB: PORTB_R = COPY_u8Value;break;
    4cf4:	e8 e3       	ldi	r30, 0x38	; 56
    4cf6:	f0 e0       	ldi	r31, 0x00	; 0
    4cf8:	8b 81       	ldd	r24, Y+3	; 0x03
    4cfa:	80 83       	st	Z, r24
    4cfc:	0b c0       	rjmp	.+22     	; 0x4d14 <DIO_eunmSetPortValue+0x84>
		case DIO_PORTC: PORTC_R = COPY_u8Value;break;
    4cfe:	e5 e3       	ldi	r30, 0x35	; 53
    4d00:	f0 e0       	ldi	r31, 0x00	; 0
    4d02:	8b 81       	ldd	r24, Y+3	; 0x03
    4d04:	80 83       	st	Z, r24
    4d06:	06 c0       	rjmp	.+12     	; 0x4d14 <DIO_eunmSetPortValue+0x84>
		case DIO_PORTD: PORTD_R = COPY_u8Value;break;
    4d08:	e2 e3       	ldi	r30, 0x32	; 50
    4d0a:	f0 e0       	ldi	r31, 0x00	; 0
    4d0c:	8b 81       	ldd	r24, Y+3	; 0x03
    4d0e:	80 83       	st	Z, r24
    4d10:	01 c0       	rjmp	.+2      	; 0x4d14 <DIO_eunmSetPortValue+0x84>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    4d12:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    4d14:	89 81       	ldd	r24, Y+1	; 0x01
}
    4d16:	0f 90       	pop	r0
    4d18:	0f 90       	pop	r0
    4d1a:	0f 90       	pop	r0
    4d1c:	0f 90       	pop	r0
    4d1e:	0f 90       	pop	r0
    4d20:	cf 91       	pop	r28
    4d22:	df 91       	pop	r29
    4d24:	08 95       	ret

00004d26 <DIO_eunmGetPort>:
DIO_ErrorStatus DIO_eunmGetPort             (u8 COPY_u8PORT ,u8 *COPY_PtrData			        )
{
    4d26:	df 93       	push	r29
    4d28:	cf 93       	push	r28
    4d2a:	00 d0       	rcall	.+0      	; 0x4d2c <DIO_eunmGetPort+0x6>
    4d2c:	00 d0       	rcall	.+0      	; 0x4d2e <DIO_eunmGetPort+0x8>
    4d2e:	00 d0       	rcall	.+0      	; 0x4d30 <DIO_eunmGetPort+0xa>
    4d30:	cd b7       	in	r28, 0x3d	; 61
    4d32:	de b7       	in	r29, 0x3e	; 62
    4d34:	8a 83       	std	Y+2, r24	; 0x02
    4d36:	7c 83       	std	Y+4, r23	; 0x04
    4d38:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4d3a:	81 e0       	ldi	r24, 0x01	; 1
    4d3c:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    4d3e:	8a 81       	ldd	r24, Y+2	; 0x02
    4d40:	84 30       	cpi	r24, 0x04	; 4
    4d42:	d8 f5       	brcc	.+118    	; 0x4dba <DIO_eunmGetPort+0x94>
	{
		switch (COPY_u8PORT)
    4d44:	8a 81       	ldd	r24, Y+2	; 0x02
    4d46:	28 2f       	mov	r18, r24
    4d48:	30 e0       	ldi	r19, 0x00	; 0
    4d4a:	3e 83       	std	Y+6, r19	; 0x06
    4d4c:	2d 83       	std	Y+5, r18	; 0x05
    4d4e:	8d 81       	ldd	r24, Y+5	; 0x05
    4d50:	9e 81       	ldd	r25, Y+6	; 0x06
    4d52:	81 30       	cpi	r24, 0x01	; 1
    4d54:	91 05       	cpc	r25, r1
    4d56:	e1 f0       	breq	.+56     	; 0x4d90 <DIO_eunmGetPort+0x6a>
    4d58:	2d 81       	ldd	r18, Y+5	; 0x05
    4d5a:	3e 81       	ldd	r19, Y+6	; 0x06
    4d5c:	22 30       	cpi	r18, 0x02	; 2
    4d5e:	31 05       	cpc	r19, r1
    4d60:	2c f4       	brge	.+10     	; 0x4d6c <DIO_eunmGetPort+0x46>
    4d62:	8d 81       	ldd	r24, Y+5	; 0x05
    4d64:	9e 81       	ldd	r25, Y+6	; 0x06
    4d66:	00 97       	sbiw	r24, 0x00	; 0
    4d68:	61 f0       	breq	.+24     	; 0x4d82 <DIO_eunmGetPort+0x5c>
    4d6a:	28 c0       	rjmp	.+80     	; 0x4dbc <DIO_eunmGetPort+0x96>
    4d6c:	2d 81       	ldd	r18, Y+5	; 0x05
    4d6e:	3e 81       	ldd	r19, Y+6	; 0x06
    4d70:	22 30       	cpi	r18, 0x02	; 2
    4d72:	31 05       	cpc	r19, r1
    4d74:	a1 f0       	breq	.+40     	; 0x4d9e <DIO_eunmGetPort+0x78>
    4d76:	8d 81       	ldd	r24, Y+5	; 0x05
    4d78:	9e 81       	ldd	r25, Y+6	; 0x06
    4d7a:	83 30       	cpi	r24, 0x03	; 3
    4d7c:	91 05       	cpc	r25, r1
    4d7e:	b1 f0       	breq	.+44     	; 0x4dac <DIO_eunmGetPort+0x86>
    4d80:	1d c0       	rjmp	.+58     	; 0x4dbc <DIO_eunmGetPort+0x96>
		{
		case DIO_PORTA: *COPY_PtrData = PINA_R;break;
    4d82:	e9 e3       	ldi	r30, 0x39	; 57
    4d84:	f0 e0       	ldi	r31, 0x00	; 0
    4d86:	80 81       	ld	r24, Z
    4d88:	eb 81       	ldd	r30, Y+3	; 0x03
    4d8a:	fc 81       	ldd	r31, Y+4	; 0x04
    4d8c:	80 83       	st	Z, r24
    4d8e:	16 c0       	rjmp	.+44     	; 0x4dbc <DIO_eunmGetPort+0x96>
		case DIO_PORTB: *COPY_PtrData = PINB_R;break;
    4d90:	e6 e3       	ldi	r30, 0x36	; 54
    4d92:	f0 e0       	ldi	r31, 0x00	; 0
    4d94:	80 81       	ld	r24, Z
    4d96:	eb 81       	ldd	r30, Y+3	; 0x03
    4d98:	fc 81       	ldd	r31, Y+4	; 0x04
    4d9a:	80 83       	st	Z, r24
    4d9c:	0f c0       	rjmp	.+30     	; 0x4dbc <DIO_eunmGetPort+0x96>
		case DIO_PORTC: *COPY_PtrData = PINC_R;break;
    4d9e:	e3 e3       	ldi	r30, 0x33	; 51
    4da0:	f0 e0       	ldi	r31, 0x00	; 0
    4da2:	80 81       	ld	r24, Z
    4da4:	eb 81       	ldd	r30, Y+3	; 0x03
    4da6:	fc 81       	ldd	r31, Y+4	; 0x04
    4da8:	80 83       	st	Z, r24
    4daa:	08 c0       	rjmp	.+16     	; 0x4dbc <DIO_eunmGetPort+0x96>
		case DIO_PORTD: *COPY_PtrData = PIND_R;break;
    4dac:	e0 e3       	ldi	r30, 0x30	; 48
    4dae:	f0 e0       	ldi	r31, 0x00	; 0
    4db0:	80 81       	ld	r24, Z
    4db2:	eb 81       	ldd	r30, Y+3	; 0x03
    4db4:	fc 81       	ldd	r31, Y+4	; 0x04
    4db6:	80 83       	st	Z, r24
    4db8:	01 c0       	rjmp	.+2      	; 0x4dbc <DIO_eunmGetPort+0x96>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    4dba:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    4dbc:	89 81       	ldd	r24, Y+1	; 0x01
}
    4dbe:	26 96       	adiw	r28, 0x06	; 6
    4dc0:	0f b6       	in	r0, 0x3f	; 63
    4dc2:	f8 94       	cli
    4dc4:	de bf       	out	0x3e, r29	; 62
    4dc6:	0f be       	out	0x3f, r0	; 63
    4dc8:	cd bf       	out	0x3d, r28	; 61
    4dca:	cf 91       	pop	r28
    4dcc:	df 91       	pop	r29
    4dce:	08 95       	ret

00004dd0 <DIO_eunmToggelPort>:
DIO_ErrorStatus DIO_eunmToggelPort          (u8 COPY_u8PORT 				  			        )
{
    4dd0:	df 93       	push	r29
    4dd2:	cf 93       	push	r28
    4dd4:	00 d0       	rcall	.+0      	; 0x4dd6 <DIO_eunmToggelPort+0x6>
    4dd6:	00 d0       	rcall	.+0      	; 0x4dd8 <DIO_eunmToggelPort+0x8>
    4dd8:	cd b7       	in	r28, 0x3d	; 61
    4dda:	de b7       	in	r29, 0x3e	; 62
    4ddc:	8a 83       	std	Y+2, r24	; 0x02
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4dde:	81 e0       	ldi	r24, 0x01	; 1
    4de0:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    4de2:	8a 81       	ldd	r24, Y+2	; 0x02
    4de4:	84 30       	cpi	r24, 0x04	; 4
    4de6:	08 f0       	brcs	.+2      	; 0x4dea <DIO_eunmToggelPort+0x1a>
    4de8:	3f c0       	rjmp	.+126    	; 0x4e68 <DIO_eunmToggelPort+0x98>
	{
		switch (COPY_u8PORT)
    4dea:	8a 81       	ldd	r24, Y+2	; 0x02
    4dec:	28 2f       	mov	r18, r24
    4dee:	30 e0       	ldi	r19, 0x00	; 0
    4df0:	3c 83       	std	Y+4, r19	; 0x04
    4df2:	2b 83       	std	Y+3, r18	; 0x03
    4df4:	8b 81       	ldd	r24, Y+3	; 0x03
    4df6:	9c 81       	ldd	r25, Y+4	; 0x04
    4df8:	81 30       	cpi	r24, 0x01	; 1
    4dfa:	91 05       	cpc	r25, r1
    4dfc:	e9 f0       	breq	.+58     	; 0x4e38 <DIO_eunmToggelPort+0x68>
    4dfe:	2b 81       	ldd	r18, Y+3	; 0x03
    4e00:	3c 81       	ldd	r19, Y+4	; 0x04
    4e02:	22 30       	cpi	r18, 0x02	; 2
    4e04:	31 05       	cpc	r19, r1
    4e06:	2c f4       	brge	.+10     	; 0x4e12 <DIO_eunmToggelPort+0x42>
    4e08:	8b 81       	ldd	r24, Y+3	; 0x03
    4e0a:	9c 81       	ldd	r25, Y+4	; 0x04
    4e0c:	00 97       	sbiw	r24, 0x00	; 0
    4e0e:	61 f0       	breq	.+24     	; 0x4e28 <DIO_eunmToggelPort+0x58>
    4e10:	2c c0       	rjmp	.+88     	; 0x4e6a <DIO_eunmToggelPort+0x9a>
    4e12:	2b 81       	ldd	r18, Y+3	; 0x03
    4e14:	3c 81       	ldd	r19, Y+4	; 0x04
    4e16:	22 30       	cpi	r18, 0x02	; 2
    4e18:	31 05       	cpc	r19, r1
    4e1a:	b1 f0       	breq	.+44     	; 0x4e48 <DIO_eunmToggelPort+0x78>
    4e1c:	8b 81       	ldd	r24, Y+3	; 0x03
    4e1e:	9c 81       	ldd	r25, Y+4	; 0x04
    4e20:	83 30       	cpi	r24, 0x03	; 3
    4e22:	91 05       	cpc	r25, r1
    4e24:	c9 f0       	breq	.+50     	; 0x4e58 <DIO_eunmToggelPort+0x88>
    4e26:	21 c0       	rjmp	.+66     	; 0x4e6a <DIO_eunmToggelPort+0x9a>
		{
		case DIO_PORTA: PORTA_R = ~PORTA_R;break;
    4e28:	ab e3       	ldi	r26, 0x3B	; 59
    4e2a:	b0 e0       	ldi	r27, 0x00	; 0
    4e2c:	eb e3       	ldi	r30, 0x3B	; 59
    4e2e:	f0 e0       	ldi	r31, 0x00	; 0
    4e30:	80 81       	ld	r24, Z
    4e32:	80 95       	com	r24
    4e34:	8c 93       	st	X, r24
    4e36:	19 c0       	rjmp	.+50     	; 0x4e6a <DIO_eunmToggelPort+0x9a>
		case DIO_PORTB: PORTB_R = ~PORTB_R;break;
    4e38:	a8 e3       	ldi	r26, 0x38	; 56
    4e3a:	b0 e0       	ldi	r27, 0x00	; 0
    4e3c:	e8 e3       	ldi	r30, 0x38	; 56
    4e3e:	f0 e0       	ldi	r31, 0x00	; 0
    4e40:	80 81       	ld	r24, Z
    4e42:	80 95       	com	r24
    4e44:	8c 93       	st	X, r24
    4e46:	11 c0       	rjmp	.+34     	; 0x4e6a <DIO_eunmToggelPort+0x9a>
		case DIO_PORTC: PORTC_R = ~PORTC_R;break;
    4e48:	a5 e3       	ldi	r26, 0x35	; 53
    4e4a:	b0 e0       	ldi	r27, 0x00	; 0
    4e4c:	e5 e3       	ldi	r30, 0x35	; 53
    4e4e:	f0 e0       	ldi	r31, 0x00	; 0
    4e50:	80 81       	ld	r24, Z
    4e52:	80 95       	com	r24
    4e54:	8c 93       	st	X, r24
    4e56:	09 c0       	rjmp	.+18     	; 0x4e6a <DIO_eunmToggelPort+0x9a>
		case DIO_PORTD: PORTD_R = ~PORTD_R;break;
    4e58:	a2 e3       	ldi	r26, 0x32	; 50
    4e5a:	b0 e0       	ldi	r27, 0x00	; 0
    4e5c:	e2 e3       	ldi	r30, 0x32	; 50
    4e5e:	f0 e0       	ldi	r31, 0x00	; 0
    4e60:	80 81       	ld	r24, Z
    4e62:	80 95       	com	r24
    4e64:	8c 93       	st	X, r24
    4e66:	01 c0       	rjmp	.+2      	; 0x4e6a <DIO_eunmToggelPort+0x9a>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    4e68:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus ;
    4e6a:	89 81       	ldd	r24, Y+1	; 0x01
}
    4e6c:	0f 90       	pop	r0
    4e6e:	0f 90       	pop	r0
    4e70:	0f 90       	pop	r0
    4e72:	0f 90       	pop	r0
    4e74:	cf 91       	pop	r28
    4e76:	df 91       	pop	r29
    4e78:	08 95       	ret

00004e7a <DIO_eunmSetPinInterPullUp>:
DIO_ErrorStatus DIO_eunmSetPinInterPullUp     (u8 COPY_u8PORT ,u8 COPY_u8PIN ,u8 COPY_u8ConnectPullUp )
{
    4e7a:	df 93       	push	r29
    4e7c:	cf 93       	push	r28
    4e7e:	00 d0       	rcall	.+0      	; 0x4e80 <DIO_eunmSetPinInterPullUp+0x6>
    4e80:	00 d0       	rcall	.+0      	; 0x4e82 <DIO_eunmSetPinInterPullUp+0x8>
    4e82:	00 d0       	rcall	.+0      	; 0x4e84 <DIO_eunmSetPinInterPullUp+0xa>
    4e84:	cd b7       	in	r28, 0x3d	; 61
    4e86:	de b7       	in	r29, 0x3e	; 62
    4e88:	8a 83       	std	Y+2, r24	; 0x02
    4e8a:	6b 83       	std	Y+3, r22	; 0x03
    4e8c:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    4e8e:	81 e0       	ldi	r24, 0x01	; 1
    4e90:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD) && (COPY_u8PIN <= DIO_PIN7))
    4e92:	8a 81       	ldd	r24, Y+2	; 0x02
    4e94:	84 30       	cpi	r24, 0x04	; 4
    4e96:	08 f0       	brcs	.+2      	; 0x4e9a <DIO_eunmSetPinInterPullUp+0x20>
    4e98:	3e c1       	rjmp	.+636    	; 0x5116 <DIO_eunmSetPinInterPullUp+0x29c>
    4e9a:	8b 81       	ldd	r24, Y+3	; 0x03
    4e9c:	88 30       	cpi	r24, 0x08	; 8
    4e9e:	08 f0       	brcs	.+2      	; 0x4ea2 <DIO_eunmSetPinInterPullUp+0x28>
    4ea0:	3a c1       	rjmp	.+628    	; 0x5116 <DIO_eunmSetPinInterPullUp+0x29c>
	{
		switch(COPY_u8PORT)
    4ea2:	8a 81       	ldd	r24, Y+2	; 0x02
    4ea4:	28 2f       	mov	r18, r24
    4ea6:	30 e0       	ldi	r19, 0x00	; 0
    4ea8:	3e 83       	std	Y+6, r19	; 0x06
    4eaa:	2d 83       	std	Y+5, r18	; 0x05
    4eac:	8d 81       	ldd	r24, Y+5	; 0x05
    4eae:	9e 81       	ldd	r25, Y+6	; 0x06
    4eb0:	81 30       	cpi	r24, 0x01	; 1
    4eb2:	91 05       	cpc	r25, r1
    4eb4:	09 f4       	brne	.+2      	; 0x4eb8 <DIO_eunmSetPinInterPullUp+0x3e>
    4eb6:	5d c0       	rjmp	.+186    	; 0x4f72 <DIO_eunmSetPinInterPullUp+0xf8>
    4eb8:	2d 81       	ldd	r18, Y+5	; 0x05
    4eba:	3e 81       	ldd	r19, Y+6	; 0x06
    4ebc:	22 30       	cpi	r18, 0x02	; 2
    4ebe:	31 05       	cpc	r19, r1
    4ec0:	2c f4       	brge	.+10     	; 0x4ecc <DIO_eunmSetPinInterPullUp+0x52>
    4ec2:	8d 81       	ldd	r24, Y+5	; 0x05
    4ec4:	9e 81       	ldd	r25, Y+6	; 0x06
    4ec6:	00 97       	sbiw	r24, 0x00	; 0
    4ec8:	71 f0       	breq	.+28     	; 0x4ee6 <DIO_eunmSetPinInterPullUp+0x6c>
    4eca:	26 c1       	rjmp	.+588    	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
    4ecc:	2d 81       	ldd	r18, Y+5	; 0x05
    4ece:	3e 81       	ldd	r19, Y+6	; 0x06
    4ed0:	22 30       	cpi	r18, 0x02	; 2
    4ed2:	31 05       	cpc	r19, r1
    4ed4:	09 f4       	brne	.+2      	; 0x4ed8 <DIO_eunmSetPinInterPullUp+0x5e>
    4ed6:	93 c0       	rjmp	.+294    	; 0x4ffe <DIO_eunmSetPinInterPullUp+0x184>
    4ed8:	8d 81       	ldd	r24, Y+5	; 0x05
    4eda:	9e 81       	ldd	r25, Y+6	; 0x06
    4edc:	83 30       	cpi	r24, 0x03	; 3
    4ede:	91 05       	cpc	r25, r1
    4ee0:	09 f4       	brne	.+2      	; 0x4ee4 <DIO_eunmSetPinInterPullUp+0x6a>
    4ee2:	d3 c0       	rjmp	.+422    	; 0x508a <DIO_eunmSetPinInterPullUp+0x210>
    4ee4:	19 c1       	rjmp	.+562    	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
		{
		case DIO_PORTA:
			if(COPY_u8ConnectPullUp == DIO_PIN_HIGH)
    4ee6:	8c 81       	ldd	r24, Y+4	; 0x04
    4ee8:	81 30       	cpi	r24, 0x01	; 1
    4eea:	71 f5       	brne	.+92     	; 0x4f48 <DIO_eunmSetPinInterPullUp+0xce>
			{
				CLR_BIT(SFIOR,PUD);
    4eec:	a0 e5       	ldi	r26, 0x50	; 80
    4eee:	b0 e0       	ldi	r27, 0x00	; 0
    4ef0:	e0 e5       	ldi	r30, 0x50	; 80
    4ef2:	f0 e0       	ldi	r31, 0x00	; 0
    4ef4:	80 81       	ld	r24, Z
    4ef6:	8b 7f       	andi	r24, 0xFB	; 251
    4ef8:	8c 93       	st	X, r24
				CLR_BIT(DDRA_R,COPY_u8PIN);
    4efa:	aa e3       	ldi	r26, 0x3A	; 58
    4efc:	b0 e0       	ldi	r27, 0x00	; 0
    4efe:	ea e3       	ldi	r30, 0x3A	; 58
    4f00:	f0 e0       	ldi	r31, 0x00	; 0
    4f02:	80 81       	ld	r24, Z
    4f04:	48 2f       	mov	r20, r24
    4f06:	8b 81       	ldd	r24, Y+3	; 0x03
    4f08:	28 2f       	mov	r18, r24
    4f0a:	30 e0       	ldi	r19, 0x00	; 0
    4f0c:	81 e0       	ldi	r24, 0x01	; 1
    4f0e:	90 e0       	ldi	r25, 0x00	; 0
    4f10:	02 c0       	rjmp	.+4      	; 0x4f16 <DIO_eunmSetPinInterPullUp+0x9c>
    4f12:	88 0f       	add	r24, r24
    4f14:	99 1f       	adc	r25, r25
    4f16:	2a 95       	dec	r18
    4f18:	e2 f7       	brpl	.-8      	; 0x4f12 <DIO_eunmSetPinInterPullUp+0x98>
    4f1a:	80 95       	com	r24
    4f1c:	84 23       	and	r24, r20
    4f1e:	8c 93       	st	X, r24
				SET_BIT(PORTA_R,COPY_u8PIN);
    4f20:	ab e3       	ldi	r26, 0x3B	; 59
    4f22:	b0 e0       	ldi	r27, 0x00	; 0
    4f24:	eb e3       	ldi	r30, 0x3B	; 59
    4f26:	f0 e0       	ldi	r31, 0x00	; 0
    4f28:	80 81       	ld	r24, Z
    4f2a:	48 2f       	mov	r20, r24
    4f2c:	8b 81       	ldd	r24, Y+3	; 0x03
    4f2e:	28 2f       	mov	r18, r24
    4f30:	30 e0       	ldi	r19, 0x00	; 0
    4f32:	81 e0       	ldi	r24, 0x01	; 1
    4f34:	90 e0       	ldi	r25, 0x00	; 0
    4f36:	02 2e       	mov	r0, r18
    4f38:	02 c0       	rjmp	.+4      	; 0x4f3e <DIO_eunmSetPinInterPullUp+0xc4>
    4f3a:	88 0f       	add	r24, r24
    4f3c:	99 1f       	adc	r25, r25
    4f3e:	0a 94       	dec	r0
    4f40:	e2 f7       	brpl	.-8      	; 0x4f3a <DIO_eunmSetPinInterPullUp+0xc0>
    4f42:	84 2b       	or	r24, r20
    4f44:	8c 93       	st	X, r24
    4f46:	e8 c0       	rjmp	.+464    	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
			}
			else
			{
				CLR_BIT(PORTA_R,COPY_u8PIN);
    4f48:	ab e3       	ldi	r26, 0x3B	; 59
    4f4a:	b0 e0       	ldi	r27, 0x00	; 0
    4f4c:	eb e3       	ldi	r30, 0x3B	; 59
    4f4e:	f0 e0       	ldi	r31, 0x00	; 0
    4f50:	80 81       	ld	r24, Z
    4f52:	48 2f       	mov	r20, r24
    4f54:	8b 81       	ldd	r24, Y+3	; 0x03
    4f56:	28 2f       	mov	r18, r24
    4f58:	30 e0       	ldi	r19, 0x00	; 0
    4f5a:	81 e0       	ldi	r24, 0x01	; 1
    4f5c:	90 e0       	ldi	r25, 0x00	; 0
    4f5e:	02 2e       	mov	r0, r18
    4f60:	02 c0       	rjmp	.+4      	; 0x4f66 <DIO_eunmSetPinInterPullUp+0xec>
    4f62:	88 0f       	add	r24, r24
    4f64:	99 1f       	adc	r25, r25
    4f66:	0a 94       	dec	r0
    4f68:	e2 f7       	brpl	.-8      	; 0x4f62 <DIO_eunmSetPinInterPullUp+0xe8>
    4f6a:	80 95       	com	r24
    4f6c:	84 23       	and	r24, r20
    4f6e:	8c 93       	st	X, r24
    4f70:	d3 c0       	rjmp	.+422    	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
			}break;
		case DIO_PORTB:
			if(COPY_u8ConnectPullUp == DIO_PIN_HIGH)
    4f72:	8c 81       	ldd	r24, Y+4	; 0x04
    4f74:	81 30       	cpi	r24, 0x01	; 1
    4f76:	71 f5       	brne	.+92     	; 0x4fd4 <DIO_eunmSetPinInterPullUp+0x15a>
			{
				CLR_BIT(SFIOR,PUD);
    4f78:	a0 e5       	ldi	r26, 0x50	; 80
    4f7a:	b0 e0       	ldi	r27, 0x00	; 0
    4f7c:	e0 e5       	ldi	r30, 0x50	; 80
    4f7e:	f0 e0       	ldi	r31, 0x00	; 0
    4f80:	80 81       	ld	r24, Z
    4f82:	8b 7f       	andi	r24, 0xFB	; 251
    4f84:	8c 93       	st	X, r24
				CLR_BIT(DDRB_R,COPY_u8PIN);
    4f86:	a7 e3       	ldi	r26, 0x37	; 55
    4f88:	b0 e0       	ldi	r27, 0x00	; 0
    4f8a:	e7 e3       	ldi	r30, 0x37	; 55
    4f8c:	f0 e0       	ldi	r31, 0x00	; 0
    4f8e:	80 81       	ld	r24, Z
    4f90:	48 2f       	mov	r20, r24
    4f92:	8b 81       	ldd	r24, Y+3	; 0x03
    4f94:	28 2f       	mov	r18, r24
    4f96:	30 e0       	ldi	r19, 0x00	; 0
    4f98:	81 e0       	ldi	r24, 0x01	; 1
    4f9a:	90 e0       	ldi	r25, 0x00	; 0
    4f9c:	02 c0       	rjmp	.+4      	; 0x4fa2 <DIO_eunmSetPinInterPullUp+0x128>
    4f9e:	88 0f       	add	r24, r24
    4fa0:	99 1f       	adc	r25, r25
    4fa2:	2a 95       	dec	r18
    4fa4:	e2 f7       	brpl	.-8      	; 0x4f9e <DIO_eunmSetPinInterPullUp+0x124>
    4fa6:	80 95       	com	r24
    4fa8:	84 23       	and	r24, r20
    4faa:	8c 93       	st	X, r24
				SET_BIT(PORTB_R,COPY_u8PIN);
    4fac:	a8 e3       	ldi	r26, 0x38	; 56
    4fae:	b0 e0       	ldi	r27, 0x00	; 0
    4fb0:	e8 e3       	ldi	r30, 0x38	; 56
    4fb2:	f0 e0       	ldi	r31, 0x00	; 0
    4fb4:	80 81       	ld	r24, Z
    4fb6:	48 2f       	mov	r20, r24
    4fb8:	8b 81       	ldd	r24, Y+3	; 0x03
    4fba:	28 2f       	mov	r18, r24
    4fbc:	30 e0       	ldi	r19, 0x00	; 0
    4fbe:	81 e0       	ldi	r24, 0x01	; 1
    4fc0:	90 e0       	ldi	r25, 0x00	; 0
    4fc2:	02 2e       	mov	r0, r18
    4fc4:	02 c0       	rjmp	.+4      	; 0x4fca <DIO_eunmSetPinInterPullUp+0x150>
    4fc6:	88 0f       	add	r24, r24
    4fc8:	99 1f       	adc	r25, r25
    4fca:	0a 94       	dec	r0
    4fcc:	e2 f7       	brpl	.-8      	; 0x4fc6 <DIO_eunmSetPinInterPullUp+0x14c>
    4fce:	84 2b       	or	r24, r20
    4fd0:	8c 93       	st	X, r24
    4fd2:	a2 c0       	rjmp	.+324    	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
			}
			else
			{
				CLR_BIT(PORTB_R,COPY_u8PIN);
    4fd4:	a8 e3       	ldi	r26, 0x38	; 56
    4fd6:	b0 e0       	ldi	r27, 0x00	; 0
    4fd8:	e8 e3       	ldi	r30, 0x38	; 56
    4fda:	f0 e0       	ldi	r31, 0x00	; 0
    4fdc:	80 81       	ld	r24, Z
    4fde:	48 2f       	mov	r20, r24
    4fe0:	8b 81       	ldd	r24, Y+3	; 0x03
    4fe2:	28 2f       	mov	r18, r24
    4fe4:	30 e0       	ldi	r19, 0x00	; 0
    4fe6:	81 e0       	ldi	r24, 0x01	; 1
    4fe8:	90 e0       	ldi	r25, 0x00	; 0
    4fea:	02 2e       	mov	r0, r18
    4fec:	02 c0       	rjmp	.+4      	; 0x4ff2 <DIO_eunmSetPinInterPullUp+0x178>
    4fee:	88 0f       	add	r24, r24
    4ff0:	99 1f       	adc	r25, r25
    4ff2:	0a 94       	dec	r0
    4ff4:	e2 f7       	brpl	.-8      	; 0x4fee <DIO_eunmSetPinInterPullUp+0x174>
    4ff6:	80 95       	com	r24
    4ff8:	84 23       	and	r24, r20
    4ffa:	8c 93       	st	X, r24
    4ffc:	8d c0       	rjmp	.+282    	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
			}break;
		case DIO_PORTC:
			if(COPY_u8ConnectPullUp == DIO_PIN_HIGH)
    4ffe:	8c 81       	ldd	r24, Y+4	; 0x04
    5000:	81 30       	cpi	r24, 0x01	; 1
    5002:	71 f5       	brne	.+92     	; 0x5060 <DIO_eunmSetPinInterPullUp+0x1e6>
			{
				CLR_BIT(SFIOR,PUD);
    5004:	a0 e5       	ldi	r26, 0x50	; 80
    5006:	b0 e0       	ldi	r27, 0x00	; 0
    5008:	e0 e5       	ldi	r30, 0x50	; 80
    500a:	f0 e0       	ldi	r31, 0x00	; 0
    500c:	80 81       	ld	r24, Z
    500e:	8b 7f       	andi	r24, 0xFB	; 251
    5010:	8c 93       	st	X, r24
				CLR_BIT(DDRC_R,COPY_u8PIN);
    5012:	a4 e3       	ldi	r26, 0x34	; 52
    5014:	b0 e0       	ldi	r27, 0x00	; 0
    5016:	e4 e3       	ldi	r30, 0x34	; 52
    5018:	f0 e0       	ldi	r31, 0x00	; 0
    501a:	80 81       	ld	r24, Z
    501c:	48 2f       	mov	r20, r24
    501e:	8b 81       	ldd	r24, Y+3	; 0x03
    5020:	28 2f       	mov	r18, r24
    5022:	30 e0       	ldi	r19, 0x00	; 0
    5024:	81 e0       	ldi	r24, 0x01	; 1
    5026:	90 e0       	ldi	r25, 0x00	; 0
    5028:	02 c0       	rjmp	.+4      	; 0x502e <DIO_eunmSetPinInterPullUp+0x1b4>
    502a:	88 0f       	add	r24, r24
    502c:	99 1f       	adc	r25, r25
    502e:	2a 95       	dec	r18
    5030:	e2 f7       	brpl	.-8      	; 0x502a <DIO_eunmSetPinInterPullUp+0x1b0>
    5032:	80 95       	com	r24
    5034:	84 23       	and	r24, r20
    5036:	8c 93       	st	X, r24
				SET_BIT(PORTC_R,COPY_u8PIN);
    5038:	a5 e3       	ldi	r26, 0x35	; 53
    503a:	b0 e0       	ldi	r27, 0x00	; 0
    503c:	e5 e3       	ldi	r30, 0x35	; 53
    503e:	f0 e0       	ldi	r31, 0x00	; 0
    5040:	80 81       	ld	r24, Z
    5042:	48 2f       	mov	r20, r24
    5044:	8b 81       	ldd	r24, Y+3	; 0x03
    5046:	28 2f       	mov	r18, r24
    5048:	30 e0       	ldi	r19, 0x00	; 0
    504a:	81 e0       	ldi	r24, 0x01	; 1
    504c:	90 e0       	ldi	r25, 0x00	; 0
    504e:	02 2e       	mov	r0, r18
    5050:	02 c0       	rjmp	.+4      	; 0x5056 <DIO_eunmSetPinInterPullUp+0x1dc>
    5052:	88 0f       	add	r24, r24
    5054:	99 1f       	adc	r25, r25
    5056:	0a 94       	dec	r0
    5058:	e2 f7       	brpl	.-8      	; 0x5052 <DIO_eunmSetPinInterPullUp+0x1d8>
    505a:	84 2b       	or	r24, r20
    505c:	8c 93       	st	X, r24
    505e:	5c c0       	rjmp	.+184    	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
			}
			else
			{
				CLR_BIT(PORTC_R,COPY_u8PIN);
    5060:	a5 e3       	ldi	r26, 0x35	; 53
    5062:	b0 e0       	ldi	r27, 0x00	; 0
    5064:	e5 e3       	ldi	r30, 0x35	; 53
    5066:	f0 e0       	ldi	r31, 0x00	; 0
    5068:	80 81       	ld	r24, Z
    506a:	48 2f       	mov	r20, r24
    506c:	8b 81       	ldd	r24, Y+3	; 0x03
    506e:	28 2f       	mov	r18, r24
    5070:	30 e0       	ldi	r19, 0x00	; 0
    5072:	81 e0       	ldi	r24, 0x01	; 1
    5074:	90 e0       	ldi	r25, 0x00	; 0
    5076:	02 2e       	mov	r0, r18
    5078:	02 c0       	rjmp	.+4      	; 0x507e <DIO_eunmSetPinInterPullUp+0x204>
    507a:	88 0f       	add	r24, r24
    507c:	99 1f       	adc	r25, r25
    507e:	0a 94       	dec	r0
    5080:	e2 f7       	brpl	.-8      	; 0x507a <DIO_eunmSetPinInterPullUp+0x200>
    5082:	80 95       	com	r24
    5084:	84 23       	and	r24, r20
    5086:	8c 93       	st	X, r24
    5088:	47 c0       	rjmp	.+142    	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
			}break;
		case DIO_PORTD:
			if(COPY_u8ConnectPullUp == DIO_PIN_HIGH)
    508a:	8c 81       	ldd	r24, Y+4	; 0x04
    508c:	81 30       	cpi	r24, 0x01	; 1
    508e:	71 f5       	brne	.+92     	; 0x50ec <DIO_eunmSetPinInterPullUp+0x272>
			{
				CLR_BIT(SFIOR,PUD);
    5090:	a0 e5       	ldi	r26, 0x50	; 80
    5092:	b0 e0       	ldi	r27, 0x00	; 0
    5094:	e0 e5       	ldi	r30, 0x50	; 80
    5096:	f0 e0       	ldi	r31, 0x00	; 0
    5098:	80 81       	ld	r24, Z
    509a:	8b 7f       	andi	r24, 0xFB	; 251
    509c:	8c 93       	st	X, r24
				CLR_BIT(DDRD_R,COPY_u8PIN);
    509e:	a1 e3       	ldi	r26, 0x31	; 49
    50a0:	b0 e0       	ldi	r27, 0x00	; 0
    50a2:	e1 e3       	ldi	r30, 0x31	; 49
    50a4:	f0 e0       	ldi	r31, 0x00	; 0
    50a6:	80 81       	ld	r24, Z
    50a8:	48 2f       	mov	r20, r24
    50aa:	8b 81       	ldd	r24, Y+3	; 0x03
    50ac:	28 2f       	mov	r18, r24
    50ae:	30 e0       	ldi	r19, 0x00	; 0
    50b0:	81 e0       	ldi	r24, 0x01	; 1
    50b2:	90 e0       	ldi	r25, 0x00	; 0
    50b4:	02 c0       	rjmp	.+4      	; 0x50ba <DIO_eunmSetPinInterPullUp+0x240>
    50b6:	88 0f       	add	r24, r24
    50b8:	99 1f       	adc	r25, r25
    50ba:	2a 95       	dec	r18
    50bc:	e2 f7       	brpl	.-8      	; 0x50b6 <DIO_eunmSetPinInterPullUp+0x23c>
    50be:	80 95       	com	r24
    50c0:	84 23       	and	r24, r20
    50c2:	8c 93       	st	X, r24
				SET_BIT(PORTD_R,COPY_u8PIN);
    50c4:	a2 e3       	ldi	r26, 0x32	; 50
    50c6:	b0 e0       	ldi	r27, 0x00	; 0
    50c8:	e2 e3       	ldi	r30, 0x32	; 50
    50ca:	f0 e0       	ldi	r31, 0x00	; 0
    50cc:	80 81       	ld	r24, Z
    50ce:	48 2f       	mov	r20, r24
    50d0:	8b 81       	ldd	r24, Y+3	; 0x03
    50d2:	28 2f       	mov	r18, r24
    50d4:	30 e0       	ldi	r19, 0x00	; 0
    50d6:	81 e0       	ldi	r24, 0x01	; 1
    50d8:	90 e0       	ldi	r25, 0x00	; 0
    50da:	02 2e       	mov	r0, r18
    50dc:	02 c0       	rjmp	.+4      	; 0x50e2 <DIO_eunmSetPinInterPullUp+0x268>
    50de:	88 0f       	add	r24, r24
    50e0:	99 1f       	adc	r25, r25
    50e2:	0a 94       	dec	r0
    50e4:	e2 f7       	brpl	.-8      	; 0x50de <DIO_eunmSetPinInterPullUp+0x264>
    50e6:	84 2b       	or	r24, r20
    50e8:	8c 93       	st	X, r24
    50ea:	16 c0       	rjmp	.+44     	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>
			}
			else
			{
				CLR_BIT(PORTD_R,COPY_u8PIN);
    50ec:	a2 e3       	ldi	r26, 0x32	; 50
    50ee:	b0 e0       	ldi	r27, 0x00	; 0
    50f0:	e2 e3       	ldi	r30, 0x32	; 50
    50f2:	f0 e0       	ldi	r31, 0x00	; 0
    50f4:	80 81       	ld	r24, Z
    50f6:	48 2f       	mov	r20, r24
    50f8:	8b 81       	ldd	r24, Y+3	; 0x03
    50fa:	28 2f       	mov	r18, r24
    50fc:	30 e0       	ldi	r19, 0x00	; 0
    50fe:	81 e0       	ldi	r24, 0x01	; 1
    5100:	90 e0       	ldi	r25, 0x00	; 0
    5102:	02 2e       	mov	r0, r18
    5104:	02 c0       	rjmp	.+4      	; 0x510a <DIO_eunmSetPinInterPullUp+0x290>
    5106:	88 0f       	add	r24, r24
    5108:	99 1f       	adc	r25, r25
    510a:	0a 94       	dec	r0
    510c:	e2 f7       	brpl	.-8      	; 0x5106 <DIO_eunmSetPinInterPullUp+0x28c>
    510e:	80 95       	com	r24
    5110:	84 23       	and	r24, r20
    5112:	8c 93       	st	X, r24
    5114:	01 c0       	rjmp	.+2      	; 0x5118 <DIO_eunmSetPinInterPullUp+0x29e>

		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    5116:	19 82       	std	Y+1, r1	; 0x01
	}


	return LOC_enumStatus ;
    5118:	89 81       	ldd	r24, Y+1	; 0x01
}
    511a:	26 96       	adiw	r28, 0x06	; 6
    511c:	0f b6       	in	r0, 0x3f	; 63
    511e:	f8 94       	cli
    5120:	de bf       	out	0x3e, r29	; 62
    5122:	0f be       	out	0x3f, r0	; 63
    5124:	cd bf       	out	0x3d, r28	; 61
    5126:	cf 91       	pop	r28
    5128:	df 91       	pop	r29
    512a:	08 95       	ret

0000512c <DIO_voidWriteHighNibble>:
DIO_ErrorStatus DIO_voidWriteHighNibble         (u8 COPY_u8PORT ,u8 COPY_u8Value                        )
{
    512c:	df 93       	push	r29
    512e:	cf 93       	push	r28
    5130:	00 d0       	rcall	.+0      	; 0x5132 <DIO_voidWriteHighNibble+0x6>
    5132:	00 d0       	rcall	.+0      	; 0x5134 <DIO_voidWriteHighNibble+0x8>
    5134:	0f 92       	push	r0
    5136:	cd b7       	in	r28, 0x3d	; 61
    5138:	de b7       	in	r29, 0x3e	; 62
    513a:	8a 83       	std	Y+2, r24	; 0x02
    513c:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    513e:	81 e0       	ldi	r24, 0x01	; 1
    5140:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    5142:	8a 81       	ldd	r24, Y+2	; 0x02
    5144:	84 30       	cpi	r24, 0x04	; 4
    5146:	08 f0       	brcs	.+2      	; 0x514a <DIO_voidWriteHighNibble+0x1e>
    5148:	63 c0       	rjmp	.+198    	; 0x5210 <DIO_voidWriteHighNibble+0xe4>
	{
		COPY_u8Value = (COPY_u8Value<<4);
    514a:	8b 81       	ldd	r24, Y+3	; 0x03
    514c:	82 95       	swap	r24
    514e:	80 7f       	andi	r24, 0xF0	; 240
    5150:	8b 83       	std	Y+3, r24	; 0x03
		switch(COPY_u8PORT)
    5152:	8a 81       	ldd	r24, Y+2	; 0x02
    5154:	28 2f       	mov	r18, r24
    5156:	30 e0       	ldi	r19, 0x00	; 0
    5158:	3d 83       	std	Y+5, r19	; 0x05
    515a:	2c 83       	std	Y+4, r18	; 0x04
    515c:	8c 81       	ldd	r24, Y+4	; 0x04
    515e:	9d 81       	ldd	r25, Y+5	; 0x05
    5160:	81 30       	cpi	r24, 0x01	; 1
    5162:	91 05       	cpc	r25, r1
    5164:	29 f1       	breq	.+74     	; 0x51b0 <DIO_voidWriteHighNibble+0x84>
    5166:	2c 81       	ldd	r18, Y+4	; 0x04
    5168:	3d 81       	ldd	r19, Y+5	; 0x05
    516a:	22 30       	cpi	r18, 0x02	; 2
    516c:	31 05       	cpc	r19, r1
    516e:	2c f4       	brge	.+10     	; 0x517a <DIO_voidWriteHighNibble+0x4e>
    5170:	8c 81       	ldd	r24, Y+4	; 0x04
    5172:	9d 81       	ldd	r25, Y+5	; 0x05
    5174:	00 97       	sbiw	r24, 0x00	; 0
    5176:	61 f0       	breq	.+24     	; 0x5190 <DIO_voidWriteHighNibble+0x64>
    5178:	4c c0       	rjmp	.+152    	; 0x5212 <DIO_voidWriteHighNibble+0xe6>
    517a:	2c 81       	ldd	r18, Y+4	; 0x04
    517c:	3d 81       	ldd	r19, Y+5	; 0x05
    517e:	22 30       	cpi	r18, 0x02	; 2
    5180:	31 05       	cpc	r19, r1
    5182:	31 f1       	breq	.+76     	; 0x51d0 <DIO_voidWriteHighNibble+0xa4>
    5184:	8c 81       	ldd	r24, Y+4	; 0x04
    5186:	9d 81       	ldd	r25, Y+5	; 0x05
    5188:	83 30       	cpi	r24, 0x03	; 3
    518a:	91 05       	cpc	r25, r1
    518c:	89 f1       	breq	.+98     	; 0x51f0 <DIO_voidWriteHighNibble+0xc4>
    518e:	41 c0       	rjmp	.+130    	; 0x5212 <DIO_voidWriteHighNibble+0xe6>
		{
		case DIO_PORTA :
			PORTA_R&=0x0f;
    5190:	ab e3       	ldi	r26, 0x3B	; 59
    5192:	b0 e0       	ldi	r27, 0x00	; 0
    5194:	eb e3       	ldi	r30, 0x3B	; 59
    5196:	f0 e0       	ldi	r31, 0x00	; 0
    5198:	80 81       	ld	r24, Z
    519a:	8f 70       	andi	r24, 0x0F	; 15
    519c:	8c 93       	st	X, r24
			PORTA_R|=COPY_u8Value;
    519e:	ab e3       	ldi	r26, 0x3B	; 59
    51a0:	b0 e0       	ldi	r27, 0x00	; 0
    51a2:	eb e3       	ldi	r30, 0x3B	; 59
    51a4:	f0 e0       	ldi	r31, 0x00	; 0
    51a6:	90 81       	ld	r25, Z
    51a8:	8b 81       	ldd	r24, Y+3	; 0x03
    51aa:	89 2b       	or	r24, r25
    51ac:	8c 93       	st	X, r24
    51ae:	31 c0       	rjmp	.+98     	; 0x5212 <DIO_voidWriteHighNibble+0xe6>
			break;
		case DIO_PORTB :
			PORTB_R&=0x0f;
    51b0:	a8 e3       	ldi	r26, 0x38	; 56
    51b2:	b0 e0       	ldi	r27, 0x00	; 0
    51b4:	e8 e3       	ldi	r30, 0x38	; 56
    51b6:	f0 e0       	ldi	r31, 0x00	; 0
    51b8:	80 81       	ld	r24, Z
    51ba:	8f 70       	andi	r24, 0x0F	; 15
    51bc:	8c 93       	st	X, r24
			PORTB_R|=COPY_u8Value;
    51be:	a8 e3       	ldi	r26, 0x38	; 56
    51c0:	b0 e0       	ldi	r27, 0x00	; 0
    51c2:	e8 e3       	ldi	r30, 0x38	; 56
    51c4:	f0 e0       	ldi	r31, 0x00	; 0
    51c6:	90 81       	ld	r25, Z
    51c8:	8b 81       	ldd	r24, Y+3	; 0x03
    51ca:	89 2b       	or	r24, r25
    51cc:	8c 93       	st	X, r24
    51ce:	21 c0       	rjmp	.+66     	; 0x5212 <DIO_voidWriteHighNibble+0xe6>
			break;
		case DIO_PORTC :
			PORTC_R&=0x0f;
    51d0:	a5 e3       	ldi	r26, 0x35	; 53
    51d2:	b0 e0       	ldi	r27, 0x00	; 0
    51d4:	e5 e3       	ldi	r30, 0x35	; 53
    51d6:	f0 e0       	ldi	r31, 0x00	; 0
    51d8:	80 81       	ld	r24, Z
    51da:	8f 70       	andi	r24, 0x0F	; 15
    51dc:	8c 93       	st	X, r24
			PORTC_R|=COPY_u8Value;
    51de:	a5 e3       	ldi	r26, 0x35	; 53
    51e0:	b0 e0       	ldi	r27, 0x00	; 0
    51e2:	e5 e3       	ldi	r30, 0x35	; 53
    51e4:	f0 e0       	ldi	r31, 0x00	; 0
    51e6:	90 81       	ld	r25, Z
    51e8:	8b 81       	ldd	r24, Y+3	; 0x03
    51ea:	89 2b       	or	r24, r25
    51ec:	8c 93       	st	X, r24
    51ee:	11 c0       	rjmp	.+34     	; 0x5212 <DIO_voidWriteHighNibble+0xe6>
			break;
		case DIO_PORTD :
			PORTD_R&=0x0f;
    51f0:	a2 e3       	ldi	r26, 0x32	; 50
    51f2:	b0 e0       	ldi	r27, 0x00	; 0
    51f4:	e2 e3       	ldi	r30, 0x32	; 50
    51f6:	f0 e0       	ldi	r31, 0x00	; 0
    51f8:	80 81       	ld	r24, Z
    51fa:	8f 70       	andi	r24, 0x0F	; 15
    51fc:	8c 93       	st	X, r24
			PORTD_R|=COPY_u8Value;
    51fe:	a2 e3       	ldi	r26, 0x32	; 50
    5200:	b0 e0       	ldi	r27, 0x00	; 0
    5202:	e2 e3       	ldi	r30, 0x32	; 50
    5204:	f0 e0       	ldi	r31, 0x00	; 0
    5206:	90 81       	ld	r25, Z
    5208:	8b 81       	ldd	r24, Y+3	; 0x03
    520a:	89 2b       	or	r24, r25
    520c:	8c 93       	st	X, r24
    520e:	01 c0       	rjmp	.+2      	; 0x5212 <DIO_voidWriteHighNibble+0xe6>

		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    5210:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus ;
    5212:	89 81       	ldd	r24, Y+1	; 0x01
}
    5214:	0f 90       	pop	r0
    5216:	0f 90       	pop	r0
    5218:	0f 90       	pop	r0
    521a:	0f 90       	pop	r0
    521c:	0f 90       	pop	r0
    521e:	cf 91       	pop	r28
    5220:	df 91       	pop	r29
    5222:	08 95       	ret

00005224 <DIO_voidWriteLowNibble>:

DIO_ErrorStatus DIO_voidWriteLowNibble          (u8 COPY_u8PORT ,u8 COPY_u8Value                        )
{
    5224:	df 93       	push	r29
    5226:	cf 93       	push	r28
    5228:	00 d0       	rcall	.+0      	; 0x522a <DIO_voidWriteLowNibble+0x6>
    522a:	00 d0       	rcall	.+0      	; 0x522c <DIO_voidWriteLowNibble+0x8>
    522c:	0f 92       	push	r0
    522e:	cd b7       	in	r28, 0x3d	; 61
    5230:	de b7       	in	r29, 0x3e	; 62
    5232:	8a 83       	std	Y+2, r24	; 0x02
    5234:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    5236:	81 e0       	ldi	r24, 0x01	; 1
    5238:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    523a:	8a 81       	ldd	r24, Y+2	; 0x02
    523c:	84 30       	cpi	r24, 0x04	; 4
    523e:	08 f0       	brcs	.+2      	; 0x5242 <DIO_voidWriteLowNibble+0x1e>
    5240:	62 c0       	rjmp	.+196    	; 0x5306 <DIO_voidWriteLowNibble+0xe2>
	{
		COPY_u8Value &=0x0f;
    5242:	8b 81       	ldd	r24, Y+3	; 0x03
    5244:	8f 70       	andi	r24, 0x0F	; 15
    5246:	8b 83       	std	Y+3, r24	; 0x03
		switch(COPY_u8PORT)
    5248:	8a 81       	ldd	r24, Y+2	; 0x02
    524a:	28 2f       	mov	r18, r24
    524c:	30 e0       	ldi	r19, 0x00	; 0
    524e:	3d 83       	std	Y+5, r19	; 0x05
    5250:	2c 83       	std	Y+4, r18	; 0x04
    5252:	8c 81       	ldd	r24, Y+4	; 0x04
    5254:	9d 81       	ldd	r25, Y+5	; 0x05
    5256:	81 30       	cpi	r24, 0x01	; 1
    5258:	91 05       	cpc	r25, r1
    525a:	29 f1       	breq	.+74     	; 0x52a6 <DIO_voidWriteLowNibble+0x82>
    525c:	2c 81       	ldd	r18, Y+4	; 0x04
    525e:	3d 81       	ldd	r19, Y+5	; 0x05
    5260:	22 30       	cpi	r18, 0x02	; 2
    5262:	31 05       	cpc	r19, r1
    5264:	2c f4       	brge	.+10     	; 0x5270 <DIO_voidWriteLowNibble+0x4c>
    5266:	8c 81       	ldd	r24, Y+4	; 0x04
    5268:	9d 81       	ldd	r25, Y+5	; 0x05
    526a:	00 97       	sbiw	r24, 0x00	; 0
    526c:	61 f0       	breq	.+24     	; 0x5286 <DIO_voidWriteLowNibble+0x62>
    526e:	4c c0       	rjmp	.+152    	; 0x5308 <DIO_voidWriteLowNibble+0xe4>
    5270:	2c 81       	ldd	r18, Y+4	; 0x04
    5272:	3d 81       	ldd	r19, Y+5	; 0x05
    5274:	22 30       	cpi	r18, 0x02	; 2
    5276:	31 05       	cpc	r19, r1
    5278:	31 f1       	breq	.+76     	; 0x52c6 <DIO_voidWriteLowNibble+0xa2>
    527a:	8c 81       	ldd	r24, Y+4	; 0x04
    527c:	9d 81       	ldd	r25, Y+5	; 0x05
    527e:	83 30       	cpi	r24, 0x03	; 3
    5280:	91 05       	cpc	r25, r1
    5282:	89 f1       	breq	.+98     	; 0x52e6 <DIO_voidWriteLowNibble+0xc2>
    5284:	41 c0       	rjmp	.+130    	; 0x5308 <DIO_voidWriteLowNibble+0xe4>
		{
		case DIO_PORTA :
			PORTA_R&=0xf0;
    5286:	ab e3       	ldi	r26, 0x3B	; 59
    5288:	b0 e0       	ldi	r27, 0x00	; 0
    528a:	eb e3       	ldi	r30, 0x3B	; 59
    528c:	f0 e0       	ldi	r31, 0x00	; 0
    528e:	80 81       	ld	r24, Z
    5290:	80 7f       	andi	r24, 0xF0	; 240
    5292:	8c 93       	st	X, r24
			PORTA_R|=COPY_u8Value;
    5294:	ab e3       	ldi	r26, 0x3B	; 59
    5296:	b0 e0       	ldi	r27, 0x00	; 0
    5298:	eb e3       	ldi	r30, 0x3B	; 59
    529a:	f0 e0       	ldi	r31, 0x00	; 0
    529c:	90 81       	ld	r25, Z
    529e:	8b 81       	ldd	r24, Y+3	; 0x03
    52a0:	89 2b       	or	r24, r25
    52a2:	8c 93       	st	X, r24
    52a4:	31 c0       	rjmp	.+98     	; 0x5308 <DIO_voidWriteLowNibble+0xe4>
			break;
		case DIO_PORTB :
			PORTB_R&=0xf0;
    52a6:	a8 e3       	ldi	r26, 0x38	; 56
    52a8:	b0 e0       	ldi	r27, 0x00	; 0
    52aa:	e8 e3       	ldi	r30, 0x38	; 56
    52ac:	f0 e0       	ldi	r31, 0x00	; 0
    52ae:	80 81       	ld	r24, Z
    52b0:	80 7f       	andi	r24, 0xF0	; 240
    52b2:	8c 93       	st	X, r24
			PORTB_R|=COPY_u8Value;
    52b4:	a8 e3       	ldi	r26, 0x38	; 56
    52b6:	b0 e0       	ldi	r27, 0x00	; 0
    52b8:	e8 e3       	ldi	r30, 0x38	; 56
    52ba:	f0 e0       	ldi	r31, 0x00	; 0
    52bc:	90 81       	ld	r25, Z
    52be:	8b 81       	ldd	r24, Y+3	; 0x03
    52c0:	89 2b       	or	r24, r25
    52c2:	8c 93       	st	X, r24
    52c4:	21 c0       	rjmp	.+66     	; 0x5308 <DIO_voidWriteLowNibble+0xe4>
			break;
		case DIO_PORTC :
			PORTC_R&=0xf0;
    52c6:	a5 e3       	ldi	r26, 0x35	; 53
    52c8:	b0 e0       	ldi	r27, 0x00	; 0
    52ca:	e5 e3       	ldi	r30, 0x35	; 53
    52cc:	f0 e0       	ldi	r31, 0x00	; 0
    52ce:	80 81       	ld	r24, Z
    52d0:	80 7f       	andi	r24, 0xF0	; 240
    52d2:	8c 93       	st	X, r24
			PORTC_R|=COPY_u8Value;
    52d4:	a5 e3       	ldi	r26, 0x35	; 53
    52d6:	b0 e0       	ldi	r27, 0x00	; 0
    52d8:	e5 e3       	ldi	r30, 0x35	; 53
    52da:	f0 e0       	ldi	r31, 0x00	; 0
    52dc:	90 81       	ld	r25, Z
    52de:	8b 81       	ldd	r24, Y+3	; 0x03
    52e0:	89 2b       	or	r24, r25
    52e2:	8c 93       	st	X, r24
    52e4:	11 c0       	rjmp	.+34     	; 0x5308 <DIO_voidWriteLowNibble+0xe4>
			break;
		case DIO_PORTD :
			PORTD_R&=0xf0;
    52e6:	a2 e3       	ldi	r26, 0x32	; 50
    52e8:	b0 e0       	ldi	r27, 0x00	; 0
    52ea:	e2 e3       	ldi	r30, 0x32	; 50
    52ec:	f0 e0       	ldi	r31, 0x00	; 0
    52ee:	80 81       	ld	r24, Z
    52f0:	80 7f       	andi	r24, 0xF0	; 240
    52f2:	8c 93       	st	X, r24
			PORTD_R|=COPY_u8Value;
    52f4:	a2 e3       	ldi	r26, 0x32	; 50
    52f6:	b0 e0       	ldi	r27, 0x00	; 0
    52f8:	e2 e3       	ldi	r30, 0x32	; 50
    52fa:	f0 e0       	ldi	r31, 0x00	; 0
    52fc:	90 81       	ld	r25, Z
    52fe:	8b 81       	ldd	r24, Y+3	; 0x03
    5300:	89 2b       	or	r24, r25
    5302:	8c 93       	st	X, r24
    5304:	01 c0       	rjmp	.+2      	; 0x5308 <DIO_voidWriteLowNibble+0xe4>

		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    5306:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus ;
    5308:	89 81       	ldd	r24, Y+1	; 0x01

}
    530a:	0f 90       	pop	r0
    530c:	0f 90       	pop	r0
    530e:	0f 90       	pop	r0
    5310:	0f 90       	pop	r0
    5312:	0f 90       	pop	r0
    5314:	cf 91       	pop	r28
    5316:	df 91       	pop	r29
    5318:	08 95       	ret

0000531a <LED_VoidInitialPin>:
#include "LED_interface.h"
#include "LED_private.h"
#include "LED_config.h"

void LED_VoidInitialPin ( LED_Type LED_Configuration )
{
    531a:	df 93       	push	r29
    531c:	cf 93       	push	r28
    531e:	00 d0       	rcall	.+0      	; 0x5320 <LED_VoidInitialPin+0x6>
    5320:	0f 92       	push	r0
    5322:	cd b7       	in	r28, 0x3d	; 61
    5324:	de b7       	in	r29, 0x3e	; 62
    5326:	69 83       	std	Y+1, r22	; 0x01
    5328:	7a 83       	std	Y+2, r23	; 0x02
    532a:	8b 83       	std	Y+3, r24	; 0x03
	DIO_eunmSetPinDirection ( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_OUTPUT );
    532c:	89 81       	ldd	r24, Y+1	; 0x01
    532e:	9a 81       	ldd	r25, Y+2	; 0x02
    5330:	69 2f       	mov	r22, r25
    5332:	41 e0       	ldi	r20, 0x01	; 1
    5334:	0e 94 8e 22 	call	0x451c	; 0x451c <DIO_eunmSetPinDirection>
}
    5338:	0f 90       	pop	r0
    533a:	0f 90       	pop	r0
    533c:	0f 90       	pop	r0
    533e:	cf 91       	pop	r28
    5340:	df 91       	pop	r29
    5342:	08 95       	ret

00005344 <LED_VoidTurnOn>:
void LED_VoidTurnOn     ( LED_Type LED_Configuration )
{
    5344:	df 93       	push	r29
    5346:	cf 93       	push	r28
    5348:	00 d0       	rcall	.+0      	; 0x534a <LED_VoidTurnOn+0x6>
    534a:	0f 92       	push	r0
    534c:	cd b7       	in	r28, 0x3d	; 61
    534e:	de b7       	in	r29, 0x3e	; 62
    5350:	69 83       	std	Y+1, r22	; 0x01
    5352:	7a 83       	std	Y+2, r23	; 0x02
    5354:	8b 83       	std	Y+3, r24	; 0x03
	if( LED_Configuration.Active_State == ACTIVE_HIGH )
    5356:	8b 81       	ldd	r24, Y+3	; 0x03
    5358:	81 30       	cpi	r24, 0x01	; 1
    535a:	39 f4       	brne	.+14     	; 0x536a <LED_VoidTurnOn+0x26>
	{
		DIO_eunmSetPinValue   ( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_HIGH );
    535c:	89 81       	ldd	r24, Y+1	; 0x01
    535e:	9a 81       	ldd	r25, Y+2	; 0x02
    5360:	69 2f       	mov	r22, r25
    5362:	41 e0       	ldi	r20, 0x01	; 1
    5364:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
    5368:	09 c0       	rjmp	.+18     	; 0x537c <LED_VoidTurnOn+0x38>
	}
	else if ( LED_Configuration.Active_State == ACTIVE_LOW )
    536a:	8b 81       	ldd	r24, Y+3	; 0x03
    536c:	88 23       	and	r24, r24
    536e:	31 f4       	brne	.+12     	; 0x537c <LED_VoidTurnOn+0x38>
	{
		DIO_eunmSetPinValue   ( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_LOW );
    5370:	89 81       	ldd	r24, Y+1	; 0x01
    5372:	9a 81       	ldd	r25, Y+2	; 0x02
    5374:	69 2f       	mov	r22, r25
    5376:	40 e0       	ldi	r20, 0x00	; 0
    5378:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
	}
}
    537c:	0f 90       	pop	r0
    537e:	0f 90       	pop	r0
    5380:	0f 90       	pop	r0
    5382:	cf 91       	pop	r28
    5384:	df 91       	pop	r29
    5386:	08 95       	ret

00005388 <LED_VoidTurnOff>:
void LED_VoidTurnOff    ( LED_Type LED_Configuration )
{
    5388:	df 93       	push	r29
    538a:	cf 93       	push	r28
    538c:	00 d0       	rcall	.+0      	; 0x538e <LED_VoidTurnOff+0x6>
    538e:	0f 92       	push	r0
    5390:	cd b7       	in	r28, 0x3d	; 61
    5392:	de b7       	in	r29, 0x3e	; 62
    5394:	69 83       	std	Y+1, r22	; 0x01
    5396:	7a 83       	std	Y+2, r23	; 0x02
    5398:	8b 83       	std	Y+3, r24	; 0x03
	if( LED_Configuration.Active_State == ACTIVE_HIGH )
    539a:	8b 81       	ldd	r24, Y+3	; 0x03
    539c:	81 30       	cpi	r24, 0x01	; 1
    539e:	39 f4       	brne	.+14     	; 0x53ae <LED_VoidTurnOff+0x26>
	{
		DIO_eunmSetPinValue   ( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_LOW );
    53a0:	89 81       	ldd	r24, Y+1	; 0x01
    53a2:	9a 81       	ldd	r25, Y+2	; 0x02
    53a4:	69 2f       	mov	r22, r25
    53a6:	40 e0       	ldi	r20, 0x00	; 0
    53a8:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
    53ac:	09 c0       	rjmp	.+18     	; 0x53c0 <LED_VoidTurnOff+0x38>
	}
	else if ( LED_Configuration.Active_State == ACTIVE_LOW )
    53ae:	8b 81       	ldd	r24, Y+3	; 0x03
    53b0:	88 23       	and	r24, r24
    53b2:	31 f4       	brne	.+12     	; 0x53c0 <LED_VoidTurnOff+0x38>
	{
		DIO_eunmSetPinValue   ( LED_Configuration.Port , LED_Configuration.Pin , DIO_PIN_HIGH );
    53b4:	89 81       	ldd	r24, Y+1	; 0x01
    53b6:	9a 81       	ldd	r25, Y+2	; 0x02
    53b8:	69 2f       	mov	r22, r25
    53ba:	41 e0       	ldi	r20, 0x01	; 1
    53bc:	0e 94 9d 23 	call	0x473a	; 0x473a <DIO_eunmSetPinValue>
	}
}
    53c0:	0f 90       	pop	r0
    53c2:	0f 90       	pop	r0
    53c4:	0f 90       	pop	r0
    53c6:	cf 91       	pop	r28
    53c8:	df 91       	pop	r29
    53ca:	08 95       	ret

000053cc <LED_VoidToggle>:
void LED_VoidToggle     ( LED_Type LED_Configuration )
{
    53cc:	df 93       	push	r29
    53ce:	cf 93       	push	r28
    53d0:	00 d0       	rcall	.+0      	; 0x53d2 <LED_VoidToggle+0x6>
    53d2:	0f 92       	push	r0
    53d4:	cd b7       	in	r28, 0x3d	; 61
    53d6:	de b7       	in	r29, 0x3e	; 62
    53d8:	69 83       	std	Y+1, r22	; 0x01
    53da:	7a 83       	std	Y+2, r23	; 0x02
    53dc:	8b 83       	std	Y+3, r24	; 0x03
	DIO_eunmTogglePin  (LED_Configuration.Port , LED_Configuration.Pin);
    53de:	89 81       	ldd	r24, Y+1	; 0x01
    53e0:	9a 81       	ldd	r25, Y+2	; 0x02
    53e2:	69 2f       	mov	r22, r25
    53e4:	0e 94 71 25 	call	0x4ae2	; 0x4ae2 <DIO_eunmTogglePin>
}
    53e8:	0f 90       	pop	r0
    53ea:	0f 90       	pop	r0
    53ec:	0f 90       	pop	r0
    53ee:	cf 91       	pop	r28
    53f0:	df 91       	pop	r29
    53f2:	08 95       	ret

000053f4 <APP>:

#include"LED_interface.h"

LED_Type led ={LED_PORTD,LED_PIN0,ACTIVE_HIGH};
void APP (void)
{
    53f4:	df 93       	push	r29
    53f6:	cf 93       	push	r28
    53f8:	cd b7       	in	r28, 0x3d	; 61
    53fa:	de b7       	in	r29, 0x3e	; 62
	CLCD_voidInial();
    53fc:	0e 94 56 16 	call	0x2cac	; 0x2cac <CLCD_voidInial>
	LED_VoidInitialPin(led);
    5400:	60 91 ae 01 	lds	r22, 0x01AE
    5404:	70 91 af 01 	lds	r23, 0x01AF
    5408:	80 91 b0 01 	lds	r24, 0x01B0
    540c:	0e 94 8d 29 	call	0x531a	; 0x531a <LED_VoidInitialPin>
	ADC_voidInit();
    5410:	0e 94 b4 13 	call	0x2768	; 0x2768 <ADC_voidInit>
	ADC_u8SetPrescaler(ADC_PRE_64);
    5414:	86 e0       	ldi	r24, 0x06	; 6
    5416:	0e 94 24 14 	call	0x2848	; 0x2848 <ADC_u8SetPrescaler>
	ADC_voidEnable();
    541a:	0e 94 ec 13 	call	0x27d8	; 0x27d8 <ADC_voidEnable>

}
    541e:	cf 91       	pop	r28
    5420:	df 91       	pop	r29
    5422:	08 95       	ret

00005424 <main>:
u8 result=0;
u8 temp=0;
int main ()
{
    5424:	df 93       	push	r29
    5426:	cf 93       	push	r28
    5428:	cd b7       	in	r28, 0x3d	; 61
    542a:	de b7       	in	r29, 0x3e	; 62
	APP();
    542c:	0e 94 fa 29 	call	0x53f4	; 0x53f4 <APP>
	CLCD_voidSendString("TEMP:");
    5430:	80 e6       	ldi	r24, 0x60	; 96
    5432:	90 e0       	ldi	r25, 0x00	; 0
    5434:	0e 94 35 19 	call	0x326a	; 0x326a <CLCD_voidSendString>

	while(1)
	{

		 ADC_u8GetResultSync(ADC_CHANNEL0,&result);
    5438:	2c eb       	ldi	r18, 0xBC	; 188
    543a:	31 e0       	ldi	r19, 0x01	; 1
    543c:	80 e0       	ldi	r24, 0x00	; 0
    543e:	b9 01       	movw	r22, r18
    5440:	0e 94 44 14 	call	0x2888	; 0x2888 <ADC_u8GetResultSync>
		temp =result*0.25 ;
    5444:	80 91 bc 01 	lds	r24, 0x01BC
    5448:	88 2f       	mov	r24, r24
    544a:	90 e0       	ldi	r25, 0x00	; 0
    544c:	aa 27       	eor	r26, r26
    544e:	97 fd       	sbrc	r25, 7
    5450:	a0 95       	com	r26
    5452:	ba 2f       	mov	r27, r26
    5454:	bc 01       	movw	r22, r24
    5456:	cd 01       	movw	r24, r26
    5458:	0e 94 0d 11 	call	0x221a	; 0x221a <__floatsisf>
    545c:	dc 01       	movw	r26, r24
    545e:	cb 01       	movw	r24, r22
    5460:	bc 01       	movw	r22, r24
    5462:	cd 01       	movw	r24, r26
    5464:	20 e0       	ldi	r18, 0x00	; 0
    5466:	30 e0       	ldi	r19, 0x00	; 0
    5468:	40 e8       	ldi	r20, 0x80	; 128
    546a:	5e e3       	ldi	r21, 0x3E	; 62
    546c:	0e 94 83 0f 	call	0x1f06	; 0x1f06 <__mulsf3>
    5470:	dc 01       	movw	r26, r24
    5472:	cb 01       	movw	r24, r22
    5474:	bc 01       	movw	r22, r24
    5476:	cd 01       	movw	r24, r26
    5478:	0e 94 c8 00 	call	0x190	; 0x190 <__fixunssfsi>
    547c:	dc 01       	movw	r26, r24
    547e:	cb 01       	movw	r24, r22
    5480:	80 93 bd 01 	sts	0x01BD, r24

		if(temp<10)
    5484:	80 91 bd 01 	lds	r24, 0x01BD
    5488:	8a 30       	cpi	r24, 0x0A	; 10
    548a:	78 f4       	brcc	.+30     	; 0x54aa <main+0x86>
		{
			CLCD_SetPosition(CLCD_ROW_2,CLCD_COL_1);
    548c:	82 e0       	ldi	r24, 0x02	; 2
    548e:	61 e0       	ldi	r22, 0x01	; 1
    5490:	0e 94 2d 20 	call	0x405a	; 0x405a <CLCD_SetPosition>
			CLCD_voidSendData((temp%10)+48);
    5494:	80 91 bd 01 	lds	r24, 0x01BD
    5498:	9a e0       	ldi	r25, 0x0A	; 10
    549a:	69 2f       	mov	r22, r25
    549c:	0e 94 86 2a 	call	0x550c	; 0x550c <__udivmodqi4>
    54a0:	89 2f       	mov	r24, r25
    54a2:	80 5d       	subi	r24, 0xD0	; 208
    54a4:	0e 94 ed 18 	call	0x31da	; 0x31da <CLCD_voidSendData>
    54a8:	1b c0       	rjmp	.+54     	; 0x54e0 <main+0xbc>

		}else if (temp<100)
    54aa:	80 91 bd 01 	lds	r24, 0x01BD
    54ae:	84 36       	cpi	r24, 0x64	; 100
    54b0:	b8 f4       	brcc	.+46     	; 0x54e0 <main+0xbc>
		{
			CLCD_SetPosition(CLCD_ROW_2,CLCD_COL_1);
    54b2:	82 e0       	ldi	r24, 0x02	; 2
    54b4:	61 e0       	ldi	r22, 0x01	; 1
    54b6:	0e 94 2d 20 	call	0x405a	; 0x405a <CLCD_SetPosition>
			CLCD_voidSendData((temp/10)+48);
    54ba:	80 91 bd 01 	lds	r24, 0x01BD
    54be:	9a e0       	ldi	r25, 0x0A	; 10
    54c0:	69 2f       	mov	r22, r25
    54c2:	0e 94 86 2a 	call	0x550c	; 0x550c <__udivmodqi4>
    54c6:	80 5d       	subi	r24, 0xD0	; 208
    54c8:	0e 94 ed 18 	call	0x31da	; 0x31da <CLCD_voidSendData>
			CLCD_voidSendData((temp%10)+48);
    54cc:	80 91 bd 01 	lds	r24, 0x01BD
    54d0:	9a e0       	ldi	r25, 0x0A	; 10
    54d2:	69 2f       	mov	r22, r25
    54d4:	0e 94 86 2a 	call	0x550c	; 0x550c <__udivmodqi4>
    54d8:	89 2f       	mov	r24, r25
    54da:	80 5d       	subi	r24, 0xD0	; 208
    54dc:	0e 94 ed 18 	call	0x31da	; 0x31da <CLCD_voidSendData>

		}



		if(temp>=30)
    54e0:	80 91 bd 01 	lds	r24, 0x01BD
    54e4:	8e 31       	cpi	r24, 0x1E	; 30
    54e6:	48 f0       	brcs	.+18     	; 0x54fa <main+0xd6>
		{
			LED_VoidTurnOn(led);
    54e8:	60 91 ae 01 	lds	r22, 0x01AE
    54ec:	70 91 af 01 	lds	r23, 0x01AF
    54f0:	80 91 b0 01 	lds	r24, 0x01B0
    54f4:	0e 94 a2 29 	call	0x5344	; 0x5344 <LED_VoidTurnOn>
    54f8:	9f cf       	rjmp	.-194    	; 0x5438 <main+0x14>
		}
		else
		{
			LED_VoidTurnOff(led);
    54fa:	60 91 ae 01 	lds	r22, 0x01AE
    54fe:	70 91 af 01 	lds	r23, 0x01AF
    5502:	80 91 b0 01 	lds	r24, 0x01B0
    5506:	0e 94 c4 29 	call	0x5388	; 0x5388 <LED_VoidTurnOff>
    550a:	96 cf       	rjmp	.-212    	; 0x5438 <main+0x14>

0000550c <__udivmodqi4>:
    550c:	99 1b       	sub	r25, r25
    550e:	79 e0       	ldi	r23, 0x09	; 9
    5510:	04 c0       	rjmp	.+8      	; 0x551a <__udivmodqi4_ep>

00005512 <__udivmodqi4_loop>:
    5512:	99 1f       	adc	r25, r25
    5514:	96 17       	cp	r25, r22
    5516:	08 f0       	brcs	.+2      	; 0x551a <__udivmodqi4_ep>
    5518:	96 1b       	sub	r25, r22

0000551a <__udivmodqi4_ep>:
    551a:	88 1f       	adc	r24, r24
    551c:	7a 95       	dec	r23
    551e:	c9 f7       	brne	.-14     	; 0x5512 <__udivmodqi4_loop>
    5520:	80 95       	com	r24
    5522:	08 95       	ret

00005524 <__mulsi3>:
    5524:	62 9f       	mul	r22, r18
    5526:	d0 01       	movw	r26, r0
    5528:	73 9f       	mul	r23, r19
    552a:	f0 01       	movw	r30, r0
    552c:	82 9f       	mul	r24, r18
    552e:	e0 0d       	add	r30, r0
    5530:	f1 1d       	adc	r31, r1
    5532:	64 9f       	mul	r22, r20
    5534:	e0 0d       	add	r30, r0
    5536:	f1 1d       	adc	r31, r1
    5538:	92 9f       	mul	r25, r18
    553a:	f0 0d       	add	r31, r0
    553c:	83 9f       	mul	r24, r19
    553e:	f0 0d       	add	r31, r0
    5540:	74 9f       	mul	r23, r20
    5542:	f0 0d       	add	r31, r0
    5544:	65 9f       	mul	r22, r21
    5546:	f0 0d       	add	r31, r0
    5548:	99 27       	eor	r25, r25
    554a:	72 9f       	mul	r23, r18
    554c:	b0 0d       	add	r27, r0
    554e:	e1 1d       	adc	r30, r1
    5550:	f9 1f       	adc	r31, r25
    5552:	63 9f       	mul	r22, r19
    5554:	b0 0d       	add	r27, r0
    5556:	e1 1d       	adc	r30, r1
    5558:	f9 1f       	adc	r31, r25
    555a:	bd 01       	movw	r22, r26
    555c:	cf 01       	movw	r24, r30
    555e:	11 24       	eor	r1, r1
    5560:	08 95       	ret

00005562 <__udivmodsi4>:
    5562:	a1 e2       	ldi	r26, 0x21	; 33
    5564:	1a 2e       	mov	r1, r26
    5566:	aa 1b       	sub	r26, r26
    5568:	bb 1b       	sub	r27, r27
    556a:	fd 01       	movw	r30, r26
    556c:	0d c0       	rjmp	.+26     	; 0x5588 <__udivmodsi4_ep>

0000556e <__udivmodsi4_loop>:
    556e:	aa 1f       	adc	r26, r26
    5570:	bb 1f       	adc	r27, r27
    5572:	ee 1f       	adc	r30, r30
    5574:	ff 1f       	adc	r31, r31
    5576:	a2 17       	cp	r26, r18
    5578:	b3 07       	cpc	r27, r19
    557a:	e4 07       	cpc	r30, r20
    557c:	f5 07       	cpc	r31, r21
    557e:	20 f0       	brcs	.+8      	; 0x5588 <__udivmodsi4_ep>
    5580:	a2 1b       	sub	r26, r18
    5582:	b3 0b       	sbc	r27, r19
    5584:	e4 0b       	sbc	r30, r20
    5586:	f5 0b       	sbc	r31, r21

00005588 <__udivmodsi4_ep>:
    5588:	66 1f       	adc	r22, r22
    558a:	77 1f       	adc	r23, r23
    558c:	88 1f       	adc	r24, r24
    558e:	99 1f       	adc	r25, r25
    5590:	1a 94       	dec	r1
    5592:	69 f7       	brne	.-38     	; 0x556e <__udivmodsi4_loop>
    5594:	60 95       	com	r22
    5596:	70 95       	com	r23
    5598:	80 95       	com	r24
    559a:	90 95       	com	r25
    559c:	9b 01       	movw	r18, r22
    559e:	ac 01       	movw	r20, r24
    55a0:	bd 01       	movw	r22, r26
    55a2:	cf 01       	movw	r24, r30
    55a4:	08 95       	ret

000055a6 <__prologue_saves__>:
    55a6:	2f 92       	push	r2
    55a8:	3f 92       	push	r3
    55aa:	4f 92       	push	r4
    55ac:	5f 92       	push	r5
    55ae:	6f 92       	push	r6
    55b0:	7f 92       	push	r7
    55b2:	8f 92       	push	r8
    55b4:	9f 92       	push	r9
    55b6:	af 92       	push	r10
    55b8:	bf 92       	push	r11
    55ba:	cf 92       	push	r12
    55bc:	df 92       	push	r13
    55be:	ef 92       	push	r14
    55c0:	ff 92       	push	r15
    55c2:	0f 93       	push	r16
    55c4:	1f 93       	push	r17
    55c6:	cf 93       	push	r28
    55c8:	df 93       	push	r29
    55ca:	cd b7       	in	r28, 0x3d	; 61
    55cc:	de b7       	in	r29, 0x3e	; 62
    55ce:	ca 1b       	sub	r28, r26
    55d0:	db 0b       	sbc	r29, r27
    55d2:	0f b6       	in	r0, 0x3f	; 63
    55d4:	f8 94       	cli
    55d6:	de bf       	out	0x3e, r29	; 62
    55d8:	0f be       	out	0x3f, r0	; 63
    55da:	cd bf       	out	0x3d, r28	; 61
    55dc:	09 94       	ijmp

000055de <__epilogue_restores__>:
    55de:	2a 88       	ldd	r2, Y+18	; 0x12
    55e0:	39 88       	ldd	r3, Y+17	; 0x11
    55e2:	48 88       	ldd	r4, Y+16	; 0x10
    55e4:	5f 84       	ldd	r5, Y+15	; 0x0f
    55e6:	6e 84       	ldd	r6, Y+14	; 0x0e
    55e8:	7d 84       	ldd	r7, Y+13	; 0x0d
    55ea:	8c 84       	ldd	r8, Y+12	; 0x0c
    55ec:	9b 84       	ldd	r9, Y+11	; 0x0b
    55ee:	aa 84       	ldd	r10, Y+10	; 0x0a
    55f0:	b9 84       	ldd	r11, Y+9	; 0x09
    55f2:	c8 84       	ldd	r12, Y+8	; 0x08
    55f4:	df 80       	ldd	r13, Y+7	; 0x07
    55f6:	ee 80       	ldd	r14, Y+6	; 0x06
    55f8:	fd 80       	ldd	r15, Y+5	; 0x05
    55fa:	0c 81       	ldd	r16, Y+4	; 0x04
    55fc:	1b 81       	ldd	r17, Y+3	; 0x03
    55fe:	aa 81       	ldd	r26, Y+2	; 0x02
    5600:	b9 81       	ldd	r27, Y+1	; 0x01
    5602:	ce 0f       	add	r28, r30
    5604:	d1 1d       	adc	r29, r1
    5606:	0f b6       	in	r0, 0x3f	; 63
    5608:	f8 94       	cli
    560a:	de bf       	out	0x3e, r29	; 62
    560c:	0f be       	out	0x3f, r0	; 63
    560e:	cd bf       	out	0x3d, r28	; 61
    5610:	ed 01       	movw	r28, r26
    5612:	08 95       	ret

00005614 <_exit>:
    5614:	f8 94       	cli

00005616 <__stop_program>:
    5616:	ff cf       	rjmp	.-2      	; 0x5616 <__stop_program>
