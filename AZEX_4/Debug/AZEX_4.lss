
AZEX_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000028a4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002a  00800060  000028a4  00002918  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000019d4  00000000  00000000  00002944  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c1c  00000000  00000000  00004318  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00004f34  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00005074  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  000051e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00006e2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00007d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00008ac8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00008c28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00008eb5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009683  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ea       	ldi	r30, 0xA4	; 164
      68:	f8 e2       	ldi	r31, 0x28	; 40
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 38       	cpi	r26, 0x8A	; 138
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 a7 0d 	call	0x1b4e	; 0x1b4e <main>
      7a:	0c 94 50 14 	jmp	0x28a0	; 0x28a0 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 19 14 	jmp	0x2832	; 0x2832 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 35 14 	jmp	0x286a	; 0x286a <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 25 14 	jmp	0x284a	; 0x284a <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 41 14 	jmp	0x2882	; 0x2882 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 25 14 	jmp	0x284a	; 0x284a <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 41 14 	jmp	0x2882	; 0x2882 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 19 14 	jmp	0x2832	; 0x2832 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 35 14 	jmp	0x286a	; 0x286a <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 25 14 	jmp	0x284a	; 0x284a <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 41 14 	jmp	0x2882	; 0x2882 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 25 14 	jmp	0x284a	; 0x284a <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 41 14 	jmp	0x2882	; 0x2882 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 25 14 	jmp	0x284a	; 0x284a <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 41 14 	jmp	0x2882	; 0x2882 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 29 14 	jmp	0x2852	; 0x2852 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 45 14 	jmp	0x288a	; 0x288a <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_eunmSetPinDirection>:
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"

DIO_ErrorStatus DIO_eunmSetPinDirection     (u8 COPY_u8PORT ,u8 COPY_u8PIN ,u8 COPY_u8Direction )
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	28 97       	sbiw	r28, 0x08	; 8
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8a 83       	std	Y+2, r24	; 0x02
     b4c:	6b 83       	std	Y+3, r22	; 0x03
     b4e:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
     b50:	81 e0       	ldi	r24, 0x01	; 1
     b52:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD)&&(COPY_u8PIN <= DIO_PIN7))
     b54:	8a 81       	ldd	r24, Y+2	; 0x02
     b56:	84 30       	cpi	r24, 0x04	; 4
     b58:	08 f0       	brcs	.+2      	; 0xb5c <DIO_eunmSetPinDirection+0x26>
     b5a:	f1 c0       	rjmp	.+482    	; 0xd3e <DIO_eunmSetPinDirection+0x208>
     b5c:	8b 81       	ldd	r24, Y+3	; 0x03
     b5e:	88 30       	cpi	r24, 0x08	; 8
     b60:	08 f0       	brcs	.+2      	; 0xb64 <DIO_eunmSetPinDirection+0x2e>
     b62:	ed c0       	rjmp	.+474    	; 0xd3e <DIO_eunmSetPinDirection+0x208>
	{
		if (COPY_u8Direction == DIO_PIN_OUTPUT)
     b64:	8c 81       	ldd	r24, Y+4	; 0x04
     b66:	81 30       	cpi	r24, 0x01	; 1
     b68:	09 f0       	breq	.+2      	; 0xb6c <DIO_eunmSetPinDirection+0x36>
     b6a:	6f c0       	rjmp	.+222    	; 0xc4a <DIO_eunmSetPinDirection+0x114>
		{
			switch(COPY_u8PORT)
     b6c:	8a 81       	ldd	r24, Y+2	; 0x02
     b6e:	28 2f       	mov	r18, r24
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	38 87       	std	Y+8, r19	; 0x08
     b74:	2f 83       	std	Y+7, r18	; 0x07
     b76:	8f 81       	ldd	r24, Y+7	; 0x07
     b78:	98 85       	ldd	r25, Y+8	; 0x08
     b7a:	81 30       	cpi	r24, 0x01	; 1
     b7c:	91 05       	cpc	r25, r1
     b7e:	49 f1       	breq	.+82     	; 0xbd2 <DIO_eunmSetPinDirection+0x9c>
     b80:	2f 81       	ldd	r18, Y+7	; 0x07
     b82:	38 85       	ldd	r19, Y+8	; 0x08
     b84:	22 30       	cpi	r18, 0x02	; 2
     b86:	31 05       	cpc	r19, r1
     b88:	2c f4       	brge	.+10     	; 0xb94 <DIO_eunmSetPinDirection+0x5e>
     b8a:	8f 81       	ldd	r24, Y+7	; 0x07
     b8c:	98 85       	ldd	r25, Y+8	; 0x08
     b8e:	00 97       	sbiw	r24, 0x00	; 0
     b90:	61 f0       	breq	.+24     	; 0xbaa <DIO_eunmSetPinDirection+0x74>
     b92:	d6 c0       	rjmp	.+428    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
     b94:	2f 81       	ldd	r18, Y+7	; 0x07
     b96:	38 85       	ldd	r19, Y+8	; 0x08
     b98:	22 30       	cpi	r18, 0x02	; 2
     b9a:	31 05       	cpc	r19, r1
     b9c:	71 f1       	breq	.+92     	; 0xbfa <DIO_eunmSetPinDirection+0xc4>
     b9e:	8f 81       	ldd	r24, Y+7	; 0x07
     ba0:	98 85       	ldd	r25, Y+8	; 0x08
     ba2:	83 30       	cpi	r24, 0x03	; 3
     ba4:	91 05       	cpc	r25, r1
     ba6:	e9 f1       	breq	.+122    	; 0xc22 <DIO_eunmSetPinDirection+0xec>
     ba8:	cb c0       	rjmp	.+406    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			{
			case DIO_PORTA: SET_BIT(DDRA_R,COPY_u8PIN); break;
     baa:	aa e3       	ldi	r26, 0x3A	; 58
     bac:	b0 e0       	ldi	r27, 0x00	; 0
     bae:	ea e3       	ldi	r30, 0x3A	; 58
     bb0:	f0 e0       	ldi	r31, 0x00	; 0
     bb2:	80 81       	ld	r24, Z
     bb4:	48 2f       	mov	r20, r24
     bb6:	8b 81       	ldd	r24, Y+3	; 0x03
     bb8:	28 2f       	mov	r18, r24
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	02 2e       	mov	r0, r18
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <DIO_eunmSetPinDirection+0x92>
     bc4:	88 0f       	add	r24, r24
     bc6:	99 1f       	adc	r25, r25
     bc8:	0a 94       	dec	r0
     bca:	e2 f7       	brpl	.-8      	; 0xbc4 <DIO_eunmSetPinDirection+0x8e>
     bcc:	84 2b       	or	r24, r20
     bce:	8c 93       	st	X, r24
     bd0:	b7 c0       	rjmp	.+366    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTB: SET_BIT(DDRB_R,COPY_u8PIN); break;
     bd2:	a7 e3       	ldi	r26, 0x37	; 55
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	e7 e3       	ldi	r30, 0x37	; 55
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	80 81       	ld	r24, Z
     bdc:	48 2f       	mov	r20, r24
     bde:	8b 81       	ldd	r24, Y+3	; 0x03
     be0:	28 2f       	mov	r18, r24
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	02 2e       	mov	r0, r18
     bea:	02 c0       	rjmp	.+4      	; 0xbf0 <DIO_eunmSetPinDirection+0xba>
     bec:	88 0f       	add	r24, r24
     bee:	99 1f       	adc	r25, r25
     bf0:	0a 94       	dec	r0
     bf2:	e2 f7       	brpl	.-8      	; 0xbec <DIO_eunmSetPinDirection+0xb6>
     bf4:	84 2b       	or	r24, r20
     bf6:	8c 93       	st	X, r24
     bf8:	a3 c0       	rjmp	.+326    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTC: SET_BIT(DDRC_R,COPY_u8PIN); break;
     bfa:	a4 e3       	ldi	r26, 0x34	; 52
     bfc:	b0 e0       	ldi	r27, 0x00	; 0
     bfe:	e4 e3       	ldi	r30, 0x34	; 52
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	80 81       	ld	r24, Z
     c04:	48 2f       	mov	r20, r24
     c06:	8b 81       	ldd	r24, Y+3	; 0x03
     c08:	28 2f       	mov	r18, r24
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	02 2e       	mov	r0, r18
     c12:	02 c0       	rjmp	.+4      	; 0xc18 <DIO_eunmSetPinDirection+0xe2>
     c14:	88 0f       	add	r24, r24
     c16:	99 1f       	adc	r25, r25
     c18:	0a 94       	dec	r0
     c1a:	e2 f7       	brpl	.-8      	; 0xc14 <DIO_eunmSetPinDirection+0xde>
     c1c:	84 2b       	or	r24, r20
     c1e:	8c 93       	st	X, r24
     c20:	8f c0       	rjmp	.+286    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTD: SET_BIT(DDRD_R,COPY_u8PIN); break;
     c22:	a1 e3       	ldi	r26, 0x31	; 49
     c24:	b0 e0       	ldi	r27, 0x00	; 0
     c26:	e1 e3       	ldi	r30, 0x31	; 49
     c28:	f0 e0       	ldi	r31, 0x00	; 0
     c2a:	80 81       	ld	r24, Z
     c2c:	48 2f       	mov	r20, r24
     c2e:	8b 81       	ldd	r24, Y+3	; 0x03
     c30:	28 2f       	mov	r18, r24
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	81 e0       	ldi	r24, 0x01	; 1
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	02 2e       	mov	r0, r18
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <DIO_eunmSetPinDirection+0x10a>
     c3c:	88 0f       	add	r24, r24
     c3e:	99 1f       	adc	r25, r25
     c40:	0a 94       	dec	r0
     c42:	e2 f7       	brpl	.-8      	; 0xc3c <DIO_eunmSetPinDirection+0x106>
     c44:	84 2b       	or	r24, r20
     c46:	8c 93       	st	X, r24
     c48:	7b c0       	rjmp	.+246    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			}
		}
		else if (COPY_u8Direction == DIO_PIN_INPUT)
     c4a:	8c 81       	ldd	r24, Y+4	; 0x04
     c4c:	88 23       	and	r24, r24
     c4e:	09 f0       	breq	.+2      	; 0xc52 <DIO_eunmSetPinDirection+0x11c>
     c50:	74 c0       	rjmp	.+232    	; 0xd3a <DIO_eunmSetPinDirection+0x204>
		{
			switch(COPY_u8PORT)
     c52:	8a 81       	ldd	r24, Y+2	; 0x02
     c54:	28 2f       	mov	r18, r24
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	3e 83       	std	Y+6, r19	; 0x06
     c5a:	2d 83       	std	Y+5, r18	; 0x05
     c5c:	8d 81       	ldd	r24, Y+5	; 0x05
     c5e:	9e 81       	ldd	r25, Y+6	; 0x06
     c60:	81 30       	cpi	r24, 0x01	; 1
     c62:	91 05       	cpc	r25, r1
     c64:	59 f1       	breq	.+86     	; 0xcbc <DIO_eunmSetPinDirection+0x186>
     c66:	2d 81       	ldd	r18, Y+5	; 0x05
     c68:	3e 81       	ldd	r19, Y+6	; 0x06
     c6a:	22 30       	cpi	r18, 0x02	; 2
     c6c:	31 05       	cpc	r19, r1
     c6e:	2c f4       	brge	.+10     	; 0xc7a <DIO_eunmSetPinDirection+0x144>
     c70:	8d 81       	ldd	r24, Y+5	; 0x05
     c72:	9e 81       	ldd	r25, Y+6	; 0x06
     c74:	00 97       	sbiw	r24, 0x00	; 0
     c76:	69 f0       	breq	.+26     	; 0xc92 <DIO_eunmSetPinDirection+0x15c>
     c78:	63 c0       	rjmp	.+198    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
     c7a:	2d 81       	ldd	r18, Y+5	; 0x05
     c7c:	3e 81       	ldd	r19, Y+6	; 0x06
     c7e:	22 30       	cpi	r18, 0x02	; 2
     c80:	31 05       	cpc	r19, r1
     c82:	89 f1       	breq	.+98     	; 0xce6 <DIO_eunmSetPinDirection+0x1b0>
     c84:	8d 81       	ldd	r24, Y+5	; 0x05
     c86:	9e 81       	ldd	r25, Y+6	; 0x06
     c88:	83 30       	cpi	r24, 0x03	; 3
     c8a:	91 05       	cpc	r25, r1
     c8c:	09 f4       	brne	.+2      	; 0xc90 <DIO_eunmSetPinDirection+0x15a>
     c8e:	40 c0       	rjmp	.+128    	; 0xd10 <DIO_eunmSetPinDirection+0x1da>
     c90:	57 c0       	rjmp	.+174    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			{
			case DIO_PORTA: CLR_BIT(DDRA_R,COPY_u8PIN); break;
     c92:	aa e3       	ldi	r26, 0x3A	; 58
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	ea e3       	ldi	r30, 0x3A	; 58
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	48 2f       	mov	r20, r24
     c9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	02 2e       	mov	r0, r18
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <DIO_eunmSetPinDirection+0x17a>
     cac:	88 0f       	add	r24, r24
     cae:	99 1f       	adc	r25, r25
     cb0:	0a 94       	dec	r0
     cb2:	e2 f7       	brpl	.-8      	; 0xcac <DIO_eunmSetPinDirection+0x176>
     cb4:	80 95       	com	r24
     cb6:	84 23       	and	r24, r20
     cb8:	8c 93       	st	X, r24
     cba:	42 c0       	rjmp	.+132    	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTB: CLR_BIT(DDRB_R,COPY_u8PIN); break;
     cbc:	a7 e3       	ldi	r26, 0x37	; 55
     cbe:	b0 e0       	ldi	r27, 0x00	; 0
     cc0:	e7 e3       	ldi	r30, 0x37	; 55
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	80 81       	ld	r24, Z
     cc6:	48 2f       	mov	r20, r24
     cc8:	8b 81       	ldd	r24, Y+3	; 0x03
     cca:	28 2f       	mov	r18, r24
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	02 2e       	mov	r0, r18
     cd4:	02 c0       	rjmp	.+4      	; 0xcda <DIO_eunmSetPinDirection+0x1a4>
     cd6:	88 0f       	add	r24, r24
     cd8:	99 1f       	adc	r25, r25
     cda:	0a 94       	dec	r0
     cdc:	e2 f7       	brpl	.-8      	; 0xcd6 <DIO_eunmSetPinDirection+0x1a0>
     cde:	80 95       	com	r24
     ce0:	84 23       	and	r24, r20
     ce2:	8c 93       	st	X, r24
     ce4:	2d c0       	rjmp	.+90     	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTC: CLR_BIT(DDRC_R,COPY_u8PIN); break;
     ce6:	a4 e3       	ldi	r26, 0x34	; 52
     ce8:	b0 e0       	ldi	r27, 0x00	; 0
     cea:	e4 e3       	ldi	r30, 0x34	; 52
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	80 81       	ld	r24, Z
     cf0:	48 2f       	mov	r20, r24
     cf2:	8b 81       	ldd	r24, Y+3	; 0x03
     cf4:	28 2f       	mov	r18, r24
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	02 2e       	mov	r0, r18
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <DIO_eunmSetPinDirection+0x1ce>
     d00:	88 0f       	add	r24, r24
     d02:	99 1f       	adc	r25, r25
     d04:	0a 94       	dec	r0
     d06:	e2 f7       	brpl	.-8      	; 0xd00 <DIO_eunmSetPinDirection+0x1ca>
     d08:	80 95       	com	r24
     d0a:	84 23       	and	r24, r20
     d0c:	8c 93       	st	X, r24
     d0e:	18 c0       	rjmp	.+48     	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			case DIO_PORTD: CLR_BIT(DDRD_R,COPY_u8PIN); break;
     d10:	a1 e3       	ldi	r26, 0x31	; 49
     d12:	b0 e0       	ldi	r27, 0x00	; 0
     d14:	e1 e3       	ldi	r30, 0x31	; 49
     d16:	f0 e0       	ldi	r31, 0x00	; 0
     d18:	80 81       	ld	r24, Z
     d1a:	48 2f       	mov	r20, r24
     d1c:	8b 81       	ldd	r24, Y+3	; 0x03
     d1e:	28 2f       	mov	r18, r24
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	02 2e       	mov	r0, r18
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <DIO_eunmSetPinDirection+0x1f8>
     d2a:	88 0f       	add	r24, r24
     d2c:	99 1f       	adc	r25, r25
     d2e:	0a 94       	dec	r0
     d30:	e2 f7       	brpl	.-8      	; 0xd2a <DIO_eunmSetPinDirection+0x1f4>
     d32:	80 95       	com	r24
     d34:	84 23       	and	r24, r20
     d36:	8c 93       	st	X, r24
     d38:	03 c0       	rjmp	.+6      	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
			}
		}
		else
		{
			LOC_enumStatus = DIO_NOK;
     d3a:	19 82       	std	Y+1, r1	; 0x01
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <DIO_eunmSetPinDirection+0x20a>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
     d3e:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
     d40:	89 81       	ldd	r24, Y+1	; 0x01
}
     d42:	28 96       	adiw	r28, 0x08	; 8
     d44:	0f b6       	in	r0, 0x3f	; 63
     d46:	f8 94       	cli
     d48:	de bf       	out	0x3e, r29	; 62
     d4a:	0f be       	out	0x3f, r0	; 63
     d4c:	cd bf       	out	0x3d, r28	; 61
     d4e:	cf 91       	pop	r28
     d50:	df 91       	pop	r29
     d52:	08 95       	ret

00000d54 <DIO_eunmSetPinValue>:
DIO_ErrorStatus DIO_eunmSetPinValue         (u8 COPY_u8PORT ,u8 COPY_u8PIN ,u8 COPY_u8Value     )
{
     d54:	df 93       	push	r29
     d56:	cf 93       	push	r28
     d58:	cd b7       	in	r28, 0x3d	; 61
     d5a:	de b7       	in	r29, 0x3e	; 62
     d5c:	28 97       	sbiw	r28, 0x08	; 8
     d5e:	0f b6       	in	r0, 0x3f	; 63
     d60:	f8 94       	cli
     d62:	de bf       	out	0x3e, r29	; 62
     d64:	0f be       	out	0x3f, r0	; 63
     d66:	cd bf       	out	0x3d, r28	; 61
     d68:	8a 83       	std	Y+2, r24	; 0x02
     d6a:	6b 83       	std	Y+3, r22	; 0x03
     d6c:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD)&&(COPY_u8PIN <= DIO_PIN7))
     d72:	8a 81       	ldd	r24, Y+2	; 0x02
     d74:	84 30       	cpi	r24, 0x04	; 4
     d76:	08 f0       	brcs	.+2      	; 0xd7a <DIO_eunmSetPinValue+0x26>
     d78:	f1 c0       	rjmp	.+482    	; 0xf5c <DIO_eunmSetPinValue+0x208>
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	88 30       	cpi	r24, 0x08	; 8
     d7e:	08 f0       	brcs	.+2      	; 0xd82 <DIO_eunmSetPinValue+0x2e>
     d80:	ed c0       	rjmp	.+474    	; 0xf5c <DIO_eunmSetPinValue+0x208>
	{
		if (COPY_u8Value == DIO_PIN_HIGH)
     d82:	8c 81       	ldd	r24, Y+4	; 0x04
     d84:	81 30       	cpi	r24, 0x01	; 1
     d86:	09 f0       	breq	.+2      	; 0xd8a <DIO_eunmSetPinValue+0x36>
     d88:	6f c0       	rjmp	.+222    	; 0xe68 <DIO_eunmSetPinValue+0x114>
		{
			switch(COPY_u8PORT)
     d8a:	8a 81       	ldd	r24, Y+2	; 0x02
     d8c:	28 2f       	mov	r18, r24
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	38 87       	std	Y+8, r19	; 0x08
     d92:	2f 83       	std	Y+7, r18	; 0x07
     d94:	8f 81       	ldd	r24, Y+7	; 0x07
     d96:	98 85       	ldd	r25, Y+8	; 0x08
     d98:	81 30       	cpi	r24, 0x01	; 1
     d9a:	91 05       	cpc	r25, r1
     d9c:	49 f1       	breq	.+82     	; 0xdf0 <DIO_eunmSetPinValue+0x9c>
     d9e:	2f 81       	ldd	r18, Y+7	; 0x07
     da0:	38 85       	ldd	r19, Y+8	; 0x08
     da2:	22 30       	cpi	r18, 0x02	; 2
     da4:	31 05       	cpc	r19, r1
     da6:	2c f4       	brge	.+10     	; 0xdb2 <DIO_eunmSetPinValue+0x5e>
     da8:	8f 81       	ldd	r24, Y+7	; 0x07
     daa:	98 85       	ldd	r25, Y+8	; 0x08
     dac:	00 97       	sbiw	r24, 0x00	; 0
     dae:	61 f0       	breq	.+24     	; 0xdc8 <DIO_eunmSetPinValue+0x74>
     db0:	d6 c0       	rjmp	.+428    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
     db2:	2f 81       	ldd	r18, Y+7	; 0x07
     db4:	38 85       	ldd	r19, Y+8	; 0x08
     db6:	22 30       	cpi	r18, 0x02	; 2
     db8:	31 05       	cpc	r19, r1
     dba:	71 f1       	breq	.+92     	; 0xe18 <DIO_eunmSetPinValue+0xc4>
     dbc:	8f 81       	ldd	r24, Y+7	; 0x07
     dbe:	98 85       	ldd	r25, Y+8	; 0x08
     dc0:	83 30       	cpi	r24, 0x03	; 3
     dc2:	91 05       	cpc	r25, r1
     dc4:	e9 f1       	breq	.+122    	; 0xe40 <DIO_eunmSetPinValue+0xec>
     dc6:	cb c0       	rjmp	.+406    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			{
			case DIO_PORTA: SET_BIT(PORTA_R,COPY_u8PIN);break;
     dc8:	ab e3       	ldi	r26, 0x3B	; 59
     dca:	b0 e0       	ldi	r27, 0x00	; 0
     dcc:	eb e3       	ldi	r30, 0x3B	; 59
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 81       	ld	r24, Z
     dd2:	48 2f       	mov	r20, r24
     dd4:	8b 81       	ldd	r24, Y+3	; 0x03
     dd6:	28 2f       	mov	r18, r24
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	81 e0       	ldi	r24, 0x01	; 1
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	02 2e       	mov	r0, r18
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <DIO_eunmSetPinValue+0x92>
     de2:	88 0f       	add	r24, r24
     de4:	99 1f       	adc	r25, r25
     de6:	0a 94       	dec	r0
     de8:	e2 f7       	brpl	.-8      	; 0xde2 <DIO_eunmSetPinValue+0x8e>
     dea:	84 2b       	or	r24, r20
     dec:	8c 93       	st	X, r24
     dee:	b7 c0       	rjmp	.+366    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTB: SET_BIT(PORTB_R,COPY_u8PIN);break;
     df0:	a8 e3       	ldi	r26, 0x38	; 56
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e8 e3       	ldi	r30, 0x38	; 56
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	48 2f       	mov	r20, r24
     dfc:	8b 81       	ldd	r24, Y+3	; 0x03
     dfe:	28 2f       	mov	r18, r24
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	02 2e       	mov	r0, r18
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <DIO_eunmSetPinValue+0xba>
     e0a:	88 0f       	add	r24, r24
     e0c:	99 1f       	adc	r25, r25
     e0e:	0a 94       	dec	r0
     e10:	e2 f7       	brpl	.-8      	; 0xe0a <DIO_eunmSetPinValue+0xb6>
     e12:	84 2b       	or	r24, r20
     e14:	8c 93       	st	X, r24
     e16:	a3 c0       	rjmp	.+326    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTC: SET_BIT(PORTC_R,COPY_u8PIN);break;
     e18:	a5 e3       	ldi	r26, 0x35	; 53
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e5 e3       	ldi	r30, 0x35	; 53
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	48 2f       	mov	r20, r24
     e24:	8b 81       	ldd	r24, Y+3	; 0x03
     e26:	28 2f       	mov	r18, r24
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	02 2e       	mov	r0, r18
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <DIO_eunmSetPinValue+0xe2>
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	0a 94       	dec	r0
     e38:	e2 f7       	brpl	.-8      	; 0xe32 <DIO_eunmSetPinValue+0xde>
     e3a:	84 2b       	or	r24, r20
     e3c:	8c 93       	st	X, r24
     e3e:	8f c0       	rjmp	.+286    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTD: SET_BIT(PORTD_R,COPY_u8PIN);break;
     e40:	a2 e3       	ldi	r26, 0x32	; 50
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	e2 e3       	ldi	r30, 0x32	; 50
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	48 2f       	mov	r20, r24
     e4c:	8b 81       	ldd	r24, Y+3	; 0x03
     e4e:	28 2f       	mov	r18, r24
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	02 2e       	mov	r0, r18
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <DIO_eunmSetPinValue+0x10a>
     e5a:	88 0f       	add	r24, r24
     e5c:	99 1f       	adc	r25, r25
     e5e:	0a 94       	dec	r0
     e60:	e2 f7       	brpl	.-8      	; 0xe5a <DIO_eunmSetPinValue+0x106>
     e62:	84 2b       	or	r24, r20
     e64:	8c 93       	st	X, r24
     e66:	7b c0       	rjmp	.+246    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			}
		}
		else if (COPY_u8Value == DIO_PIN_LOW)
     e68:	8c 81       	ldd	r24, Y+4	; 0x04
     e6a:	88 23       	and	r24, r24
     e6c:	09 f0       	breq	.+2      	; 0xe70 <DIO_eunmSetPinValue+0x11c>
     e6e:	74 c0       	rjmp	.+232    	; 0xf58 <DIO_eunmSetPinValue+0x204>
		{
			switch(COPY_u8PORT)
     e70:	8a 81       	ldd	r24, Y+2	; 0x02
     e72:	28 2f       	mov	r18, r24
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	3e 83       	std	Y+6, r19	; 0x06
     e78:	2d 83       	std	Y+5, r18	; 0x05
     e7a:	8d 81       	ldd	r24, Y+5	; 0x05
     e7c:	9e 81       	ldd	r25, Y+6	; 0x06
     e7e:	81 30       	cpi	r24, 0x01	; 1
     e80:	91 05       	cpc	r25, r1
     e82:	59 f1       	breq	.+86     	; 0xeda <DIO_eunmSetPinValue+0x186>
     e84:	2d 81       	ldd	r18, Y+5	; 0x05
     e86:	3e 81       	ldd	r19, Y+6	; 0x06
     e88:	22 30       	cpi	r18, 0x02	; 2
     e8a:	31 05       	cpc	r19, r1
     e8c:	2c f4       	brge	.+10     	; 0xe98 <DIO_eunmSetPinValue+0x144>
     e8e:	8d 81       	ldd	r24, Y+5	; 0x05
     e90:	9e 81       	ldd	r25, Y+6	; 0x06
     e92:	00 97       	sbiw	r24, 0x00	; 0
     e94:	69 f0       	breq	.+26     	; 0xeb0 <DIO_eunmSetPinValue+0x15c>
     e96:	63 c0       	rjmp	.+198    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
     e98:	2d 81       	ldd	r18, Y+5	; 0x05
     e9a:	3e 81       	ldd	r19, Y+6	; 0x06
     e9c:	22 30       	cpi	r18, 0x02	; 2
     e9e:	31 05       	cpc	r19, r1
     ea0:	89 f1       	breq	.+98     	; 0xf04 <DIO_eunmSetPinValue+0x1b0>
     ea2:	8d 81       	ldd	r24, Y+5	; 0x05
     ea4:	9e 81       	ldd	r25, Y+6	; 0x06
     ea6:	83 30       	cpi	r24, 0x03	; 3
     ea8:	91 05       	cpc	r25, r1
     eaa:	09 f4       	brne	.+2      	; 0xeae <DIO_eunmSetPinValue+0x15a>
     eac:	40 c0       	rjmp	.+128    	; 0xf2e <DIO_eunmSetPinValue+0x1da>
     eae:	57 c0       	rjmp	.+174    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			{
			case DIO_PORTA: CLR_BIT(PORTA_R,COPY_u8PIN);break;
     eb0:	ab e3       	ldi	r26, 0x3B	; 59
     eb2:	b0 e0       	ldi	r27, 0x00	; 0
     eb4:	eb e3       	ldi	r30, 0x3B	; 59
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	80 81       	ld	r24, Z
     eba:	48 2f       	mov	r20, r24
     ebc:	8b 81       	ldd	r24, Y+3	; 0x03
     ebe:	28 2f       	mov	r18, r24
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	02 2e       	mov	r0, r18
     ec8:	02 c0       	rjmp	.+4      	; 0xece <DIO_eunmSetPinValue+0x17a>
     eca:	88 0f       	add	r24, r24
     ecc:	99 1f       	adc	r25, r25
     ece:	0a 94       	dec	r0
     ed0:	e2 f7       	brpl	.-8      	; 0xeca <DIO_eunmSetPinValue+0x176>
     ed2:	80 95       	com	r24
     ed4:	84 23       	and	r24, r20
     ed6:	8c 93       	st	X, r24
     ed8:	42 c0       	rjmp	.+132    	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTB: CLR_BIT(PORTB_R,COPY_u8PIN);break;
     eda:	a8 e3       	ldi	r26, 0x38	; 56
     edc:	b0 e0       	ldi	r27, 0x00	; 0
     ede:	e8 e3       	ldi	r30, 0x38	; 56
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	80 81       	ld	r24, Z
     ee4:	48 2f       	mov	r20, r24
     ee6:	8b 81       	ldd	r24, Y+3	; 0x03
     ee8:	28 2f       	mov	r18, r24
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	02 2e       	mov	r0, r18
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <DIO_eunmSetPinValue+0x1a4>
     ef4:	88 0f       	add	r24, r24
     ef6:	99 1f       	adc	r25, r25
     ef8:	0a 94       	dec	r0
     efa:	e2 f7       	brpl	.-8      	; 0xef4 <DIO_eunmSetPinValue+0x1a0>
     efc:	80 95       	com	r24
     efe:	84 23       	and	r24, r20
     f00:	8c 93       	st	X, r24
     f02:	2d c0       	rjmp	.+90     	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTC: CLR_BIT(PORTC_R,COPY_u8PIN);break;
     f04:	a5 e3       	ldi	r26, 0x35	; 53
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	e5 e3       	ldi	r30, 0x35	; 53
     f0a:	f0 e0       	ldi	r31, 0x00	; 0
     f0c:	80 81       	ld	r24, Z
     f0e:	48 2f       	mov	r20, r24
     f10:	8b 81       	ldd	r24, Y+3	; 0x03
     f12:	28 2f       	mov	r18, r24
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	02 2e       	mov	r0, r18
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <DIO_eunmSetPinValue+0x1ce>
     f1e:	88 0f       	add	r24, r24
     f20:	99 1f       	adc	r25, r25
     f22:	0a 94       	dec	r0
     f24:	e2 f7       	brpl	.-8      	; 0xf1e <DIO_eunmSetPinValue+0x1ca>
     f26:	80 95       	com	r24
     f28:	84 23       	and	r24, r20
     f2a:	8c 93       	st	X, r24
     f2c:	18 c0       	rjmp	.+48     	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			case DIO_PORTD: CLR_BIT(PORTD_R,COPY_u8PIN);break;
     f2e:	a2 e3       	ldi	r26, 0x32	; 50
     f30:	b0 e0       	ldi	r27, 0x00	; 0
     f32:	e2 e3       	ldi	r30, 0x32	; 50
     f34:	f0 e0       	ldi	r31, 0x00	; 0
     f36:	80 81       	ld	r24, Z
     f38:	48 2f       	mov	r20, r24
     f3a:	8b 81       	ldd	r24, Y+3	; 0x03
     f3c:	28 2f       	mov	r18, r24
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	02 2e       	mov	r0, r18
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <DIO_eunmSetPinValue+0x1f8>
     f48:	88 0f       	add	r24, r24
     f4a:	99 1f       	adc	r25, r25
     f4c:	0a 94       	dec	r0
     f4e:	e2 f7       	brpl	.-8      	; 0xf48 <DIO_eunmSetPinValue+0x1f4>
     f50:	80 95       	com	r24
     f52:	84 23       	and	r24, r20
     f54:	8c 93       	st	X, r24
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <DIO_eunmSetPinValue+0x20a>
			}
		}
		else
		{
			LOC_enumStatus = DIO_NOK ;
     f58:	19 82       	std	Y+1, r1	; 0x01
     f5a:	01 c0       	rjmp	.+2      	; 0xf5e <DIO_eunmSetPinValue+0x20a>
		}
	}

	else
	{
		LOC_enumStatus = DIO_NOK ;
     f5c:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumStatus ;
     f5e:	89 81       	ldd	r24, Y+1	; 0x01
}
     f60:	28 96       	adiw	r28, 0x08	; 8
     f62:	0f b6       	in	r0, 0x3f	; 63
     f64:	f8 94       	cli
     f66:	de bf       	out	0x3e, r29	; 62
     f68:	0f be       	out	0x3f, r0	; 63
     f6a:	cd bf       	out	0x3d, r28	; 61
     f6c:	cf 91       	pop	r28
     f6e:	df 91       	pop	r29
     f70:	08 95       	ret

00000f72 <DIO_eunmGetPin>:
DIO_ErrorStatus DIO_eunmGetPin              (u8 COPY_u8PORT ,u8 COPY_u8PIN  ,u8 *COPY_PtrData   )
{
     f72:	df 93       	push	r29
     f74:	cf 93       	push	r28
     f76:	cd b7       	in	r28, 0x3d	; 61
     f78:	de b7       	in	r29, 0x3e	; 62
     f7a:	27 97       	sbiw	r28, 0x07	; 7
     f7c:	0f b6       	in	r0, 0x3f	; 63
     f7e:	f8 94       	cli
     f80:	de bf       	out	0x3e, r29	; 62
     f82:	0f be       	out	0x3f, r0	; 63
     f84:	cd bf       	out	0x3d, r28	; 61
     f86:	8a 83       	std	Y+2, r24	; 0x02
     f88:	6b 83       	std	Y+3, r22	; 0x03
     f8a:	5d 83       	std	Y+5, r21	; 0x05
     f8c:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD)&&(COPY_u8PIN <= DIO_PIN7))
     f92:	8a 81       	ldd	r24, Y+2	; 0x02
     f94:	84 30       	cpi	r24, 0x04	; 4
     f96:	08 f0       	brcs	.+2      	; 0xf9a <DIO_eunmGetPin+0x28>
     f98:	a6 c0       	rjmp	.+332    	; 0x10e6 <DIO_eunmGetPin+0x174>
     f9a:	8b 81       	ldd	r24, Y+3	; 0x03
     f9c:	88 30       	cpi	r24, 0x08	; 8
     f9e:	08 f0       	brcs	.+2      	; 0xfa2 <DIO_eunmGetPin+0x30>
     fa0:	a2 c0       	rjmp	.+324    	; 0x10e6 <DIO_eunmGetPin+0x174>
	{
		switch (COPY_u8PORT)
     fa2:	8a 81       	ldd	r24, Y+2	; 0x02
     fa4:	28 2f       	mov	r18, r24
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	3f 83       	std	Y+7, r19	; 0x07
     faa:	2e 83       	std	Y+6, r18	; 0x06
     fac:	4e 81       	ldd	r20, Y+6	; 0x06
     fae:	5f 81       	ldd	r21, Y+7	; 0x07
     fb0:	41 30       	cpi	r20, 0x01	; 1
     fb2:	51 05       	cpc	r21, r1
     fb4:	c1 f1       	breq	.+112    	; 0x1026 <DIO_eunmGetPin+0xb4>
     fb6:	8e 81       	ldd	r24, Y+6	; 0x06
     fb8:	9f 81       	ldd	r25, Y+7	; 0x07
     fba:	82 30       	cpi	r24, 0x02	; 2
     fbc:	91 05       	cpc	r25, r1
     fbe:	34 f4       	brge	.+12     	; 0xfcc <DIO_eunmGetPin+0x5a>
     fc0:	2e 81       	ldd	r18, Y+6	; 0x06
     fc2:	3f 81       	ldd	r19, Y+7	; 0x07
     fc4:	21 15       	cp	r18, r1
     fc6:	31 05       	cpc	r19, r1
     fc8:	71 f0       	breq	.+28     	; 0xfe6 <DIO_eunmGetPin+0x74>
     fca:	8e c0       	rjmp	.+284    	; 0x10e8 <DIO_eunmGetPin+0x176>
     fcc:	4e 81       	ldd	r20, Y+6	; 0x06
     fce:	5f 81       	ldd	r21, Y+7	; 0x07
     fd0:	42 30       	cpi	r20, 0x02	; 2
     fd2:	51 05       	cpc	r21, r1
     fd4:	09 f4       	brne	.+2      	; 0xfd8 <DIO_eunmGetPin+0x66>
     fd6:	47 c0       	rjmp	.+142    	; 0x1066 <DIO_eunmGetPin+0xf4>
     fd8:	8e 81       	ldd	r24, Y+6	; 0x06
     fda:	9f 81       	ldd	r25, Y+7	; 0x07
     fdc:	83 30       	cpi	r24, 0x03	; 3
     fde:	91 05       	cpc	r25, r1
     fe0:	09 f4       	brne	.+2      	; 0xfe4 <DIO_eunmGetPin+0x72>
     fe2:	61 c0       	rjmp	.+194    	; 0x10a6 <DIO_eunmGetPin+0x134>
     fe4:	81 c0       	rjmp	.+258    	; 0x10e8 <DIO_eunmGetPin+0x176>
		{
		case DIO_PORTA: *COPY_PtrData = RED_BIT(PINA_R,COPY_u8PIN);break;
     fe6:	e9 e3       	ldi	r30, 0x39	; 57
     fe8:	f0 e0       	ldi	r31, 0x00	; 0
     fea:	80 81       	ld	r24, Z
     fec:	48 2f       	mov	r20, r24
     fee:	50 e0       	ldi	r21, 0x00	; 0
     ff0:	8b 81       	ldd	r24, Y+3	; 0x03
     ff2:	28 2f       	mov	r18, r24
     ff4:	30 e0       	ldi	r19, 0x00	; 0
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	90 e0       	ldi	r25, 0x00	; 0
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <DIO_eunmGetPin+0x8e>
     ffc:	88 0f       	add	r24, r24
     ffe:	99 1f       	adc	r25, r25
    1000:	2a 95       	dec	r18
    1002:	e2 f7       	brpl	.-8      	; 0xffc <DIO_eunmGetPin+0x8a>
    1004:	9a 01       	movw	r18, r20
    1006:	28 23       	and	r18, r24
    1008:	39 23       	and	r19, r25
    100a:	8b 81       	ldd	r24, Y+3	; 0x03
    100c:	88 2f       	mov	r24, r24
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	a9 01       	movw	r20, r18
    1012:	02 c0       	rjmp	.+4      	; 0x1018 <DIO_eunmGetPin+0xa6>
    1014:	55 95       	asr	r21
    1016:	47 95       	ror	r20
    1018:	8a 95       	dec	r24
    101a:	e2 f7       	brpl	.-8      	; 0x1014 <DIO_eunmGetPin+0xa2>
    101c:	ca 01       	movw	r24, r20
    101e:	ec 81       	ldd	r30, Y+4	; 0x04
    1020:	fd 81       	ldd	r31, Y+5	; 0x05
    1022:	80 83       	st	Z, r24
    1024:	61 c0       	rjmp	.+194    	; 0x10e8 <DIO_eunmGetPin+0x176>
		case DIO_PORTB: *COPY_PtrData = RED_BIT(PINB_R,COPY_u8PIN);break;
    1026:	e6 e3       	ldi	r30, 0x36	; 54
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	80 81       	ld	r24, Z
    102c:	48 2f       	mov	r20, r24
    102e:	50 e0       	ldi	r21, 0x00	; 0
    1030:	8b 81       	ldd	r24, Y+3	; 0x03
    1032:	28 2f       	mov	r18, r24
    1034:	30 e0       	ldi	r19, 0x00	; 0
    1036:	81 e0       	ldi	r24, 0x01	; 1
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	02 c0       	rjmp	.+4      	; 0x1040 <DIO_eunmGetPin+0xce>
    103c:	88 0f       	add	r24, r24
    103e:	99 1f       	adc	r25, r25
    1040:	2a 95       	dec	r18
    1042:	e2 f7       	brpl	.-8      	; 0x103c <DIO_eunmGetPin+0xca>
    1044:	9a 01       	movw	r18, r20
    1046:	28 23       	and	r18, r24
    1048:	39 23       	and	r19, r25
    104a:	8b 81       	ldd	r24, Y+3	; 0x03
    104c:	88 2f       	mov	r24, r24
    104e:	90 e0       	ldi	r25, 0x00	; 0
    1050:	a9 01       	movw	r20, r18
    1052:	02 c0       	rjmp	.+4      	; 0x1058 <DIO_eunmGetPin+0xe6>
    1054:	55 95       	asr	r21
    1056:	47 95       	ror	r20
    1058:	8a 95       	dec	r24
    105a:	e2 f7       	brpl	.-8      	; 0x1054 <DIO_eunmGetPin+0xe2>
    105c:	ca 01       	movw	r24, r20
    105e:	ec 81       	ldd	r30, Y+4	; 0x04
    1060:	fd 81       	ldd	r31, Y+5	; 0x05
    1062:	80 83       	st	Z, r24
    1064:	41 c0       	rjmp	.+130    	; 0x10e8 <DIO_eunmGetPin+0x176>
		case DIO_PORTC: *COPY_PtrData = RED_BIT(PINC_R,COPY_u8PIN);break;
    1066:	e3 e3       	ldi	r30, 0x33	; 51
    1068:	f0 e0       	ldi	r31, 0x00	; 0
    106a:	80 81       	ld	r24, Z
    106c:	48 2f       	mov	r20, r24
    106e:	50 e0       	ldi	r21, 0x00	; 0
    1070:	8b 81       	ldd	r24, Y+3	; 0x03
    1072:	28 2f       	mov	r18, r24
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	81 e0       	ldi	r24, 0x01	; 1
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <DIO_eunmGetPin+0x10e>
    107c:	88 0f       	add	r24, r24
    107e:	99 1f       	adc	r25, r25
    1080:	2a 95       	dec	r18
    1082:	e2 f7       	brpl	.-8      	; 0x107c <DIO_eunmGetPin+0x10a>
    1084:	9a 01       	movw	r18, r20
    1086:	28 23       	and	r18, r24
    1088:	39 23       	and	r19, r25
    108a:	8b 81       	ldd	r24, Y+3	; 0x03
    108c:	88 2f       	mov	r24, r24
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	a9 01       	movw	r20, r18
    1092:	02 c0       	rjmp	.+4      	; 0x1098 <DIO_eunmGetPin+0x126>
    1094:	55 95       	asr	r21
    1096:	47 95       	ror	r20
    1098:	8a 95       	dec	r24
    109a:	e2 f7       	brpl	.-8      	; 0x1094 <DIO_eunmGetPin+0x122>
    109c:	ca 01       	movw	r24, r20
    109e:	ec 81       	ldd	r30, Y+4	; 0x04
    10a0:	fd 81       	ldd	r31, Y+5	; 0x05
    10a2:	80 83       	st	Z, r24
    10a4:	21 c0       	rjmp	.+66     	; 0x10e8 <DIO_eunmGetPin+0x176>
		case DIO_PORTD: *COPY_PtrData = RED_BIT(PIND_R,COPY_u8PIN);break;
    10a6:	e0 e3       	ldi	r30, 0x30	; 48
    10a8:	f0 e0       	ldi	r31, 0x00	; 0
    10aa:	80 81       	ld	r24, Z
    10ac:	48 2f       	mov	r20, r24
    10ae:	50 e0       	ldi	r21, 0x00	; 0
    10b0:	8b 81       	ldd	r24, Y+3	; 0x03
    10b2:	28 2f       	mov	r18, r24
    10b4:	30 e0       	ldi	r19, 0x00	; 0
    10b6:	81 e0       	ldi	r24, 0x01	; 1
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	02 c0       	rjmp	.+4      	; 0x10c0 <DIO_eunmGetPin+0x14e>
    10bc:	88 0f       	add	r24, r24
    10be:	99 1f       	adc	r25, r25
    10c0:	2a 95       	dec	r18
    10c2:	e2 f7       	brpl	.-8      	; 0x10bc <DIO_eunmGetPin+0x14a>
    10c4:	9a 01       	movw	r18, r20
    10c6:	28 23       	and	r18, r24
    10c8:	39 23       	and	r19, r25
    10ca:	8b 81       	ldd	r24, Y+3	; 0x03
    10cc:	88 2f       	mov	r24, r24
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	a9 01       	movw	r20, r18
    10d2:	02 c0       	rjmp	.+4      	; 0x10d8 <DIO_eunmGetPin+0x166>
    10d4:	55 95       	asr	r21
    10d6:	47 95       	ror	r20
    10d8:	8a 95       	dec	r24
    10da:	e2 f7       	brpl	.-8      	; 0x10d4 <DIO_eunmGetPin+0x162>
    10dc:	ca 01       	movw	r24, r20
    10de:	ec 81       	ldd	r30, Y+4	; 0x04
    10e0:	fd 81       	ldd	r31, Y+5	; 0x05
    10e2:	80 83       	st	Z, r24
    10e4:	01 c0       	rjmp	.+2      	; 0x10e8 <DIO_eunmGetPin+0x176>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    10e6:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    10e8:	89 81       	ldd	r24, Y+1	; 0x01
}
    10ea:	27 96       	adiw	r28, 0x07	; 7
    10ec:	0f b6       	in	r0, 0x3f	; 63
    10ee:	f8 94       	cli
    10f0:	de bf       	out	0x3e, r29	; 62
    10f2:	0f be       	out	0x3f, r0	; 63
    10f4:	cd bf       	out	0x3d, r28	; 61
    10f6:	cf 91       	pop	r28
    10f8:	df 91       	pop	r29
    10fa:	08 95       	ret

000010fc <DIO_eunmTogglePin>:
DIO_ErrorStatus DIO_eunmTogglePin           (u8 COPY_u8PORT ,u8 COPY_u8PIN                      )
{
    10fc:	df 93       	push	r29
    10fe:	cf 93       	push	r28
    1100:	00 d0       	rcall	.+0      	; 0x1102 <DIO_eunmTogglePin+0x6>
    1102:	00 d0       	rcall	.+0      	; 0x1104 <DIO_eunmTogglePin+0x8>
    1104:	0f 92       	push	r0
    1106:	cd b7       	in	r28, 0x3d	; 61
    1108:	de b7       	in	r29, 0x3e	; 62
    110a:	8a 83       	std	Y+2, r24	; 0x02
    110c:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD)&&(COPY_u8PIN <= DIO_PIN7))
    1112:	8a 81       	ldd	r24, Y+2	; 0x02
    1114:	84 30       	cpi	r24, 0x04	; 4
    1116:	08 f0       	brcs	.+2      	; 0x111a <DIO_eunmTogglePin+0x1e>
    1118:	73 c0       	rjmp	.+230    	; 0x1200 <DIO_eunmTogglePin+0x104>
    111a:	8b 81       	ldd	r24, Y+3	; 0x03
    111c:	88 30       	cpi	r24, 0x08	; 8
    111e:	08 f0       	brcs	.+2      	; 0x1122 <DIO_eunmTogglePin+0x26>
    1120:	6f c0       	rjmp	.+222    	; 0x1200 <DIO_eunmTogglePin+0x104>
	{
		switch (COPY_u8PORT)
    1122:	8a 81       	ldd	r24, Y+2	; 0x02
    1124:	28 2f       	mov	r18, r24
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	3d 83       	std	Y+5, r19	; 0x05
    112a:	2c 83       	std	Y+4, r18	; 0x04
    112c:	8c 81       	ldd	r24, Y+4	; 0x04
    112e:	9d 81       	ldd	r25, Y+5	; 0x05
    1130:	81 30       	cpi	r24, 0x01	; 1
    1132:	91 05       	cpc	r25, r1
    1134:	49 f1       	breq	.+82     	; 0x1188 <DIO_eunmTogglePin+0x8c>
    1136:	2c 81       	ldd	r18, Y+4	; 0x04
    1138:	3d 81       	ldd	r19, Y+5	; 0x05
    113a:	22 30       	cpi	r18, 0x02	; 2
    113c:	31 05       	cpc	r19, r1
    113e:	2c f4       	brge	.+10     	; 0x114a <DIO_eunmTogglePin+0x4e>
    1140:	8c 81       	ldd	r24, Y+4	; 0x04
    1142:	9d 81       	ldd	r25, Y+5	; 0x05
    1144:	00 97       	sbiw	r24, 0x00	; 0
    1146:	61 f0       	breq	.+24     	; 0x1160 <DIO_eunmTogglePin+0x64>
    1148:	5c c0       	rjmp	.+184    	; 0x1202 <DIO_eunmTogglePin+0x106>
    114a:	2c 81       	ldd	r18, Y+4	; 0x04
    114c:	3d 81       	ldd	r19, Y+5	; 0x05
    114e:	22 30       	cpi	r18, 0x02	; 2
    1150:	31 05       	cpc	r19, r1
    1152:	71 f1       	breq	.+92     	; 0x11b0 <DIO_eunmTogglePin+0xb4>
    1154:	8c 81       	ldd	r24, Y+4	; 0x04
    1156:	9d 81       	ldd	r25, Y+5	; 0x05
    1158:	83 30       	cpi	r24, 0x03	; 3
    115a:	91 05       	cpc	r25, r1
    115c:	e9 f1       	breq	.+122    	; 0x11d8 <DIO_eunmTogglePin+0xdc>
    115e:	51 c0       	rjmp	.+162    	; 0x1202 <DIO_eunmTogglePin+0x106>
		{
		case DIO_PORTA: TOG_BIT(PORTA_R,COPY_u8PIN);break;
    1160:	ab e3       	ldi	r26, 0x3B	; 59
    1162:	b0 e0       	ldi	r27, 0x00	; 0
    1164:	eb e3       	ldi	r30, 0x3B	; 59
    1166:	f0 e0       	ldi	r31, 0x00	; 0
    1168:	80 81       	ld	r24, Z
    116a:	48 2f       	mov	r20, r24
    116c:	8b 81       	ldd	r24, Y+3	; 0x03
    116e:	28 2f       	mov	r18, r24
    1170:	30 e0       	ldi	r19, 0x00	; 0
    1172:	81 e0       	ldi	r24, 0x01	; 1
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	02 2e       	mov	r0, r18
    1178:	02 c0       	rjmp	.+4      	; 0x117e <DIO_eunmTogglePin+0x82>
    117a:	88 0f       	add	r24, r24
    117c:	99 1f       	adc	r25, r25
    117e:	0a 94       	dec	r0
    1180:	e2 f7       	brpl	.-8      	; 0x117a <DIO_eunmTogglePin+0x7e>
    1182:	84 27       	eor	r24, r20
    1184:	8c 93       	st	X, r24
    1186:	3d c0       	rjmp	.+122    	; 0x1202 <DIO_eunmTogglePin+0x106>
		case DIO_PORTB: TOG_BIT(PORTB_R,COPY_u8PIN);break;
    1188:	a8 e3       	ldi	r26, 0x38	; 56
    118a:	b0 e0       	ldi	r27, 0x00	; 0
    118c:	e8 e3       	ldi	r30, 0x38	; 56
    118e:	f0 e0       	ldi	r31, 0x00	; 0
    1190:	80 81       	ld	r24, Z
    1192:	48 2f       	mov	r20, r24
    1194:	8b 81       	ldd	r24, Y+3	; 0x03
    1196:	28 2f       	mov	r18, r24
    1198:	30 e0       	ldi	r19, 0x00	; 0
    119a:	81 e0       	ldi	r24, 0x01	; 1
    119c:	90 e0       	ldi	r25, 0x00	; 0
    119e:	02 2e       	mov	r0, r18
    11a0:	02 c0       	rjmp	.+4      	; 0x11a6 <DIO_eunmTogglePin+0xaa>
    11a2:	88 0f       	add	r24, r24
    11a4:	99 1f       	adc	r25, r25
    11a6:	0a 94       	dec	r0
    11a8:	e2 f7       	brpl	.-8      	; 0x11a2 <DIO_eunmTogglePin+0xa6>
    11aa:	84 27       	eor	r24, r20
    11ac:	8c 93       	st	X, r24
    11ae:	29 c0       	rjmp	.+82     	; 0x1202 <DIO_eunmTogglePin+0x106>
		case DIO_PORTC: TOG_BIT(PORTC_R,COPY_u8PIN);break;
    11b0:	a5 e3       	ldi	r26, 0x35	; 53
    11b2:	b0 e0       	ldi	r27, 0x00	; 0
    11b4:	e5 e3       	ldi	r30, 0x35	; 53
    11b6:	f0 e0       	ldi	r31, 0x00	; 0
    11b8:	80 81       	ld	r24, Z
    11ba:	48 2f       	mov	r20, r24
    11bc:	8b 81       	ldd	r24, Y+3	; 0x03
    11be:	28 2f       	mov	r18, r24
    11c0:	30 e0       	ldi	r19, 0x00	; 0
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	90 e0       	ldi	r25, 0x00	; 0
    11c6:	02 2e       	mov	r0, r18
    11c8:	02 c0       	rjmp	.+4      	; 0x11ce <DIO_eunmTogglePin+0xd2>
    11ca:	88 0f       	add	r24, r24
    11cc:	99 1f       	adc	r25, r25
    11ce:	0a 94       	dec	r0
    11d0:	e2 f7       	brpl	.-8      	; 0x11ca <DIO_eunmTogglePin+0xce>
    11d2:	84 27       	eor	r24, r20
    11d4:	8c 93       	st	X, r24
    11d6:	15 c0       	rjmp	.+42     	; 0x1202 <DIO_eunmTogglePin+0x106>
		case DIO_PORTD: TOG_BIT(PORTD_R,COPY_u8PIN);break;
    11d8:	a2 e3       	ldi	r26, 0x32	; 50
    11da:	b0 e0       	ldi	r27, 0x00	; 0
    11dc:	e2 e3       	ldi	r30, 0x32	; 50
    11de:	f0 e0       	ldi	r31, 0x00	; 0
    11e0:	80 81       	ld	r24, Z
    11e2:	48 2f       	mov	r20, r24
    11e4:	8b 81       	ldd	r24, Y+3	; 0x03
    11e6:	28 2f       	mov	r18, r24
    11e8:	30 e0       	ldi	r19, 0x00	; 0
    11ea:	81 e0       	ldi	r24, 0x01	; 1
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	02 2e       	mov	r0, r18
    11f0:	02 c0       	rjmp	.+4      	; 0x11f6 <DIO_eunmTogglePin+0xfa>
    11f2:	88 0f       	add	r24, r24
    11f4:	99 1f       	adc	r25, r25
    11f6:	0a 94       	dec	r0
    11f8:	e2 f7       	brpl	.-8      	; 0x11f2 <DIO_eunmTogglePin+0xf6>
    11fa:	84 27       	eor	r24, r20
    11fc:	8c 93       	st	X, r24
    11fe:	01 c0       	rjmp	.+2      	; 0x1202 <DIO_eunmTogglePin+0x106>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    1200:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    1202:	89 81       	ldd	r24, Y+1	; 0x01
}
    1204:	0f 90       	pop	r0
    1206:	0f 90       	pop	r0
    1208:	0f 90       	pop	r0
    120a:	0f 90       	pop	r0
    120c:	0f 90       	pop	r0
    120e:	cf 91       	pop	r28
    1210:	df 91       	pop	r29
    1212:	08 95       	ret

00001214 <DIO_eunmSetPortDirection>:
DIO_ErrorStatus DIO_eunmSetPortDirection    (u8 COPY_u8PORT ,u8 COPY_u8Direction                )
{
    1214:	df 93       	push	r29
    1216:	cf 93       	push	r28
    1218:	00 d0       	rcall	.+0      	; 0x121a <DIO_eunmSetPortDirection+0x6>
    121a:	00 d0       	rcall	.+0      	; 0x121c <DIO_eunmSetPortDirection+0x8>
    121c:	0f 92       	push	r0
    121e:	cd b7       	in	r28, 0x3d	; 61
    1220:	de b7       	in	r29, 0x3e	; 62
    1222:	8a 83       	std	Y+2, r24	; 0x02
    1224:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    1226:	81 e0       	ldi	r24, 0x01	; 1
    1228:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    122a:	8a 81       	ldd	r24, Y+2	; 0x02
    122c:	84 30       	cpi	r24, 0x04	; 4
    122e:	98 f5       	brcc	.+102    	; 0x1296 <DIO_eunmSetPortDirection+0x82>
	{
		switch (COPY_u8PORT)
    1230:	8a 81       	ldd	r24, Y+2	; 0x02
    1232:	28 2f       	mov	r18, r24
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	3d 83       	std	Y+5, r19	; 0x05
    1238:	2c 83       	std	Y+4, r18	; 0x04
    123a:	8c 81       	ldd	r24, Y+4	; 0x04
    123c:	9d 81       	ldd	r25, Y+5	; 0x05
    123e:	81 30       	cpi	r24, 0x01	; 1
    1240:	91 05       	cpc	r25, r1
    1242:	d1 f0       	breq	.+52     	; 0x1278 <DIO_eunmSetPortDirection+0x64>
    1244:	2c 81       	ldd	r18, Y+4	; 0x04
    1246:	3d 81       	ldd	r19, Y+5	; 0x05
    1248:	22 30       	cpi	r18, 0x02	; 2
    124a:	31 05       	cpc	r19, r1
    124c:	2c f4       	brge	.+10     	; 0x1258 <DIO_eunmSetPortDirection+0x44>
    124e:	8c 81       	ldd	r24, Y+4	; 0x04
    1250:	9d 81       	ldd	r25, Y+5	; 0x05
    1252:	00 97       	sbiw	r24, 0x00	; 0
    1254:	61 f0       	breq	.+24     	; 0x126e <DIO_eunmSetPortDirection+0x5a>
    1256:	20 c0       	rjmp	.+64     	; 0x1298 <DIO_eunmSetPortDirection+0x84>
    1258:	2c 81       	ldd	r18, Y+4	; 0x04
    125a:	3d 81       	ldd	r19, Y+5	; 0x05
    125c:	22 30       	cpi	r18, 0x02	; 2
    125e:	31 05       	cpc	r19, r1
    1260:	81 f0       	breq	.+32     	; 0x1282 <DIO_eunmSetPortDirection+0x6e>
    1262:	8c 81       	ldd	r24, Y+4	; 0x04
    1264:	9d 81       	ldd	r25, Y+5	; 0x05
    1266:	83 30       	cpi	r24, 0x03	; 3
    1268:	91 05       	cpc	r25, r1
    126a:	81 f0       	breq	.+32     	; 0x128c <DIO_eunmSetPortDirection+0x78>
    126c:	15 c0       	rjmp	.+42     	; 0x1298 <DIO_eunmSetPortDirection+0x84>
		{
		case DIO_PORTA: DDRA_R = COPY_u8Direction;break;
    126e:	ea e3       	ldi	r30, 0x3A	; 58
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	8b 81       	ldd	r24, Y+3	; 0x03
    1274:	80 83       	st	Z, r24
    1276:	10 c0       	rjmp	.+32     	; 0x1298 <DIO_eunmSetPortDirection+0x84>
		case DIO_PORTB: DDRB_R = COPY_u8Direction;break;
    1278:	e7 e3       	ldi	r30, 0x37	; 55
    127a:	f0 e0       	ldi	r31, 0x00	; 0
    127c:	8b 81       	ldd	r24, Y+3	; 0x03
    127e:	80 83       	st	Z, r24
    1280:	0b c0       	rjmp	.+22     	; 0x1298 <DIO_eunmSetPortDirection+0x84>
		case DIO_PORTC: DDRC_R = COPY_u8Direction;break;
    1282:	e4 e3       	ldi	r30, 0x34	; 52
    1284:	f0 e0       	ldi	r31, 0x00	; 0
    1286:	8b 81       	ldd	r24, Y+3	; 0x03
    1288:	80 83       	st	Z, r24
    128a:	06 c0       	rjmp	.+12     	; 0x1298 <DIO_eunmSetPortDirection+0x84>
		case DIO_PORTD: DDRD_R = COPY_u8Direction;break;
    128c:	e1 e3       	ldi	r30, 0x31	; 49
    128e:	f0 e0       	ldi	r31, 0x00	; 0
    1290:	8b 81       	ldd	r24, Y+3	; 0x03
    1292:	80 83       	st	Z, r24
    1294:	01 c0       	rjmp	.+2      	; 0x1298 <DIO_eunmSetPortDirection+0x84>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    1296:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    1298:	89 81       	ldd	r24, Y+1	; 0x01
}
    129a:	0f 90       	pop	r0
    129c:	0f 90       	pop	r0
    129e:	0f 90       	pop	r0
    12a0:	0f 90       	pop	r0
    12a2:	0f 90       	pop	r0
    12a4:	cf 91       	pop	r28
    12a6:	df 91       	pop	r29
    12a8:	08 95       	ret

000012aa <DIO_eunmSetPortValue>:
DIO_ErrorStatus DIO_eunmSetPortValue        (u8 COPY_u8PORT ,u8 COPY_u8Value                    )
{
    12aa:	df 93       	push	r29
    12ac:	cf 93       	push	r28
    12ae:	00 d0       	rcall	.+0      	; 0x12b0 <DIO_eunmSetPortValue+0x6>
    12b0:	00 d0       	rcall	.+0      	; 0x12b2 <DIO_eunmSetPortValue+0x8>
    12b2:	0f 92       	push	r0
    12b4:	cd b7       	in	r28, 0x3d	; 61
    12b6:	de b7       	in	r29, 0x3e	; 62
    12b8:	8a 83       	std	Y+2, r24	; 0x02
    12ba:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    12bc:	81 e0       	ldi	r24, 0x01	; 1
    12be:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD) && ( (COPY_u8Value<=255) || (COPY_u8Value==DIO_PORT_LOW) || (COPY_u8Value==DIO_PORT_HIGH) ))
    12c0:	8a 81       	ldd	r24, Y+2	; 0x02
    12c2:	84 30       	cpi	r24, 0x04	; 4
    12c4:	98 f5       	brcc	.+102    	; 0x132c <DIO_eunmSetPortValue+0x82>
	{
		switch (COPY_u8PORT)
    12c6:	8a 81       	ldd	r24, Y+2	; 0x02
    12c8:	28 2f       	mov	r18, r24
    12ca:	30 e0       	ldi	r19, 0x00	; 0
    12cc:	3d 83       	std	Y+5, r19	; 0x05
    12ce:	2c 83       	std	Y+4, r18	; 0x04
    12d0:	8c 81       	ldd	r24, Y+4	; 0x04
    12d2:	9d 81       	ldd	r25, Y+5	; 0x05
    12d4:	81 30       	cpi	r24, 0x01	; 1
    12d6:	91 05       	cpc	r25, r1
    12d8:	d1 f0       	breq	.+52     	; 0x130e <DIO_eunmSetPortValue+0x64>
    12da:	2c 81       	ldd	r18, Y+4	; 0x04
    12dc:	3d 81       	ldd	r19, Y+5	; 0x05
    12de:	22 30       	cpi	r18, 0x02	; 2
    12e0:	31 05       	cpc	r19, r1
    12e2:	2c f4       	brge	.+10     	; 0x12ee <DIO_eunmSetPortValue+0x44>
    12e4:	8c 81       	ldd	r24, Y+4	; 0x04
    12e6:	9d 81       	ldd	r25, Y+5	; 0x05
    12e8:	00 97       	sbiw	r24, 0x00	; 0
    12ea:	61 f0       	breq	.+24     	; 0x1304 <DIO_eunmSetPortValue+0x5a>
    12ec:	20 c0       	rjmp	.+64     	; 0x132e <DIO_eunmSetPortValue+0x84>
    12ee:	2c 81       	ldd	r18, Y+4	; 0x04
    12f0:	3d 81       	ldd	r19, Y+5	; 0x05
    12f2:	22 30       	cpi	r18, 0x02	; 2
    12f4:	31 05       	cpc	r19, r1
    12f6:	81 f0       	breq	.+32     	; 0x1318 <DIO_eunmSetPortValue+0x6e>
    12f8:	8c 81       	ldd	r24, Y+4	; 0x04
    12fa:	9d 81       	ldd	r25, Y+5	; 0x05
    12fc:	83 30       	cpi	r24, 0x03	; 3
    12fe:	91 05       	cpc	r25, r1
    1300:	81 f0       	breq	.+32     	; 0x1322 <DIO_eunmSetPortValue+0x78>
    1302:	15 c0       	rjmp	.+42     	; 0x132e <DIO_eunmSetPortValue+0x84>
		{
		case DIO_PORTA: PORTA_R = COPY_u8Value;break;
    1304:	eb e3       	ldi	r30, 0x3B	; 59
    1306:	f0 e0       	ldi	r31, 0x00	; 0
    1308:	8b 81       	ldd	r24, Y+3	; 0x03
    130a:	80 83       	st	Z, r24
    130c:	10 c0       	rjmp	.+32     	; 0x132e <DIO_eunmSetPortValue+0x84>
		case DIO_PORTB: PORTB_R = COPY_u8Value;break;
    130e:	e8 e3       	ldi	r30, 0x38	; 56
    1310:	f0 e0       	ldi	r31, 0x00	; 0
    1312:	8b 81       	ldd	r24, Y+3	; 0x03
    1314:	80 83       	st	Z, r24
    1316:	0b c0       	rjmp	.+22     	; 0x132e <DIO_eunmSetPortValue+0x84>
		case DIO_PORTC: PORTC_R = COPY_u8Value;break;
    1318:	e5 e3       	ldi	r30, 0x35	; 53
    131a:	f0 e0       	ldi	r31, 0x00	; 0
    131c:	8b 81       	ldd	r24, Y+3	; 0x03
    131e:	80 83       	st	Z, r24
    1320:	06 c0       	rjmp	.+12     	; 0x132e <DIO_eunmSetPortValue+0x84>
		case DIO_PORTD: PORTD_R = COPY_u8Value;break;
    1322:	e2 e3       	ldi	r30, 0x32	; 50
    1324:	f0 e0       	ldi	r31, 0x00	; 0
    1326:	8b 81       	ldd	r24, Y+3	; 0x03
    1328:	80 83       	st	Z, r24
    132a:	01 c0       	rjmp	.+2      	; 0x132e <DIO_eunmSetPortValue+0x84>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    132c:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    132e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1330:	0f 90       	pop	r0
    1332:	0f 90       	pop	r0
    1334:	0f 90       	pop	r0
    1336:	0f 90       	pop	r0
    1338:	0f 90       	pop	r0
    133a:	cf 91       	pop	r28
    133c:	df 91       	pop	r29
    133e:	08 95       	ret

00001340 <DIO_eunmGetPort>:
DIO_ErrorStatus DIO_eunmGetPort             (u8 COPY_u8PORT ,u8 *COPY_PtrData			        )
{
    1340:	df 93       	push	r29
    1342:	cf 93       	push	r28
    1344:	00 d0       	rcall	.+0      	; 0x1346 <DIO_eunmGetPort+0x6>
    1346:	00 d0       	rcall	.+0      	; 0x1348 <DIO_eunmGetPort+0x8>
    1348:	00 d0       	rcall	.+0      	; 0x134a <DIO_eunmGetPort+0xa>
    134a:	cd b7       	in	r28, 0x3d	; 61
    134c:	de b7       	in	r29, 0x3e	; 62
    134e:	8a 83       	std	Y+2, r24	; 0x02
    1350:	7c 83       	std	Y+4, r23	; 0x04
    1352:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    1354:	81 e0       	ldi	r24, 0x01	; 1
    1356:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    1358:	8a 81       	ldd	r24, Y+2	; 0x02
    135a:	84 30       	cpi	r24, 0x04	; 4
    135c:	d8 f5       	brcc	.+118    	; 0x13d4 <DIO_eunmGetPort+0x94>
	{
		switch (COPY_u8PORT)
    135e:	8a 81       	ldd	r24, Y+2	; 0x02
    1360:	28 2f       	mov	r18, r24
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	3e 83       	std	Y+6, r19	; 0x06
    1366:	2d 83       	std	Y+5, r18	; 0x05
    1368:	8d 81       	ldd	r24, Y+5	; 0x05
    136a:	9e 81       	ldd	r25, Y+6	; 0x06
    136c:	81 30       	cpi	r24, 0x01	; 1
    136e:	91 05       	cpc	r25, r1
    1370:	e1 f0       	breq	.+56     	; 0x13aa <DIO_eunmGetPort+0x6a>
    1372:	2d 81       	ldd	r18, Y+5	; 0x05
    1374:	3e 81       	ldd	r19, Y+6	; 0x06
    1376:	22 30       	cpi	r18, 0x02	; 2
    1378:	31 05       	cpc	r19, r1
    137a:	2c f4       	brge	.+10     	; 0x1386 <DIO_eunmGetPort+0x46>
    137c:	8d 81       	ldd	r24, Y+5	; 0x05
    137e:	9e 81       	ldd	r25, Y+6	; 0x06
    1380:	00 97       	sbiw	r24, 0x00	; 0
    1382:	61 f0       	breq	.+24     	; 0x139c <DIO_eunmGetPort+0x5c>
    1384:	28 c0       	rjmp	.+80     	; 0x13d6 <DIO_eunmGetPort+0x96>
    1386:	2d 81       	ldd	r18, Y+5	; 0x05
    1388:	3e 81       	ldd	r19, Y+6	; 0x06
    138a:	22 30       	cpi	r18, 0x02	; 2
    138c:	31 05       	cpc	r19, r1
    138e:	a1 f0       	breq	.+40     	; 0x13b8 <DIO_eunmGetPort+0x78>
    1390:	8d 81       	ldd	r24, Y+5	; 0x05
    1392:	9e 81       	ldd	r25, Y+6	; 0x06
    1394:	83 30       	cpi	r24, 0x03	; 3
    1396:	91 05       	cpc	r25, r1
    1398:	b1 f0       	breq	.+44     	; 0x13c6 <DIO_eunmGetPort+0x86>
    139a:	1d c0       	rjmp	.+58     	; 0x13d6 <DIO_eunmGetPort+0x96>
		{
		case DIO_PORTA: *COPY_PtrData = PINA_R;break;
    139c:	e9 e3       	ldi	r30, 0x39	; 57
    139e:	f0 e0       	ldi	r31, 0x00	; 0
    13a0:	80 81       	ld	r24, Z
    13a2:	eb 81       	ldd	r30, Y+3	; 0x03
    13a4:	fc 81       	ldd	r31, Y+4	; 0x04
    13a6:	80 83       	st	Z, r24
    13a8:	16 c0       	rjmp	.+44     	; 0x13d6 <DIO_eunmGetPort+0x96>
		case DIO_PORTB: *COPY_PtrData = PINB_R;break;
    13aa:	e6 e3       	ldi	r30, 0x36	; 54
    13ac:	f0 e0       	ldi	r31, 0x00	; 0
    13ae:	80 81       	ld	r24, Z
    13b0:	eb 81       	ldd	r30, Y+3	; 0x03
    13b2:	fc 81       	ldd	r31, Y+4	; 0x04
    13b4:	80 83       	st	Z, r24
    13b6:	0f c0       	rjmp	.+30     	; 0x13d6 <DIO_eunmGetPort+0x96>
		case DIO_PORTC: *COPY_PtrData = PINC_R;break;
    13b8:	e3 e3       	ldi	r30, 0x33	; 51
    13ba:	f0 e0       	ldi	r31, 0x00	; 0
    13bc:	80 81       	ld	r24, Z
    13be:	eb 81       	ldd	r30, Y+3	; 0x03
    13c0:	fc 81       	ldd	r31, Y+4	; 0x04
    13c2:	80 83       	st	Z, r24
    13c4:	08 c0       	rjmp	.+16     	; 0x13d6 <DIO_eunmGetPort+0x96>
		case DIO_PORTD: *COPY_PtrData = PIND_R;break;
    13c6:	e0 e3       	ldi	r30, 0x30	; 48
    13c8:	f0 e0       	ldi	r31, 0x00	; 0
    13ca:	80 81       	ld	r24, Z
    13cc:	eb 81       	ldd	r30, Y+3	; 0x03
    13ce:	fc 81       	ldd	r31, Y+4	; 0x04
    13d0:	80 83       	st	Z, r24
    13d2:	01 c0       	rjmp	.+2      	; 0x13d6 <DIO_eunmGetPort+0x96>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    13d4:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus;
    13d6:	89 81       	ldd	r24, Y+1	; 0x01
}
    13d8:	26 96       	adiw	r28, 0x06	; 6
    13da:	0f b6       	in	r0, 0x3f	; 63
    13dc:	f8 94       	cli
    13de:	de bf       	out	0x3e, r29	; 62
    13e0:	0f be       	out	0x3f, r0	; 63
    13e2:	cd bf       	out	0x3d, r28	; 61
    13e4:	cf 91       	pop	r28
    13e6:	df 91       	pop	r29
    13e8:	08 95       	ret

000013ea <DIO_eunmToggelPort>:
DIO_ErrorStatus DIO_eunmToggelPort          (u8 COPY_u8PORT 				  			        )
{
    13ea:	df 93       	push	r29
    13ec:	cf 93       	push	r28
    13ee:	00 d0       	rcall	.+0      	; 0x13f0 <DIO_eunmToggelPort+0x6>
    13f0:	00 d0       	rcall	.+0      	; 0x13f2 <DIO_eunmToggelPort+0x8>
    13f2:	cd b7       	in	r28, 0x3d	; 61
    13f4:	de b7       	in	r29, 0x3e	; 62
    13f6:	8a 83       	std	Y+2, r24	; 0x02
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    13f8:	81 e0       	ldi	r24, 0x01	; 1
    13fa:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    13fc:	8a 81       	ldd	r24, Y+2	; 0x02
    13fe:	84 30       	cpi	r24, 0x04	; 4
    1400:	08 f0       	brcs	.+2      	; 0x1404 <DIO_eunmToggelPort+0x1a>
    1402:	3f c0       	rjmp	.+126    	; 0x1482 <DIO_eunmToggelPort+0x98>
	{
		switch (COPY_u8PORT)
    1404:	8a 81       	ldd	r24, Y+2	; 0x02
    1406:	28 2f       	mov	r18, r24
    1408:	30 e0       	ldi	r19, 0x00	; 0
    140a:	3c 83       	std	Y+4, r19	; 0x04
    140c:	2b 83       	std	Y+3, r18	; 0x03
    140e:	8b 81       	ldd	r24, Y+3	; 0x03
    1410:	9c 81       	ldd	r25, Y+4	; 0x04
    1412:	81 30       	cpi	r24, 0x01	; 1
    1414:	91 05       	cpc	r25, r1
    1416:	e9 f0       	breq	.+58     	; 0x1452 <DIO_eunmToggelPort+0x68>
    1418:	2b 81       	ldd	r18, Y+3	; 0x03
    141a:	3c 81       	ldd	r19, Y+4	; 0x04
    141c:	22 30       	cpi	r18, 0x02	; 2
    141e:	31 05       	cpc	r19, r1
    1420:	2c f4       	brge	.+10     	; 0x142c <DIO_eunmToggelPort+0x42>
    1422:	8b 81       	ldd	r24, Y+3	; 0x03
    1424:	9c 81       	ldd	r25, Y+4	; 0x04
    1426:	00 97       	sbiw	r24, 0x00	; 0
    1428:	61 f0       	breq	.+24     	; 0x1442 <DIO_eunmToggelPort+0x58>
    142a:	2c c0       	rjmp	.+88     	; 0x1484 <DIO_eunmToggelPort+0x9a>
    142c:	2b 81       	ldd	r18, Y+3	; 0x03
    142e:	3c 81       	ldd	r19, Y+4	; 0x04
    1430:	22 30       	cpi	r18, 0x02	; 2
    1432:	31 05       	cpc	r19, r1
    1434:	b1 f0       	breq	.+44     	; 0x1462 <DIO_eunmToggelPort+0x78>
    1436:	8b 81       	ldd	r24, Y+3	; 0x03
    1438:	9c 81       	ldd	r25, Y+4	; 0x04
    143a:	83 30       	cpi	r24, 0x03	; 3
    143c:	91 05       	cpc	r25, r1
    143e:	c9 f0       	breq	.+50     	; 0x1472 <DIO_eunmToggelPort+0x88>
    1440:	21 c0       	rjmp	.+66     	; 0x1484 <DIO_eunmToggelPort+0x9a>
		{
		case DIO_PORTA: PORTA_R = ~PORTA_R;break;
    1442:	ab e3       	ldi	r26, 0x3B	; 59
    1444:	b0 e0       	ldi	r27, 0x00	; 0
    1446:	eb e3       	ldi	r30, 0x3B	; 59
    1448:	f0 e0       	ldi	r31, 0x00	; 0
    144a:	80 81       	ld	r24, Z
    144c:	80 95       	com	r24
    144e:	8c 93       	st	X, r24
    1450:	19 c0       	rjmp	.+50     	; 0x1484 <DIO_eunmToggelPort+0x9a>
		case DIO_PORTB: PORTB_R = ~PORTB_R;break;
    1452:	a8 e3       	ldi	r26, 0x38	; 56
    1454:	b0 e0       	ldi	r27, 0x00	; 0
    1456:	e8 e3       	ldi	r30, 0x38	; 56
    1458:	f0 e0       	ldi	r31, 0x00	; 0
    145a:	80 81       	ld	r24, Z
    145c:	80 95       	com	r24
    145e:	8c 93       	st	X, r24
    1460:	11 c0       	rjmp	.+34     	; 0x1484 <DIO_eunmToggelPort+0x9a>
		case DIO_PORTC: PORTC_R = ~PORTC_R;break;
    1462:	a5 e3       	ldi	r26, 0x35	; 53
    1464:	b0 e0       	ldi	r27, 0x00	; 0
    1466:	e5 e3       	ldi	r30, 0x35	; 53
    1468:	f0 e0       	ldi	r31, 0x00	; 0
    146a:	80 81       	ld	r24, Z
    146c:	80 95       	com	r24
    146e:	8c 93       	st	X, r24
    1470:	09 c0       	rjmp	.+18     	; 0x1484 <DIO_eunmToggelPort+0x9a>
		case DIO_PORTD: PORTD_R = ~PORTD_R;break;
    1472:	a2 e3       	ldi	r26, 0x32	; 50
    1474:	b0 e0       	ldi	r27, 0x00	; 0
    1476:	e2 e3       	ldi	r30, 0x32	; 50
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	80 81       	ld	r24, Z
    147c:	80 95       	com	r24
    147e:	8c 93       	st	X, r24
    1480:	01 c0       	rjmp	.+2      	; 0x1484 <DIO_eunmToggelPort+0x9a>
		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    1482:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus ;
    1484:	89 81       	ldd	r24, Y+1	; 0x01
}
    1486:	0f 90       	pop	r0
    1488:	0f 90       	pop	r0
    148a:	0f 90       	pop	r0
    148c:	0f 90       	pop	r0
    148e:	cf 91       	pop	r28
    1490:	df 91       	pop	r29
    1492:	08 95       	ret

00001494 <DIO_eunmSetPinInterPullUp>:
DIO_ErrorStatus DIO_eunmSetPinInterPullUp     (u8 COPY_u8PORT ,u8 COPY_u8PIN ,u8 COPY_u8ConnectPullUp )
{
    1494:	df 93       	push	r29
    1496:	cf 93       	push	r28
    1498:	00 d0       	rcall	.+0      	; 0x149a <DIO_eunmSetPinInterPullUp+0x6>
    149a:	00 d0       	rcall	.+0      	; 0x149c <DIO_eunmSetPinInterPullUp+0x8>
    149c:	00 d0       	rcall	.+0      	; 0x149e <DIO_eunmSetPinInterPullUp+0xa>
    149e:	cd b7       	in	r28, 0x3d	; 61
    14a0:	de b7       	in	r29, 0x3e	; 62
    14a2:	8a 83       	std	Y+2, r24	; 0x02
    14a4:	6b 83       	std	Y+3, r22	; 0x03
    14a6:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    14a8:	81 e0       	ldi	r24, 0x01	; 1
    14aa:	89 83       	std	Y+1, r24	; 0x01
	if((COPY_u8PORT <= DIO_PORTD) && (COPY_u8PIN <= DIO_PIN7))
    14ac:	8a 81       	ldd	r24, Y+2	; 0x02
    14ae:	84 30       	cpi	r24, 0x04	; 4
    14b0:	08 f0       	brcs	.+2      	; 0x14b4 <DIO_eunmSetPinInterPullUp+0x20>
    14b2:	3e c1       	rjmp	.+636    	; 0x1730 <DIO_eunmSetPinInterPullUp+0x29c>
    14b4:	8b 81       	ldd	r24, Y+3	; 0x03
    14b6:	88 30       	cpi	r24, 0x08	; 8
    14b8:	08 f0       	brcs	.+2      	; 0x14bc <DIO_eunmSetPinInterPullUp+0x28>
    14ba:	3a c1       	rjmp	.+628    	; 0x1730 <DIO_eunmSetPinInterPullUp+0x29c>
	{
		switch(COPY_u8PORT)
    14bc:	8a 81       	ldd	r24, Y+2	; 0x02
    14be:	28 2f       	mov	r18, r24
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	3e 83       	std	Y+6, r19	; 0x06
    14c4:	2d 83       	std	Y+5, r18	; 0x05
    14c6:	8d 81       	ldd	r24, Y+5	; 0x05
    14c8:	9e 81       	ldd	r25, Y+6	; 0x06
    14ca:	81 30       	cpi	r24, 0x01	; 1
    14cc:	91 05       	cpc	r25, r1
    14ce:	09 f4       	brne	.+2      	; 0x14d2 <DIO_eunmSetPinInterPullUp+0x3e>
    14d0:	5d c0       	rjmp	.+186    	; 0x158c <DIO_eunmSetPinInterPullUp+0xf8>
    14d2:	2d 81       	ldd	r18, Y+5	; 0x05
    14d4:	3e 81       	ldd	r19, Y+6	; 0x06
    14d6:	22 30       	cpi	r18, 0x02	; 2
    14d8:	31 05       	cpc	r19, r1
    14da:	2c f4       	brge	.+10     	; 0x14e6 <DIO_eunmSetPinInterPullUp+0x52>
    14dc:	8d 81       	ldd	r24, Y+5	; 0x05
    14de:	9e 81       	ldd	r25, Y+6	; 0x06
    14e0:	00 97       	sbiw	r24, 0x00	; 0
    14e2:	71 f0       	breq	.+28     	; 0x1500 <DIO_eunmSetPinInterPullUp+0x6c>
    14e4:	26 c1       	rjmp	.+588    	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
    14e6:	2d 81       	ldd	r18, Y+5	; 0x05
    14e8:	3e 81       	ldd	r19, Y+6	; 0x06
    14ea:	22 30       	cpi	r18, 0x02	; 2
    14ec:	31 05       	cpc	r19, r1
    14ee:	09 f4       	brne	.+2      	; 0x14f2 <DIO_eunmSetPinInterPullUp+0x5e>
    14f0:	93 c0       	rjmp	.+294    	; 0x1618 <DIO_eunmSetPinInterPullUp+0x184>
    14f2:	8d 81       	ldd	r24, Y+5	; 0x05
    14f4:	9e 81       	ldd	r25, Y+6	; 0x06
    14f6:	83 30       	cpi	r24, 0x03	; 3
    14f8:	91 05       	cpc	r25, r1
    14fa:	09 f4       	brne	.+2      	; 0x14fe <DIO_eunmSetPinInterPullUp+0x6a>
    14fc:	d3 c0       	rjmp	.+422    	; 0x16a4 <DIO_eunmSetPinInterPullUp+0x210>
    14fe:	19 c1       	rjmp	.+562    	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
		{
		case DIO_PORTA:
			if(COPY_u8ConnectPullUp == DIO_PIN_HIGH)
    1500:	8c 81       	ldd	r24, Y+4	; 0x04
    1502:	81 30       	cpi	r24, 0x01	; 1
    1504:	71 f5       	brne	.+92     	; 0x1562 <DIO_eunmSetPinInterPullUp+0xce>
			{
				CLR_BIT(SFIOR,PUD);
    1506:	a0 e5       	ldi	r26, 0x50	; 80
    1508:	b0 e0       	ldi	r27, 0x00	; 0
    150a:	e0 e5       	ldi	r30, 0x50	; 80
    150c:	f0 e0       	ldi	r31, 0x00	; 0
    150e:	80 81       	ld	r24, Z
    1510:	8b 7f       	andi	r24, 0xFB	; 251
    1512:	8c 93       	st	X, r24
				CLR_BIT(DDRA_R,COPY_u8PIN);
    1514:	aa e3       	ldi	r26, 0x3A	; 58
    1516:	b0 e0       	ldi	r27, 0x00	; 0
    1518:	ea e3       	ldi	r30, 0x3A	; 58
    151a:	f0 e0       	ldi	r31, 0x00	; 0
    151c:	80 81       	ld	r24, Z
    151e:	48 2f       	mov	r20, r24
    1520:	8b 81       	ldd	r24, Y+3	; 0x03
    1522:	28 2f       	mov	r18, r24
    1524:	30 e0       	ldi	r19, 0x00	; 0
    1526:	81 e0       	ldi	r24, 0x01	; 1
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	02 c0       	rjmp	.+4      	; 0x1530 <DIO_eunmSetPinInterPullUp+0x9c>
    152c:	88 0f       	add	r24, r24
    152e:	99 1f       	adc	r25, r25
    1530:	2a 95       	dec	r18
    1532:	e2 f7       	brpl	.-8      	; 0x152c <DIO_eunmSetPinInterPullUp+0x98>
    1534:	80 95       	com	r24
    1536:	84 23       	and	r24, r20
    1538:	8c 93       	st	X, r24
				SET_BIT(PORTA_R,COPY_u8PIN);
    153a:	ab e3       	ldi	r26, 0x3B	; 59
    153c:	b0 e0       	ldi	r27, 0x00	; 0
    153e:	eb e3       	ldi	r30, 0x3B	; 59
    1540:	f0 e0       	ldi	r31, 0x00	; 0
    1542:	80 81       	ld	r24, Z
    1544:	48 2f       	mov	r20, r24
    1546:	8b 81       	ldd	r24, Y+3	; 0x03
    1548:	28 2f       	mov	r18, r24
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	81 e0       	ldi	r24, 0x01	; 1
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	02 2e       	mov	r0, r18
    1552:	02 c0       	rjmp	.+4      	; 0x1558 <DIO_eunmSetPinInterPullUp+0xc4>
    1554:	88 0f       	add	r24, r24
    1556:	99 1f       	adc	r25, r25
    1558:	0a 94       	dec	r0
    155a:	e2 f7       	brpl	.-8      	; 0x1554 <DIO_eunmSetPinInterPullUp+0xc0>
    155c:	84 2b       	or	r24, r20
    155e:	8c 93       	st	X, r24
    1560:	e8 c0       	rjmp	.+464    	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
			}
			else
			{
				CLR_BIT(PORTA_R,COPY_u8PIN);
    1562:	ab e3       	ldi	r26, 0x3B	; 59
    1564:	b0 e0       	ldi	r27, 0x00	; 0
    1566:	eb e3       	ldi	r30, 0x3B	; 59
    1568:	f0 e0       	ldi	r31, 0x00	; 0
    156a:	80 81       	ld	r24, Z
    156c:	48 2f       	mov	r20, r24
    156e:	8b 81       	ldd	r24, Y+3	; 0x03
    1570:	28 2f       	mov	r18, r24
    1572:	30 e0       	ldi	r19, 0x00	; 0
    1574:	81 e0       	ldi	r24, 0x01	; 1
    1576:	90 e0       	ldi	r25, 0x00	; 0
    1578:	02 2e       	mov	r0, r18
    157a:	02 c0       	rjmp	.+4      	; 0x1580 <DIO_eunmSetPinInterPullUp+0xec>
    157c:	88 0f       	add	r24, r24
    157e:	99 1f       	adc	r25, r25
    1580:	0a 94       	dec	r0
    1582:	e2 f7       	brpl	.-8      	; 0x157c <DIO_eunmSetPinInterPullUp+0xe8>
    1584:	80 95       	com	r24
    1586:	84 23       	and	r24, r20
    1588:	8c 93       	st	X, r24
    158a:	d3 c0       	rjmp	.+422    	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
			}break;
		case DIO_PORTB:
			if(COPY_u8ConnectPullUp == DIO_PIN_HIGH)
    158c:	8c 81       	ldd	r24, Y+4	; 0x04
    158e:	81 30       	cpi	r24, 0x01	; 1
    1590:	71 f5       	brne	.+92     	; 0x15ee <DIO_eunmSetPinInterPullUp+0x15a>
			{
				CLR_BIT(SFIOR,PUD);
    1592:	a0 e5       	ldi	r26, 0x50	; 80
    1594:	b0 e0       	ldi	r27, 0x00	; 0
    1596:	e0 e5       	ldi	r30, 0x50	; 80
    1598:	f0 e0       	ldi	r31, 0x00	; 0
    159a:	80 81       	ld	r24, Z
    159c:	8b 7f       	andi	r24, 0xFB	; 251
    159e:	8c 93       	st	X, r24
				CLR_BIT(DDRB_R,COPY_u8PIN);
    15a0:	a7 e3       	ldi	r26, 0x37	; 55
    15a2:	b0 e0       	ldi	r27, 0x00	; 0
    15a4:	e7 e3       	ldi	r30, 0x37	; 55
    15a6:	f0 e0       	ldi	r31, 0x00	; 0
    15a8:	80 81       	ld	r24, Z
    15aa:	48 2f       	mov	r20, r24
    15ac:	8b 81       	ldd	r24, Y+3	; 0x03
    15ae:	28 2f       	mov	r18, r24
    15b0:	30 e0       	ldi	r19, 0x00	; 0
    15b2:	81 e0       	ldi	r24, 0x01	; 1
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	02 c0       	rjmp	.+4      	; 0x15bc <DIO_eunmSetPinInterPullUp+0x128>
    15b8:	88 0f       	add	r24, r24
    15ba:	99 1f       	adc	r25, r25
    15bc:	2a 95       	dec	r18
    15be:	e2 f7       	brpl	.-8      	; 0x15b8 <DIO_eunmSetPinInterPullUp+0x124>
    15c0:	80 95       	com	r24
    15c2:	84 23       	and	r24, r20
    15c4:	8c 93       	st	X, r24
				SET_BIT(PORTB_R,COPY_u8PIN);
    15c6:	a8 e3       	ldi	r26, 0x38	; 56
    15c8:	b0 e0       	ldi	r27, 0x00	; 0
    15ca:	e8 e3       	ldi	r30, 0x38	; 56
    15cc:	f0 e0       	ldi	r31, 0x00	; 0
    15ce:	80 81       	ld	r24, Z
    15d0:	48 2f       	mov	r20, r24
    15d2:	8b 81       	ldd	r24, Y+3	; 0x03
    15d4:	28 2f       	mov	r18, r24
    15d6:	30 e0       	ldi	r19, 0x00	; 0
    15d8:	81 e0       	ldi	r24, 0x01	; 1
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	02 2e       	mov	r0, r18
    15de:	02 c0       	rjmp	.+4      	; 0x15e4 <DIO_eunmSetPinInterPullUp+0x150>
    15e0:	88 0f       	add	r24, r24
    15e2:	99 1f       	adc	r25, r25
    15e4:	0a 94       	dec	r0
    15e6:	e2 f7       	brpl	.-8      	; 0x15e0 <DIO_eunmSetPinInterPullUp+0x14c>
    15e8:	84 2b       	or	r24, r20
    15ea:	8c 93       	st	X, r24
    15ec:	a2 c0       	rjmp	.+324    	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
			}
			else
			{
				CLR_BIT(PORTB_R,COPY_u8PIN);
    15ee:	a8 e3       	ldi	r26, 0x38	; 56
    15f0:	b0 e0       	ldi	r27, 0x00	; 0
    15f2:	e8 e3       	ldi	r30, 0x38	; 56
    15f4:	f0 e0       	ldi	r31, 0x00	; 0
    15f6:	80 81       	ld	r24, Z
    15f8:	48 2f       	mov	r20, r24
    15fa:	8b 81       	ldd	r24, Y+3	; 0x03
    15fc:	28 2f       	mov	r18, r24
    15fe:	30 e0       	ldi	r19, 0x00	; 0
    1600:	81 e0       	ldi	r24, 0x01	; 1
    1602:	90 e0       	ldi	r25, 0x00	; 0
    1604:	02 2e       	mov	r0, r18
    1606:	02 c0       	rjmp	.+4      	; 0x160c <DIO_eunmSetPinInterPullUp+0x178>
    1608:	88 0f       	add	r24, r24
    160a:	99 1f       	adc	r25, r25
    160c:	0a 94       	dec	r0
    160e:	e2 f7       	brpl	.-8      	; 0x1608 <DIO_eunmSetPinInterPullUp+0x174>
    1610:	80 95       	com	r24
    1612:	84 23       	and	r24, r20
    1614:	8c 93       	st	X, r24
    1616:	8d c0       	rjmp	.+282    	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
			}break;
		case DIO_PORTC:
			if(COPY_u8ConnectPullUp == DIO_PIN_HIGH)
    1618:	8c 81       	ldd	r24, Y+4	; 0x04
    161a:	81 30       	cpi	r24, 0x01	; 1
    161c:	71 f5       	brne	.+92     	; 0x167a <DIO_eunmSetPinInterPullUp+0x1e6>
			{
				CLR_BIT(SFIOR,PUD);
    161e:	a0 e5       	ldi	r26, 0x50	; 80
    1620:	b0 e0       	ldi	r27, 0x00	; 0
    1622:	e0 e5       	ldi	r30, 0x50	; 80
    1624:	f0 e0       	ldi	r31, 0x00	; 0
    1626:	80 81       	ld	r24, Z
    1628:	8b 7f       	andi	r24, 0xFB	; 251
    162a:	8c 93       	st	X, r24
				CLR_BIT(DDRC_R,COPY_u8PIN);
    162c:	a4 e3       	ldi	r26, 0x34	; 52
    162e:	b0 e0       	ldi	r27, 0x00	; 0
    1630:	e4 e3       	ldi	r30, 0x34	; 52
    1632:	f0 e0       	ldi	r31, 0x00	; 0
    1634:	80 81       	ld	r24, Z
    1636:	48 2f       	mov	r20, r24
    1638:	8b 81       	ldd	r24, Y+3	; 0x03
    163a:	28 2f       	mov	r18, r24
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	81 e0       	ldi	r24, 0x01	; 1
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	02 c0       	rjmp	.+4      	; 0x1648 <DIO_eunmSetPinInterPullUp+0x1b4>
    1644:	88 0f       	add	r24, r24
    1646:	99 1f       	adc	r25, r25
    1648:	2a 95       	dec	r18
    164a:	e2 f7       	brpl	.-8      	; 0x1644 <DIO_eunmSetPinInterPullUp+0x1b0>
    164c:	80 95       	com	r24
    164e:	84 23       	and	r24, r20
    1650:	8c 93       	st	X, r24
				SET_BIT(PORTC_R,COPY_u8PIN);
    1652:	a5 e3       	ldi	r26, 0x35	; 53
    1654:	b0 e0       	ldi	r27, 0x00	; 0
    1656:	e5 e3       	ldi	r30, 0x35	; 53
    1658:	f0 e0       	ldi	r31, 0x00	; 0
    165a:	80 81       	ld	r24, Z
    165c:	48 2f       	mov	r20, r24
    165e:	8b 81       	ldd	r24, Y+3	; 0x03
    1660:	28 2f       	mov	r18, r24
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	81 e0       	ldi	r24, 0x01	; 1
    1666:	90 e0       	ldi	r25, 0x00	; 0
    1668:	02 2e       	mov	r0, r18
    166a:	02 c0       	rjmp	.+4      	; 0x1670 <DIO_eunmSetPinInterPullUp+0x1dc>
    166c:	88 0f       	add	r24, r24
    166e:	99 1f       	adc	r25, r25
    1670:	0a 94       	dec	r0
    1672:	e2 f7       	brpl	.-8      	; 0x166c <DIO_eunmSetPinInterPullUp+0x1d8>
    1674:	84 2b       	or	r24, r20
    1676:	8c 93       	st	X, r24
    1678:	5c c0       	rjmp	.+184    	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
			}
			else
			{
				CLR_BIT(PORTC_R,COPY_u8PIN);
    167a:	a5 e3       	ldi	r26, 0x35	; 53
    167c:	b0 e0       	ldi	r27, 0x00	; 0
    167e:	e5 e3       	ldi	r30, 0x35	; 53
    1680:	f0 e0       	ldi	r31, 0x00	; 0
    1682:	80 81       	ld	r24, Z
    1684:	48 2f       	mov	r20, r24
    1686:	8b 81       	ldd	r24, Y+3	; 0x03
    1688:	28 2f       	mov	r18, r24
    168a:	30 e0       	ldi	r19, 0x00	; 0
    168c:	81 e0       	ldi	r24, 0x01	; 1
    168e:	90 e0       	ldi	r25, 0x00	; 0
    1690:	02 2e       	mov	r0, r18
    1692:	02 c0       	rjmp	.+4      	; 0x1698 <DIO_eunmSetPinInterPullUp+0x204>
    1694:	88 0f       	add	r24, r24
    1696:	99 1f       	adc	r25, r25
    1698:	0a 94       	dec	r0
    169a:	e2 f7       	brpl	.-8      	; 0x1694 <DIO_eunmSetPinInterPullUp+0x200>
    169c:	80 95       	com	r24
    169e:	84 23       	and	r24, r20
    16a0:	8c 93       	st	X, r24
    16a2:	47 c0       	rjmp	.+142    	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
			}break;
		case DIO_PORTD:
			if(COPY_u8ConnectPullUp == DIO_PIN_HIGH)
    16a4:	8c 81       	ldd	r24, Y+4	; 0x04
    16a6:	81 30       	cpi	r24, 0x01	; 1
    16a8:	71 f5       	brne	.+92     	; 0x1706 <DIO_eunmSetPinInterPullUp+0x272>
			{
				CLR_BIT(SFIOR,PUD);
    16aa:	a0 e5       	ldi	r26, 0x50	; 80
    16ac:	b0 e0       	ldi	r27, 0x00	; 0
    16ae:	e0 e5       	ldi	r30, 0x50	; 80
    16b0:	f0 e0       	ldi	r31, 0x00	; 0
    16b2:	80 81       	ld	r24, Z
    16b4:	8b 7f       	andi	r24, 0xFB	; 251
    16b6:	8c 93       	st	X, r24
				CLR_BIT(DDRD_R,COPY_u8PIN);
    16b8:	a1 e3       	ldi	r26, 0x31	; 49
    16ba:	b0 e0       	ldi	r27, 0x00	; 0
    16bc:	e1 e3       	ldi	r30, 0x31	; 49
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	80 81       	ld	r24, Z
    16c2:	48 2f       	mov	r20, r24
    16c4:	8b 81       	ldd	r24, Y+3	; 0x03
    16c6:	28 2f       	mov	r18, r24
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	81 e0       	ldi	r24, 0x01	; 1
    16cc:	90 e0       	ldi	r25, 0x00	; 0
    16ce:	02 c0       	rjmp	.+4      	; 0x16d4 <DIO_eunmSetPinInterPullUp+0x240>
    16d0:	88 0f       	add	r24, r24
    16d2:	99 1f       	adc	r25, r25
    16d4:	2a 95       	dec	r18
    16d6:	e2 f7       	brpl	.-8      	; 0x16d0 <DIO_eunmSetPinInterPullUp+0x23c>
    16d8:	80 95       	com	r24
    16da:	84 23       	and	r24, r20
    16dc:	8c 93       	st	X, r24
				SET_BIT(PORTD_R,COPY_u8PIN);
    16de:	a2 e3       	ldi	r26, 0x32	; 50
    16e0:	b0 e0       	ldi	r27, 0x00	; 0
    16e2:	e2 e3       	ldi	r30, 0x32	; 50
    16e4:	f0 e0       	ldi	r31, 0x00	; 0
    16e6:	80 81       	ld	r24, Z
    16e8:	48 2f       	mov	r20, r24
    16ea:	8b 81       	ldd	r24, Y+3	; 0x03
    16ec:	28 2f       	mov	r18, r24
    16ee:	30 e0       	ldi	r19, 0x00	; 0
    16f0:	81 e0       	ldi	r24, 0x01	; 1
    16f2:	90 e0       	ldi	r25, 0x00	; 0
    16f4:	02 2e       	mov	r0, r18
    16f6:	02 c0       	rjmp	.+4      	; 0x16fc <DIO_eunmSetPinInterPullUp+0x268>
    16f8:	88 0f       	add	r24, r24
    16fa:	99 1f       	adc	r25, r25
    16fc:	0a 94       	dec	r0
    16fe:	e2 f7       	brpl	.-8      	; 0x16f8 <DIO_eunmSetPinInterPullUp+0x264>
    1700:	84 2b       	or	r24, r20
    1702:	8c 93       	st	X, r24
    1704:	16 c0       	rjmp	.+44     	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>
			}
			else
			{
				CLR_BIT(PORTD_R,COPY_u8PIN);
    1706:	a2 e3       	ldi	r26, 0x32	; 50
    1708:	b0 e0       	ldi	r27, 0x00	; 0
    170a:	e2 e3       	ldi	r30, 0x32	; 50
    170c:	f0 e0       	ldi	r31, 0x00	; 0
    170e:	80 81       	ld	r24, Z
    1710:	48 2f       	mov	r20, r24
    1712:	8b 81       	ldd	r24, Y+3	; 0x03
    1714:	28 2f       	mov	r18, r24
    1716:	30 e0       	ldi	r19, 0x00	; 0
    1718:	81 e0       	ldi	r24, 0x01	; 1
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	02 2e       	mov	r0, r18
    171e:	02 c0       	rjmp	.+4      	; 0x1724 <DIO_eunmSetPinInterPullUp+0x290>
    1720:	88 0f       	add	r24, r24
    1722:	99 1f       	adc	r25, r25
    1724:	0a 94       	dec	r0
    1726:	e2 f7       	brpl	.-8      	; 0x1720 <DIO_eunmSetPinInterPullUp+0x28c>
    1728:	80 95       	com	r24
    172a:	84 23       	and	r24, r20
    172c:	8c 93       	st	X, r24
    172e:	01 c0       	rjmp	.+2      	; 0x1732 <DIO_eunmSetPinInterPullUp+0x29e>

		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    1730:	19 82       	std	Y+1, r1	; 0x01
	}


	return LOC_enumStatus ;
    1732:	89 81       	ldd	r24, Y+1	; 0x01
}
    1734:	26 96       	adiw	r28, 0x06	; 6
    1736:	0f b6       	in	r0, 0x3f	; 63
    1738:	f8 94       	cli
    173a:	de bf       	out	0x3e, r29	; 62
    173c:	0f be       	out	0x3f, r0	; 63
    173e:	cd bf       	out	0x3d, r28	; 61
    1740:	cf 91       	pop	r28
    1742:	df 91       	pop	r29
    1744:	08 95       	ret

00001746 <DIO_eunmSetHighNibble>:
DIO_ErrorStatus DIO_eunmSetHighNibble         (u8 COPY_u8PORT ,u8 COPY_u8Value                        )
{
    1746:	df 93       	push	r29
    1748:	cf 93       	push	r28
    174a:	00 d0       	rcall	.+0      	; 0x174c <DIO_eunmSetHighNibble+0x6>
    174c:	00 d0       	rcall	.+0      	; 0x174e <DIO_eunmSetHighNibble+0x8>
    174e:	0f 92       	push	r0
    1750:	cd b7       	in	r28, 0x3d	; 61
    1752:	de b7       	in	r29, 0x3e	; 62
    1754:	8a 83       	std	Y+2, r24	; 0x02
    1756:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    1758:	81 e0       	ldi	r24, 0x01	; 1
    175a:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    175c:	8a 81       	ldd	r24, Y+2	; 0x02
    175e:	84 30       	cpi	r24, 0x04	; 4
    1760:	08 f0       	brcs	.+2      	; 0x1764 <DIO_eunmSetHighNibble+0x1e>
    1762:	63 c0       	rjmp	.+198    	; 0x182a <DIO_eunmSetHighNibble+0xe4>
	{
		COPY_u8Value = (COPY_u8Value<<4);
    1764:	8b 81       	ldd	r24, Y+3	; 0x03
    1766:	82 95       	swap	r24
    1768:	80 7f       	andi	r24, 0xF0	; 240
    176a:	8b 83       	std	Y+3, r24	; 0x03
		switch(COPY_u8PORT)
    176c:	8a 81       	ldd	r24, Y+2	; 0x02
    176e:	28 2f       	mov	r18, r24
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	3d 83       	std	Y+5, r19	; 0x05
    1774:	2c 83       	std	Y+4, r18	; 0x04
    1776:	8c 81       	ldd	r24, Y+4	; 0x04
    1778:	9d 81       	ldd	r25, Y+5	; 0x05
    177a:	81 30       	cpi	r24, 0x01	; 1
    177c:	91 05       	cpc	r25, r1
    177e:	29 f1       	breq	.+74     	; 0x17ca <DIO_eunmSetHighNibble+0x84>
    1780:	2c 81       	ldd	r18, Y+4	; 0x04
    1782:	3d 81       	ldd	r19, Y+5	; 0x05
    1784:	22 30       	cpi	r18, 0x02	; 2
    1786:	31 05       	cpc	r19, r1
    1788:	2c f4       	brge	.+10     	; 0x1794 <DIO_eunmSetHighNibble+0x4e>
    178a:	8c 81       	ldd	r24, Y+4	; 0x04
    178c:	9d 81       	ldd	r25, Y+5	; 0x05
    178e:	00 97       	sbiw	r24, 0x00	; 0
    1790:	61 f0       	breq	.+24     	; 0x17aa <DIO_eunmSetHighNibble+0x64>
    1792:	4c c0       	rjmp	.+152    	; 0x182c <DIO_eunmSetHighNibble+0xe6>
    1794:	2c 81       	ldd	r18, Y+4	; 0x04
    1796:	3d 81       	ldd	r19, Y+5	; 0x05
    1798:	22 30       	cpi	r18, 0x02	; 2
    179a:	31 05       	cpc	r19, r1
    179c:	31 f1       	breq	.+76     	; 0x17ea <DIO_eunmSetHighNibble+0xa4>
    179e:	8c 81       	ldd	r24, Y+4	; 0x04
    17a0:	9d 81       	ldd	r25, Y+5	; 0x05
    17a2:	83 30       	cpi	r24, 0x03	; 3
    17a4:	91 05       	cpc	r25, r1
    17a6:	89 f1       	breq	.+98     	; 0x180a <DIO_eunmSetHighNibble+0xc4>
    17a8:	41 c0       	rjmp	.+130    	; 0x182c <DIO_eunmSetHighNibble+0xe6>
		{
		case DIO_PORTA :
			PORTA_R&=0x0f;
    17aa:	ab e3       	ldi	r26, 0x3B	; 59
    17ac:	b0 e0       	ldi	r27, 0x00	; 0
    17ae:	eb e3       	ldi	r30, 0x3B	; 59
    17b0:	f0 e0       	ldi	r31, 0x00	; 0
    17b2:	80 81       	ld	r24, Z
    17b4:	8f 70       	andi	r24, 0x0F	; 15
    17b6:	8c 93       	st	X, r24
			PORTA_R|=COPY_u8Value;
    17b8:	ab e3       	ldi	r26, 0x3B	; 59
    17ba:	b0 e0       	ldi	r27, 0x00	; 0
    17bc:	eb e3       	ldi	r30, 0x3B	; 59
    17be:	f0 e0       	ldi	r31, 0x00	; 0
    17c0:	90 81       	ld	r25, Z
    17c2:	8b 81       	ldd	r24, Y+3	; 0x03
    17c4:	89 2b       	or	r24, r25
    17c6:	8c 93       	st	X, r24
    17c8:	31 c0       	rjmp	.+98     	; 0x182c <DIO_eunmSetHighNibble+0xe6>
			break;
		case DIO_PORTB :
			PORTB_R&=0x0f;
    17ca:	a8 e3       	ldi	r26, 0x38	; 56
    17cc:	b0 e0       	ldi	r27, 0x00	; 0
    17ce:	e8 e3       	ldi	r30, 0x38	; 56
    17d0:	f0 e0       	ldi	r31, 0x00	; 0
    17d2:	80 81       	ld	r24, Z
    17d4:	8f 70       	andi	r24, 0x0F	; 15
    17d6:	8c 93       	st	X, r24
			PORTB_R|=COPY_u8Value;
    17d8:	a8 e3       	ldi	r26, 0x38	; 56
    17da:	b0 e0       	ldi	r27, 0x00	; 0
    17dc:	e8 e3       	ldi	r30, 0x38	; 56
    17de:	f0 e0       	ldi	r31, 0x00	; 0
    17e0:	90 81       	ld	r25, Z
    17e2:	8b 81       	ldd	r24, Y+3	; 0x03
    17e4:	89 2b       	or	r24, r25
    17e6:	8c 93       	st	X, r24
    17e8:	21 c0       	rjmp	.+66     	; 0x182c <DIO_eunmSetHighNibble+0xe6>
			break;
		case DIO_PORTC :
			PORTC_R&=0x0f;
    17ea:	a5 e3       	ldi	r26, 0x35	; 53
    17ec:	b0 e0       	ldi	r27, 0x00	; 0
    17ee:	e5 e3       	ldi	r30, 0x35	; 53
    17f0:	f0 e0       	ldi	r31, 0x00	; 0
    17f2:	80 81       	ld	r24, Z
    17f4:	8f 70       	andi	r24, 0x0F	; 15
    17f6:	8c 93       	st	X, r24
			PORTC_R|=COPY_u8Value;
    17f8:	a5 e3       	ldi	r26, 0x35	; 53
    17fa:	b0 e0       	ldi	r27, 0x00	; 0
    17fc:	e5 e3       	ldi	r30, 0x35	; 53
    17fe:	f0 e0       	ldi	r31, 0x00	; 0
    1800:	90 81       	ld	r25, Z
    1802:	8b 81       	ldd	r24, Y+3	; 0x03
    1804:	89 2b       	or	r24, r25
    1806:	8c 93       	st	X, r24
    1808:	11 c0       	rjmp	.+34     	; 0x182c <DIO_eunmSetHighNibble+0xe6>
			break;
		case DIO_PORTD :
			PORTD_R&=0x0f;
    180a:	a2 e3       	ldi	r26, 0x32	; 50
    180c:	b0 e0       	ldi	r27, 0x00	; 0
    180e:	e2 e3       	ldi	r30, 0x32	; 50
    1810:	f0 e0       	ldi	r31, 0x00	; 0
    1812:	80 81       	ld	r24, Z
    1814:	8f 70       	andi	r24, 0x0F	; 15
    1816:	8c 93       	st	X, r24
			PORTD_R|=COPY_u8Value;
    1818:	a2 e3       	ldi	r26, 0x32	; 50
    181a:	b0 e0       	ldi	r27, 0x00	; 0
    181c:	e2 e3       	ldi	r30, 0x32	; 50
    181e:	f0 e0       	ldi	r31, 0x00	; 0
    1820:	90 81       	ld	r25, Z
    1822:	8b 81       	ldd	r24, Y+3	; 0x03
    1824:	89 2b       	or	r24, r25
    1826:	8c 93       	st	X, r24
    1828:	01 c0       	rjmp	.+2      	; 0x182c <DIO_eunmSetHighNibble+0xe6>

		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    182a:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus ;
    182c:	89 81       	ldd	r24, Y+1	; 0x01
}
    182e:	0f 90       	pop	r0
    1830:	0f 90       	pop	r0
    1832:	0f 90       	pop	r0
    1834:	0f 90       	pop	r0
    1836:	0f 90       	pop	r0
    1838:	cf 91       	pop	r28
    183a:	df 91       	pop	r29
    183c:	08 95       	ret

0000183e <DIO_voidWriteLowNibble>:

DIO_ErrorStatus DIO_voidWriteLowNibble          (u8 COPY_u8PORT ,u8 COPY_u8Value                        )
{
    183e:	df 93       	push	r29
    1840:	cf 93       	push	r28
    1842:	00 d0       	rcall	.+0      	; 0x1844 <DIO_voidWriteLowNibble+0x6>
    1844:	00 d0       	rcall	.+0      	; 0x1846 <DIO_voidWriteLowNibble+0x8>
    1846:	0f 92       	push	r0
    1848:	cd b7       	in	r28, 0x3d	; 61
    184a:	de b7       	in	r29, 0x3e	; 62
    184c:	8a 83       	std	Y+2, r24	; 0x02
    184e:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumStatus = DIO_OK;
    1850:	81 e0       	ldi	r24, 0x01	; 1
    1852:	89 83       	std	Y+1, r24	; 0x01
	if(COPY_u8PORT <= DIO_PORTD)
    1854:	8a 81       	ldd	r24, Y+2	; 0x02
    1856:	84 30       	cpi	r24, 0x04	; 4
    1858:	08 f0       	brcs	.+2      	; 0x185c <DIO_voidWriteLowNibble+0x1e>
    185a:	62 c0       	rjmp	.+196    	; 0x1920 <DIO_voidWriteLowNibble+0xe2>
	{
		COPY_u8Value &=0x0f;
    185c:	8b 81       	ldd	r24, Y+3	; 0x03
    185e:	8f 70       	andi	r24, 0x0F	; 15
    1860:	8b 83       	std	Y+3, r24	; 0x03
		switch(COPY_u8PORT)
    1862:	8a 81       	ldd	r24, Y+2	; 0x02
    1864:	28 2f       	mov	r18, r24
    1866:	30 e0       	ldi	r19, 0x00	; 0
    1868:	3d 83       	std	Y+5, r19	; 0x05
    186a:	2c 83       	std	Y+4, r18	; 0x04
    186c:	8c 81       	ldd	r24, Y+4	; 0x04
    186e:	9d 81       	ldd	r25, Y+5	; 0x05
    1870:	81 30       	cpi	r24, 0x01	; 1
    1872:	91 05       	cpc	r25, r1
    1874:	29 f1       	breq	.+74     	; 0x18c0 <DIO_voidWriteLowNibble+0x82>
    1876:	2c 81       	ldd	r18, Y+4	; 0x04
    1878:	3d 81       	ldd	r19, Y+5	; 0x05
    187a:	22 30       	cpi	r18, 0x02	; 2
    187c:	31 05       	cpc	r19, r1
    187e:	2c f4       	brge	.+10     	; 0x188a <DIO_voidWriteLowNibble+0x4c>
    1880:	8c 81       	ldd	r24, Y+4	; 0x04
    1882:	9d 81       	ldd	r25, Y+5	; 0x05
    1884:	00 97       	sbiw	r24, 0x00	; 0
    1886:	61 f0       	breq	.+24     	; 0x18a0 <DIO_voidWriteLowNibble+0x62>
    1888:	4c c0       	rjmp	.+152    	; 0x1922 <DIO_voidWriteLowNibble+0xe4>
    188a:	2c 81       	ldd	r18, Y+4	; 0x04
    188c:	3d 81       	ldd	r19, Y+5	; 0x05
    188e:	22 30       	cpi	r18, 0x02	; 2
    1890:	31 05       	cpc	r19, r1
    1892:	31 f1       	breq	.+76     	; 0x18e0 <DIO_voidWriteLowNibble+0xa2>
    1894:	8c 81       	ldd	r24, Y+4	; 0x04
    1896:	9d 81       	ldd	r25, Y+5	; 0x05
    1898:	83 30       	cpi	r24, 0x03	; 3
    189a:	91 05       	cpc	r25, r1
    189c:	89 f1       	breq	.+98     	; 0x1900 <DIO_voidWriteLowNibble+0xc2>
    189e:	41 c0       	rjmp	.+130    	; 0x1922 <DIO_voidWriteLowNibble+0xe4>
		{
		case DIO_PORTA :
			PORTA_R&=0xf0;
    18a0:	ab e3       	ldi	r26, 0x3B	; 59
    18a2:	b0 e0       	ldi	r27, 0x00	; 0
    18a4:	eb e3       	ldi	r30, 0x3B	; 59
    18a6:	f0 e0       	ldi	r31, 0x00	; 0
    18a8:	80 81       	ld	r24, Z
    18aa:	80 7f       	andi	r24, 0xF0	; 240
    18ac:	8c 93       	st	X, r24
			PORTA_R|=COPY_u8Value;
    18ae:	ab e3       	ldi	r26, 0x3B	; 59
    18b0:	b0 e0       	ldi	r27, 0x00	; 0
    18b2:	eb e3       	ldi	r30, 0x3B	; 59
    18b4:	f0 e0       	ldi	r31, 0x00	; 0
    18b6:	90 81       	ld	r25, Z
    18b8:	8b 81       	ldd	r24, Y+3	; 0x03
    18ba:	89 2b       	or	r24, r25
    18bc:	8c 93       	st	X, r24
    18be:	31 c0       	rjmp	.+98     	; 0x1922 <DIO_voidWriteLowNibble+0xe4>
			break;
		case DIO_PORTB :
			PORTB_R&=0xf0;
    18c0:	a8 e3       	ldi	r26, 0x38	; 56
    18c2:	b0 e0       	ldi	r27, 0x00	; 0
    18c4:	e8 e3       	ldi	r30, 0x38	; 56
    18c6:	f0 e0       	ldi	r31, 0x00	; 0
    18c8:	80 81       	ld	r24, Z
    18ca:	80 7f       	andi	r24, 0xF0	; 240
    18cc:	8c 93       	st	X, r24
			PORTB_R|=COPY_u8Value;
    18ce:	a8 e3       	ldi	r26, 0x38	; 56
    18d0:	b0 e0       	ldi	r27, 0x00	; 0
    18d2:	e8 e3       	ldi	r30, 0x38	; 56
    18d4:	f0 e0       	ldi	r31, 0x00	; 0
    18d6:	90 81       	ld	r25, Z
    18d8:	8b 81       	ldd	r24, Y+3	; 0x03
    18da:	89 2b       	or	r24, r25
    18dc:	8c 93       	st	X, r24
    18de:	21 c0       	rjmp	.+66     	; 0x1922 <DIO_voidWriteLowNibble+0xe4>
			break;
		case DIO_PORTC :
			PORTC_R&=0xf0;
    18e0:	a5 e3       	ldi	r26, 0x35	; 53
    18e2:	b0 e0       	ldi	r27, 0x00	; 0
    18e4:	e5 e3       	ldi	r30, 0x35	; 53
    18e6:	f0 e0       	ldi	r31, 0x00	; 0
    18e8:	80 81       	ld	r24, Z
    18ea:	80 7f       	andi	r24, 0xF0	; 240
    18ec:	8c 93       	st	X, r24
			PORTC_R|=COPY_u8Value;
    18ee:	a5 e3       	ldi	r26, 0x35	; 53
    18f0:	b0 e0       	ldi	r27, 0x00	; 0
    18f2:	e5 e3       	ldi	r30, 0x35	; 53
    18f4:	f0 e0       	ldi	r31, 0x00	; 0
    18f6:	90 81       	ld	r25, Z
    18f8:	8b 81       	ldd	r24, Y+3	; 0x03
    18fa:	89 2b       	or	r24, r25
    18fc:	8c 93       	st	X, r24
    18fe:	11 c0       	rjmp	.+34     	; 0x1922 <DIO_voidWriteLowNibble+0xe4>
			break;
		case DIO_PORTD :
			PORTD_R&=0xf0;
    1900:	a2 e3       	ldi	r26, 0x32	; 50
    1902:	b0 e0       	ldi	r27, 0x00	; 0
    1904:	e2 e3       	ldi	r30, 0x32	; 50
    1906:	f0 e0       	ldi	r31, 0x00	; 0
    1908:	80 81       	ld	r24, Z
    190a:	80 7f       	andi	r24, 0xF0	; 240
    190c:	8c 93       	st	X, r24
			PORTD_R|=COPY_u8Value;
    190e:	a2 e3       	ldi	r26, 0x32	; 50
    1910:	b0 e0       	ldi	r27, 0x00	; 0
    1912:	e2 e3       	ldi	r30, 0x32	; 50
    1914:	f0 e0       	ldi	r31, 0x00	; 0
    1916:	90 81       	ld	r25, Z
    1918:	8b 81       	ldd	r24, Y+3	; 0x03
    191a:	89 2b       	or	r24, r25
    191c:	8c 93       	st	X, r24
    191e:	01 c0       	rjmp	.+2      	; 0x1922 <DIO_voidWriteLowNibble+0xe4>

		}
	}
	else
	{
		LOC_enumStatus = DIO_NOK;
    1920:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumStatus ;
    1922:	89 81       	ldd	r24, Y+1	; 0x01

}
    1924:	0f 90       	pop	r0
    1926:	0f 90       	pop	r0
    1928:	0f 90       	pop	r0
    192a:	0f 90       	pop	r0
    192c:	0f 90       	pop	r0
    192e:	cf 91       	pop	r28
    1930:	df 91       	pop	r29
    1932:	08 95       	ret

00001934 <SSD_VoidIntialDataPin>:
#include "SSD_config.h"

static u8 Local_u8SSDNumbers[10] = SSD_NUMBER_ARR ;

void SSD_VoidIntialDataPin (SSD_Type COPY_StructConfig)
{
    1934:	df 93       	push	r29
    1936:	cf 93       	push	r28
    1938:	00 d0       	rcall	.+0      	; 0x193a <SSD_VoidIntialDataPin+0x6>
    193a:	00 d0       	rcall	.+0      	; 0x193c <SSD_VoidIntialDataPin+0x8>
    193c:	cd b7       	in	r28, 0x3d	; 61
    193e:	de b7       	in	r29, 0x3e	; 62
    1940:	69 83       	std	Y+1, r22	; 0x01
    1942:	7a 83       	std	Y+2, r23	; 0x02
    1944:	8b 83       	std	Y+3, r24	; 0x03
    1946:	9c 83       	std	Y+4, r25	; 0x04
	DIO_eunmSetPortDirection(COPY_StructConfig.DataPort,DIO_PORT_OUTPUT);
    1948:	8a 81       	ldd	r24, Y+2	; 0x02
    194a:	6f ef       	ldi	r22, 0xFF	; 255
    194c:	0e 94 0a 09 	call	0x1214	; 0x1214 <DIO_eunmSetPortDirection>
}
    1950:	0f 90       	pop	r0
    1952:	0f 90       	pop	r0
    1954:	0f 90       	pop	r0
    1956:	0f 90       	pop	r0
    1958:	cf 91       	pop	r28
    195a:	df 91       	pop	r29
    195c:	08 95       	ret

0000195e <SSD_VoidEnable>:
void SSD_VoidEnable        (SSD_Type COPY_StructConfig)
{
    195e:	df 93       	push	r29
    1960:	cf 93       	push	r28
    1962:	00 d0       	rcall	.+0      	; 0x1964 <SSD_VoidEnable+0x6>
    1964:	00 d0       	rcall	.+0      	; 0x1966 <SSD_VoidEnable+0x8>
    1966:	cd b7       	in	r28, 0x3d	; 61
    1968:	de b7       	in	r29, 0x3e	; 62
    196a:	69 83       	std	Y+1, r22	; 0x01
    196c:	7a 83       	std	Y+2, r23	; 0x02
    196e:	8b 83       	std	Y+3, r24	; 0x03
    1970:	9c 83       	std	Y+4, r25	; 0x04
	if(COPY_StructConfig.Type == SSD_CommonCathod)
    1972:	89 81       	ldd	r24, Y+1	; 0x01
    1974:	88 23       	and	r24, r24
    1976:	69 f4       	brne	.+26     	; 0x1992 <SSD_VoidEnable+0x34>
	{
		 DIO_eunmSetPinDirection  (COPY_StructConfig.EnablePort , COPY_StructConfig.EnablePin , DIO_PIN_HIGH);
    1978:	8b 81       	ldd	r24, Y+3	; 0x03
    197a:	9c 81       	ldd	r25, Y+4	; 0x04
    197c:	69 2f       	mov	r22, r25
    197e:	41 e0       	ldi	r20, 0x01	; 1
    1980:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_eunmSetPinDirection>
		 DIO_eunmSetPinValue (COPY_StructConfig.EnablePort,COPY_StructConfig.EnablePin,DIO_PIN_LOW);
    1984:	8b 81       	ldd	r24, Y+3	; 0x03
    1986:	9c 81       	ldd	r25, Y+4	; 0x04
    1988:	69 2f       	mov	r22, r25
    198a:	40 e0       	ldi	r20, 0x00	; 0
    198c:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_eunmSetPinValue>
    1990:	0f c0       	rjmp	.+30     	; 0x19b0 <SSD_VoidEnable+0x52>
	}
	else if (COPY_StructConfig.Type == SSD_CommonAnode)
    1992:	89 81       	ldd	r24, Y+1	; 0x01
    1994:	81 30       	cpi	r24, 0x01	; 1
    1996:	61 f4       	brne	.+24     	; 0x19b0 <SSD_VoidEnable+0x52>
	{
		DIO_eunmSetPinDirection  (COPY_StructConfig.EnablePort , COPY_StructConfig.EnablePin , DIO_PIN_HIGH);
    1998:	8b 81       	ldd	r24, Y+3	; 0x03
    199a:	9c 81       	ldd	r25, Y+4	; 0x04
    199c:	69 2f       	mov	r22, r25
    199e:	41 e0       	ldi	r20, 0x01	; 1
    19a0:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_eunmSetPinDirection>
		 DIO_eunmSetPinValue (COPY_StructConfig.EnablePort,COPY_StructConfig.EnablePin,DIO_PIN_HIGH);
    19a4:	8b 81       	ldd	r24, Y+3	; 0x03
    19a6:	9c 81       	ldd	r25, Y+4	; 0x04
    19a8:	69 2f       	mov	r22, r25
    19aa:	41 e0       	ldi	r20, 0x01	; 1
    19ac:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_eunmSetPinValue>
	}
}
    19b0:	0f 90       	pop	r0
    19b2:	0f 90       	pop	r0
    19b4:	0f 90       	pop	r0
    19b6:	0f 90       	pop	r0
    19b8:	cf 91       	pop	r28
    19ba:	df 91       	pop	r29
    19bc:	08 95       	ret

000019be <SSD_VoidDisable>:
void SSD_VoidDisable       (SSD_Type COPY_StructConfig)
{
    19be:	df 93       	push	r29
    19c0:	cf 93       	push	r28
    19c2:	00 d0       	rcall	.+0      	; 0x19c4 <SSD_VoidDisable+0x6>
    19c4:	00 d0       	rcall	.+0      	; 0x19c6 <SSD_VoidDisable+0x8>
    19c6:	cd b7       	in	r28, 0x3d	; 61
    19c8:	de b7       	in	r29, 0x3e	; 62
    19ca:	69 83       	std	Y+1, r22	; 0x01
    19cc:	7a 83       	std	Y+2, r23	; 0x02
    19ce:	8b 83       	std	Y+3, r24	; 0x03
    19d0:	9c 83       	std	Y+4, r25	; 0x04
	if(COPY_StructConfig.Type == SSD_CommonCathod)
    19d2:	89 81       	ldd	r24, Y+1	; 0x01
    19d4:	88 23       	and	r24, r24
    19d6:	69 f4       	brne	.+26     	; 0x19f2 <SSD_VoidDisable+0x34>
	{
		 DIO_eunmSetPinDirection  (COPY_StructConfig.EnablePort , COPY_StructConfig.EnablePin , DIO_PIN_HIGH);
    19d8:	8b 81       	ldd	r24, Y+3	; 0x03
    19da:	9c 81       	ldd	r25, Y+4	; 0x04
    19dc:	69 2f       	mov	r22, r25
    19de:	41 e0       	ldi	r20, 0x01	; 1
    19e0:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_eunmSetPinDirection>
		 DIO_eunmSetPinValue (COPY_StructConfig.EnablePort,COPY_StructConfig.EnablePin,DIO_PIN_HIGH);
    19e4:	8b 81       	ldd	r24, Y+3	; 0x03
    19e6:	9c 81       	ldd	r25, Y+4	; 0x04
    19e8:	69 2f       	mov	r22, r25
    19ea:	41 e0       	ldi	r20, 0x01	; 1
    19ec:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_eunmSetPinValue>
    19f0:	0f c0       	rjmp	.+30     	; 0x1a10 <SSD_VoidDisable+0x52>
	}
	else if (COPY_StructConfig.Type == SSD_CommonAnode)
    19f2:	89 81       	ldd	r24, Y+1	; 0x01
    19f4:	81 30       	cpi	r24, 0x01	; 1
    19f6:	61 f4       	brne	.+24     	; 0x1a10 <SSD_VoidDisable+0x52>
	{
		DIO_eunmSetPinDirection  (COPY_StructConfig.EnablePort , COPY_StructConfig.EnablePin , DIO_PIN_HIGH);
    19f8:	8b 81       	ldd	r24, Y+3	; 0x03
    19fa:	9c 81       	ldd	r25, Y+4	; 0x04
    19fc:	69 2f       	mov	r22, r25
    19fe:	41 e0       	ldi	r20, 0x01	; 1
    1a00:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_eunmSetPinDirection>
		 DIO_eunmSetPinValue (COPY_StructConfig.EnablePort,COPY_StructConfig.EnablePin,DIO_PIN_LOW);
    1a04:	8b 81       	ldd	r24, Y+3	; 0x03
    1a06:	9c 81       	ldd	r25, Y+4	; 0x04
    1a08:	69 2f       	mov	r22, r25
    1a0a:	40 e0       	ldi	r20, 0x00	; 0
    1a0c:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_eunmSetPinValue>
	}
}
    1a10:	0f 90       	pop	r0
    1a12:	0f 90       	pop	r0
    1a14:	0f 90       	pop	r0
    1a16:	0f 90       	pop	r0
    1a18:	cf 91       	pop	r28
    1a1a:	df 91       	pop	r29
    1a1c:	08 95       	ret

00001a1e <SSD_VoidSendNumber>:
void SSD_VoidSendNumber    (SSD_Type COPY_StructConfig, u8 COPY_u8Number)
{
    1a1e:	df 93       	push	r29
    1a20:	cf 93       	push	r28
    1a22:	00 d0       	rcall	.+0      	; 0x1a24 <SSD_VoidSendNumber+0x6>
    1a24:	00 d0       	rcall	.+0      	; 0x1a26 <SSD_VoidSendNumber+0x8>
    1a26:	0f 92       	push	r0
    1a28:	cd b7       	in	r28, 0x3d	; 61
    1a2a:	de b7       	in	r29, 0x3e	; 62
    1a2c:	69 83       	std	Y+1, r22	; 0x01
    1a2e:	7a 83       	std	Y+2, r23	; 0x02
    1a30:	8b 83       	std	Y+3, r24	; 0x03
    1a32:	9c 83       	std	Y+4, r25	; 0x04
    1a34:	4d 83       	std	Y+5, r20	; 0x05
	if(COPY_StructConfig.Type == SSD_CommonCathod)
    1a36:	89 81       	ldd	r24, Y+1	; 0x01
    1a38:	88 23       	and	r24, r24
    1a3a:	69 f4       	brne	.+26     	; 0x1a56 <SSD_VoidSendNumber+0x38>
	{
		DIO_eunmSetPortValue        (COPY_StructConfig.DataPort , Local_u8SSDNumbers[ COPY_u8Number ]);
    1a3c:	2a 81       	ldd	r18, Y+2	; 0x02
    1a3e:	8d 81       	ldd	r24, Y+5	; 0x05
    1a40:	88 2f       	mov	r24, r24
    1a42:	90 e0       	ldi	r25, 0x00	; 0
    1a44:	fc 01       	movw	r30, r24
    1a46:	e8 59       	subi	r30, 0x98	; 152
    1a48:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4a:	90 81       	ld	r25, Z
    1a4c:	82 2f       	mov	r24, r18
    1a4e:	69 2f       	mov	r22, r25
    1a50:	0e 94 55 09 	call	0x12aa	; 0x12aa <DIO_eunmSetPortValue>
    1a54:	11 c0       	rjmp	.+34     	; 0x1a78 <SSD_VoidSendNumber+0x5a>
	}
	else if (COPY_StructConfig.Type == SSD_CommonAnode)
    1a56:	89 81       	ldd	r24, Y+1	; 0x01
    1a58:	81 30       	cpi	r24, 0x01	; 1
    1a5a:	71 f4       	brne	.+28     	; 0x1a78 <SSD_VoidSendNumber+0x5a>
	{
		 DIO_eunmSetPortValue        (COPY_StructConfig.DataPort , ~(Local_u8SSDNumbers[ COPY_u8Number ]));
    1a5c:	2a 81       	ldd	r18, Y+2	; 0x02
    1a5e:	8d 81       	ldd	r24, Y+5	; 0x05
    1a60:	88 2f       	mov	r24, r24
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	fc 01       	movw	r30, r24
    1a66:	e8 59       	subi	r30, 0x98	; 152
    1a68:	ff 4f       	sbci	r31, 0xFF	; 255
    1a6a:	80 81       	ld	r24, Z
    1a6c:	98 2f       	mov	r25, r24
    1a6e:	90 95       	com	r25
    1a70:	82 2f       	mov	r24, r18
    1a72:	69 2f       	mov	r22, r25
    1a74:	0e 94 55 09 	call	0x12aa	; 0x12aa <DIO_eunmSetPortValue>
	}
	
}
    1a78:	0f 90       	pop	r0
    1a7a:	0f 90       	pop	r0
    1a7c:	0f 90       	pop	r0
    1a7e:	0f 90       	pop	r0
    1a80:	0f 90       	pop	r0
    1a82:	cf 91       	pop	r28
    1a84:	df 91       	pop	r29
    1a86:	08 95       	ret

00001a88 <SW_VoidInital>:
#include "SW_private.h"
#include "SW_interface.h"


void SW_VoidInital (SW_Type SW_Config)
{
    1a88:	df 93       	push	r29
    1a8a:	cf 93       	push	r28
    1a8c:	00 d0       	rcall	.+0      	; 0x1a8e <SW_VoidInital+0x6>
    1a8e:	0f 92       	push	r0
    1a90:	cd b7       	in	r28, 0x3d	; 61
    1a92:	de b7       	in	r29, 0x3e	; 62
    1a94:	69 83       	std	Y+1, r22	; 0x01
    1a96:	7a 83       	std	Y+2, r23	; 0x02
    1a98:	8b 83       	std	Y+3, r24	; 0x03
	DIO_eunmSetPinDirection     (SW_Config.Port ,SW_Config.Pin ,DIO_PIN_INPUT );
    1a9a:	89 81       	ldd	r24, Y+1	; 0x01
    1a9c:	9a 81       	ldd	r25, Y+2	; 0x02
    1a9e:	69 2f       	mov	r22, r25
    1aa0:	40 e0       	ldi	r20, 0x00	; 0
    1aa2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_eunmSetPinDirection>
	
	if(SW_Config.Pull_State == SW_INT_PULL_UP)
    1aa6:	8b 81       	ldd	r24, Y+3	; 0x03
    1aa8:	88 23       	and	r24, r24
    1aaa:	31 f4       	brne	.+12     	; 0x1ab8 <SW_VoidInital+0x30>
	{
		DIO_eunmSetPinInterPullUp     (SW_Config.Port ,SW_Config.Pin ,DIO_PIN_HIGH);
    1aac:	89 81       	ldd	r24, Y+1	; 0x01
    1aae:	9a 81       	ldd	r25, Y+2	; 0x02
    1ab0:	69 2f       	mov	r22, r25
    1ab2:	41 e0       	ldi	r20, 0x01	; 1
    1ab4:	0e 94 4a 0a 	call	0x1494	; 0x1494 <DIO_eunmSetPinInterPullUp>
	}
	
}
    1ab8:	0f 90       	pop	r0
    1aba:	0f 90       	pop	r0
    1abc:	0f 90       	pop	r0
    1abe:	cf 91       	pop	r28
    1ac0:	df 91       	pop	r29
    1ac2:	08 95       	ret

00001ac4 <SW_u8GetPressed>:
u8 SW_u8GetPressed (SW_Type SW_Config)
{
    1ac4:	df 93       	push	r29
    1ac6:	cf 93       	push	r28
    1ac8:	00 d0       	rcall	.+0      	; 0x1aca <SW_u8GetPressed+0x6>
    1aca:	00 d0       	rcall	.+0      	; 0x1acc <SW_u8GetPressed+0x8>
    1acc:	0f 92       	push	r0
    1ace:	cd b7       	in	r28, 0x3d	; 61
    1ad0:	de b7       	in	r29, 0x3e	; 62
    1ad2:	6b 83       	std	Y+3, r22	; 0x03
    1ad4:	7c 83       	std	Y+4, r23	; 0x04
    1ad6:	8d 83       	std	Y+5, r24	; 0x05
	u8 LOC_u8Result = SW_NOT_PRESSED;
    1ad8:	19 82       	std	Y+1, r1	; 0x01
	u8 LOC_u8PinVal = SW_NOT_PRESSED;
    1ada:	1a 82       	std	Y+2, r1	; 0x02
	
	if(SW_Config.Pull_State == SW_INT_PULL_UP || SW_Config.Pull_State == SW_EXT_PULL_UP )
    1adc:	8d 81       	ldd	r24, Y+5	; 0x05
    1ade:	88 23       	and	r24, r24
    1ae0:	19 f0       	breq	.+6      	; 0x1ae8 <SW_u8GetPressed+0x24>
    1ae2:	8d 81       	ldd	r24, Y+5	; 0x05
    1ae4:	81 30       	cpi	r24, 0x01	; 1
    1ae6:	a1 f4       	brne	.+40     	; 0x1b10 <SW_u8GetPressed+0x4c>
	{
		DIO_eunmGetPin (SW_Config.Port ,SW_Config.Pin ,&LOC_u8PinVal);
    1ae8:	8b 81       	ldd	r24, Y+3	; 0x03
    1aea:	9c 81       	ldd	r25, Y+4	; 0x04
    1aec:	9e 01       	movw	r18, r28
    1aee:	2e 5f       	subi	r18, 0xFE	; 254
    1af0:	3f 4f       	sbci	r19, 0xFF	; 255
    1af2:	69 2f       	mov	r22, r25
    1af4:	a9 01       	movw	r20, r18
    1af6:	0e 94 b9 07 	call	0xf72	; 0xf72 <DIO_eunmGetPin>
		if(LOC_u8PinVal==0)
    1afa:	8a 81       	ldd	r24, Y+2	; 0x02
    1afc:	88 23       	and	r24, r24
    1afe:	19 f4       	brne	.+6      	; 0x1b06 <SW_u8GetPressed+0x42>
		{
			LOC_u8Result = SW_PRESSED;
    1b00:	81 e0       	ldi	r24, 0x01	; 1
    1b02:	89 83       	std	Y+1, r24	; 0x01
    1b04:	1b c0       	rjmp	.+54     	; 0x1b3c <SW_u8GetPressed+0x78>
		}
		else if(LOC_u8PinVal==1)
    1b06:	8a 81       	ldd	r24, Y+2	; 0x02
    1b08:	81 30       	cpi	r24, 0x01	; 1
    1b0a:	c1 f4       	brne	.+48     	; 0x1b3c <SW_u8GetPressed+0x78>
		{
			LOC_u8Result = SW_NOT_PRESSED;
    1b0c:	19 82       	std	Y+1, r1	; 0x01
    1b0e:	16 c0       	rjmp	.+44     	; 0x1b3c <SW_u8GetPressed+0x78>
		}
		
		
	}
	else if(SW_Config.Pull_State == SW_EXT_PULL_DOWN )
    1b10:	8d 81       	ldd	r24, Y+5	; 0x05
    1b12:	82 30       	cpi	r24, 0x02	; 2
    1b14:	99 f4       	brne	.+38     	; 0x1b3c <SW_u8GetPressed+0x78>
	{
		DIO_eunmGetPin (SW_Config.Port ,SW_Config.Pin ,&LOC_u8PinVal);
    1b16:	8b 81       	ldd	r24, Y+3	; 0x03
    1b18:	9c 81       	ldd	r25, Y+4	; 0x04
    1b1a:	9e 01       	movw	r18, r28
    1b1c:	2e 5f       	subi	r18, 0xFE	; 254
    1b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b20:	69 2f       	mov	r22, r25
    1b22:	a9 01       	movw	r20, r18
    1b24:	0e 94 b9 07 	call	0xf72	; 0xf72 <DIO_eunmGetPin>
		if(LOC_u8PinVal==0)
    1b28:	8a 81       	ldd	r24, Y+2	; 0x02
    1b2a:	88 23       	and	r24, r24
    1b2c:	11 f4       	brne	.+4      	; 0x1b32 <SW_u8GetPressed+0x6e>
		{
			LOC_u8Result = SW_NOT_PRESSED;
    1b2e:	19 82       	std	Y+1, r1	; 0x01
    1b30:	05 c0       	rjmp	.+10     	; 0x1b3c <SW_u8GetPressed+0x78>
		}
		else if(LOC_u8PinVal==1)
    1b32:	8a 81       	ldd	r24, Y+2	; 0x02
    1b34:	81 30       	cpi	r24, 0x01	; 1
    1b36:	11 f4       	brne	.+4      	; 0x1b3c <SW_u8GetPressed+0x78>
		{
			LOC_u8Result = SW_PRESSED;
    1b38:	81 e0       	ldi	r24, 0x01	; 1
    1b3a:	89 83       	std	Y+1, r24	; 0x01
		}
		
		
	}
	return LOC_u8Result;
    1b3c:	89 81       	ldd	r24, Y+1	; 0x01
}
    1b3e:	0f 90       	pop	r0
    1b40:	0f 90       	pop	r0
    1b42:	0f 90       	pop	r0
    1b44:	0f 90       	pop	r0
    1b46:	0f 90       	pop	r0
    1b48:	cf 91       	pop	r28
    1b4a:	df 91       	pop	r29
    1b4c:	08 95       	ret

00001b4e <main>:
#define DONE 1

#define F_CPU 8000000ul
#include <util/delay.h>
int main (void)
{
    1b4e:	df 93       	push	r29
    1b50:	cf 93       	push	r28
    1b52:	cd b7       	in	r28, 0x3d	; 61
    1b54:	de b7       	in	r29, 0x3e	; 62
    1b56:	c1 5a       	subi	r28, 0xA1	; 161
    1b58:	d0 40       	sbci	r29, 0x00	; 0
    1b5a:	0f b6       	in	r0, 0x3f	; 63
    1b5c:	f8 94       	cli
    1b5e:	de bf       	out	0x3e, r29	; 62
    1b60:	0f be       	out	0x3f, r0	; 63
    1b62:	cd bf       	out	0x3d, r28	; 61
	SW_Type sw0 ={DIO_PORTA,DIO_PIN0,SW_INT_PULL_UP};
    1b64:	9e 01       	movw	r18, r28
    1b66:	2c 5d       	subi	r18, 0xDC	; 220
    1b68:	3f 4f       	sbci	r19, 0xFF	; 255
    1b6a:	6e 96       	adiw	r28, 0x1e	; 30
    1b6c:	3f af       	std	Y+63, r19	; 0x3f
    1b6e:	2e af       	std	Y+62, r18	; 0x3e
    1b70:	6e 97       	sbiw	r28, 0x1e	; 30
    1b72:	87 e8       	ldi	r24, 0x87	; 135
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	a0 96       	adiw	r28, 0x20	; 32
    1b78:	9f af       	std	Y+63, r25	; 0x3f
    1b7a:	8e af       	std	Y+62, r24	; 0x3e
    1b7c:	a0 97       	sbiw	r28, 0x20	; 32
    1b7e:	93 e0       	ldi	r25, 0x03	; 3
    1b80:	a1 96       	adiw	r28, 0x21	; 33
    1b82:	9f af       	std	Y+63, r25	; 0x3f
    1b84:	a1 97       	sbiw	r28, 0x21	; 33
    1b86:	a0 96       	adiw	r28, 0x20	; 32
    1b88:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b8a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b8c:	a0 97       	sbiw	r28, 0x20	; 32
    1b8e:	0c 90       	ld	r0, X
    1b90:	a0 96       	adiw	r28, 0x20	; 32
    1b92:	ee ad       	ldd	r30, Y+62	; 0x3e
    1b94:	ff ad       	ldd	r31, Y+63	; 0x3f
    1b96:	a0 97       	sbiw	r28, 0x20	; 32
    1b98:	31 96       	adiw	r30, 0x01	; 1
    1b9a:	a0 96       	adiw	r28, 0x20	; 32
    1b9c:	ff af       	std	Y+63, r31	; 0x3f
    1b9e:	ee af       	std	Y+62, r30	; 0x3e
    1ba0:	a0 97       	sbiw	r28, 0x20	; 32
    1ba2:	6e 96       	adiw	r28, 0x1e	; 30
    1ba4:	ae ad       	ldd	r26, Y+62	; 0x3e
    1ba6:	bf ad       	ldd	r27, Y+63	; 0x3f
    1ba8:	6e 97       	sbiw	r28, 0x1e	; 30
    1baa:	0c 92       	st	X, r0
    1bac:	6e 96       	adiw	r28, 0x1e	; 30
    1bae:	ee ad       	ldd	r30, Y+62	; 0x3e
    1bb0:	ff ad       	ldd	r31, Y+63	; 0x3f
    1bb2:	6e 97       	sbiw	r28, 0x1e	; 30
    1bb4:	31 96       	adiw	r30, 0x01	; 1
    1bb6:	6e 96       	adiw	r28, 0x1e	; 30
    1bb8:	ff af       	std	Y+63, r31	; 0x3f
    1bba:	ee af       	std	Y+62, r30	; 0x3e
    1bbc:	6e 97       	sbiw	r28, 0x1e	; 30
    1bbe:	a1 96       	adiw	r28, 0x21	; 33
    1bc0:	ff ad       	ldd	r31, Y+63	; 0x3f
    1bc2:	a1 97       	sbiw	r28, 0x21	; 33
    1bc4:	f1 50       	subi	r31, 0x01	; 1
    1bc6:	a1 96       	adiw	r28, 0x21	; 33
    1bc8:	ff af       	std	Y+63, r31	; 0x3f
    1bca:	a1 97       	sbiw	r28, 0x21	; 33
    1bcc:	a1 96       	adiw	r28, 0x21	; 33
    1bce:	2f ad       	ldd	r18, Y+63	; 0x3f
    1bd0:	a1 97       	sbiw	r28, 0x21	; 33
    1bd2:	22 23       	and	r18, r18
    1bd4:	c1 f6       	brne	.-80     	; 0x1b86 <main+0x38>
	SW_Type sw1 ={DIO_PORTA,DIO_PIN1,SW_INT_PULL_UP};
    1bd6:	ce 01       	movw	r24, r28
    1bd8:	87 96       	adiw	r24, 0x27	; 39
    1bda:	a3 96       	adiw	r28, 0x23	; 35
    1bdc:	9f af       	std	Y+63, r25	; 0x3f
    1bde:	8e af       	std	Y+62, r24	; 0x3e
    1be0:	a3 97       	sbiw	r28, 0x23	; 35
    1be2:	a4 e8       	ldi	r26, 0x84	; 132
    1be4:	b0 e0       	ldi	r27, 0x00	; 0
    1be6:	a5 96       	adiw	r28, 0x25	; 37
    1be8:	bf af       	std	Y+63, r27	; 0x3f
    1bea:	ae af       	std	Y+62, r26	; 0x3e
    1bec:	a5 97       	sbiw	r28, 0x25	; 37
    1bee:	b3 e0       	ldi	r27, 0x03	; 3
    1bf0:	a6 96       	adiw	r28, 0x26	; 38
    1bf2:	bf af       	std	Y+63, r27	; 0x3f
    1bf4:	a6 97       	sbiw	r28, 0x26	; 38
    1bf6:	a5 96       	adiw	r28, 0x25	; 37
    1bf8:	ee ad       	ldd	r30, Y+62	; 0x3e
    1bfa:	ff ad       	ldd	r31, Y+63	; 0x3f
    1bfc:	a5 97       	sbiw	r28, 0x25	; 37
    1bfe:	00 80       	ld	r0, Z
    1c00:	a5 96       	adiw	r28, 0x25	; 37
    1c02:	2e ad       	ldd	r18, Y+62	; 0x3e
    1c04:	3f ad       	ldd	r19, Y+63	; 0x3f
    1c06:	a5 97       	sbiw	r28, 0x25	; 37
    1c08:	2f 5f       	subi	r18, 0xFF	; 255
    1c0a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c0c:	a5 96       	adiw	r28, 0x25	; 37
    1c0e:	3f af       	std	Y+63, r19	; 0x3f
    1c10:	2e af       	std	Y+62, r18	; 0x3e
    1c12:	a5 97       	sbiw	r28, 0x25	; 37
    1c14:	a3 96       	adiw	r28, 0x23	; 35
    1c16:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c18:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c1a:	a3 97       	sbiw	r28, 0x23	; 35
    1c1c:	0c 92       	st	X, r0
    1c1e:	a3 96       	adiw	r28, 0x23	; 35
    1c20:	ee ad       	ldd	r30, Y+62	; 0x3e
    1c22:	ff ad       	ldd	r31, Y+63	; 0x3f
    1c24:	a3 97       	sbiw	r28, 0x23	; 35
    1c26:	31 96       	adiw	r30, 0x01	; 1
    1c28:	a3 96       	adiw	r28, 0x23	; 35
    1c2a:	ff af       	std	Y+63, r31	; 0x3f
    1c2c:	ee af       	std	Y+62, r30	; 0x3e
    1c2e:	a3 97       	sbiw	r28, 0x23	; 35
    1c30:	a6 96       	adiw	r28, 0x26	; 38
    1c32:	ff ad       	ldd	r31, Y+63	; 0x3f
    1c34:	a6 97       	sbiw	r28, 0x26	; 38
    1c36:	f1 50       	subi	r31, 0x01	; 1
    1c38:	a6 96       	adiw	r28, 0x26	; 38
    1c3a:	ff af       	std	Y+63, r31	; 0x3f
    1c3c:	a6 97       	sbiw	r28, 0x26	; 38
    1c3e:	a6 96       	adiw	r28, 0x26	; 38
    1c40:	2f ad       	ldd	r18, Y+63	; 0x3f
    1c42:	a6 97       	sbiw	r28, 0x26	; 38
    1c44:	22 23       	and	r18, r18
    1c46:	b9 f6       	brne	.-82     	; 0x1bf6 <main+0xa8>
	SW_Type sw2 ={DIO_PORTA,DIO_PIN2,SW_INT_PULL_UP};
    1c48:	ce 01       	movw	r24, r28
    1c4a:	8a 96       	adiw	r24, 0x2a	; 42
    1c4c:	a8 96       	adiw	r28, 0x28	; 40
    1c4e:	9f af       	std	Y+63, r25	; 0x3f
    1c50:	8e af       	std	Y+62, r24	; 0x3e
    1c52:	a8 97       	sbiw	r28, 0x28	; 40
    1c54:	a1 e8       	ldi	r26, 0x81	; 129
    1c56:	b0 e0       	ldi	r27, 0x00	; 0
    1c58:	aa 96       	adiw	r28, 0x2a	; 42
    1c5a:	bf af       	std	Y+63, r27	; 0x3f
    1c5c:	ae af       	std	Y+62, r26	; 0x3e
    1c5e:	aa 97       	sbiw	r28, 0x2a	; 42
    1c60:	b3 e0       	ldi	r27, 0x03	; 3
    1c62:	ab 96       	adiw	r28, 0x2b	; 43
    1c64:	bf af       	std	Y+63, r27	; 0x3f
    1c66:	ab 97       	sbiw	r28, 0x2b	; 43
    1c68:	aa 96       	adiw	r28, 0x2a	; 42
    1c6a:	ee ad       	ldd	r30, Y+62	; 0x3e
    1c6c:	ff ad       	ldd	r31, Y+63	; 0x3f
    1c6e:	aa 97       	sbiw	r28, 0x2a	; 42
    1c70:	00 80       	ld	r0, Z
    1c72:	aa 96       	adiw	r28, 0x2a	; 42
    1c74:	2e ad       	ldd	r18, Y+62	; 0x3e
    1c76:	3f ad       	ldd	r19, Y+63	; 0x3f
    1c78:	aa 97       	sbiw	r28, 0x2a	; 42
    1c7a:	2f 5f       	subi	r18, 0xFF	; 255
    1c7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c7e:	aa 96       	adiw	r28, 0x2a	; 42
    1c80:	3f af       	std	Y+63, r19	; 0x3f
    1c82:	2e af       	std	Y+62, r18	; 0x3e
    1c84:	aa 97       	sbiw	r28, 0x2a	; 42
    1c86:	a8 96       	adiw	r28, 0x28	; 40
    1c88:	ae ad       	ldd	r26, Y+62	; 0x3e
    1c8a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1c8c:	a8 97       	sbiw	r28, 0x28	; 40
    1c8e:	0c 92       	st	X, r0
    1c90:	a8 96       	adiw	r28, 0x28	; 40
    1c92:	ee ad       	ldd	r30, Y+62	; 0x3e
    1c94:	ff ad       	ldd	r31, Y+63	; 0x3f
    1c96:	a8 97       	sbiw	r28, 0x28	; 40
    1c98:	31 96       	adiw	r30, 0x01	; 1
    1c9a:	a8 96       	adiw	r28, 0x28	; 40
    1c9c:	ff af       	std	Y+63, r31	; 0x3f
    1c9e:	ee af       	std	Y+62, r30	; 0x3e
    1ca0:	a8 97       	sbiw	r28, 0x28	; 40
    1ca2:	ab 96       	adiw	r28, 0x2b	; 43
    1ca4:	ff ad       	ldd	r31, Y+63	; 0x3f
    1ca6:	ab 97       	sbiw	r28, 0x2b	; 43
    1ca8:	f1 50       	subi	r31, 0x01	; 1
    1caa:	ab 96       	adiw	r28, 0x2b	; 43
    1cac:	ff af       	std	Y+63, r31	; 0x3f
    1cae:	ab 97       	sbiw	r28, 0x2b	; 43
    1cb0:	ab 96       	adiw	r28, 0x2b	; 43
    1cb2:	2f ad       	ldd	r18, Y+63	; 0x3f
    1cb4:	ab 97       	sbiw	r28, 0x2b	; 43
    1cb6:	22 23       	and	r18, r18
    1cb8:	b9 f6       	brne	.-82     	; 0x1c68 <main+0x11a>
	SW_Type sw3 ={DIO_PORTA,DIO_PIN3,SW_INT_PULL_UP};
    1cba:	ce 01       	movw	r24, r28
    1cbc:	8d 96       	adiw	r24, 0x2d	; 45
    1cbe:	ad 96       	adiw	r28, 0x2d	; 45
    1cc0:	9f af       	std	Y+63, r25	; 0x3f
    1cc2:	8e af       	std	Y+62, r24	; 0x3e
    1cc4:	ad 97       	sbiw	r28, 0x2d	; 45
    1cc6:	ae e7       	ldi	r26, 0x7E	; 126
    1cc8:	b0 e0       	ldi	r27, 0x00	; 0
    1cca:	af 96       	adiw	r28, 0x2f	; 47
    1ccc:	bf af       	std	Y+63, r27	; 0x3f
    1cce:	ae af       	std	Y+62, r26	; 0x3e
    1cd0:	af 97       	sbiw	r28, 0x2f	; 47
    1cd2:	b3 e0       	ldi	r27, 0x03	; 3
    1cd4:	e0 96       	adiw	r28, 0x30	; 48
    1cd6:	bf af       	std	Y+63, r27	; 0x3f
    1cd8:	e0 97       	sbiw	r28, 0x30	; 48
    1cda:	af 96       	adiw	r28, 0x2f	; 47
    1cdc:	ee ad       	ldd	r30, Y+62	; 0x3e
    1cde:	ff ad       	ldd	r31, Y+63	; 0x3f
    1ce0:	af 97       	sbiw	r28, 0x2f	; 47
    1ce2:	00 80       	ld	r0, Z
    1ce4:	af 96       	adiw	r28, 0x2f	; 47
    1ce6:	2e ad       	ldd	r18, Y+62	; 0x3e
    1ce8:	3f ad       	ldd	r19, Y+63	; 0x3f
    1cea:	af 97       	sbiw	r28, 0x2f	; 47
    1cec:	2f 5f       	subi	r18, 0xFF	; 255
    1cee:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf0:	af 96       	adiw	r28, 0x2f	; 47
    1cf2:	3f af       	std	Y+63, r19	; 0x3f
    1cf4:	2e af       	std	Y+62, r18	; 0x3e
    1cf6:	af 97       	sbiw	r28, 0x2f	; 47
    1cf8:	ad 96       	adiw	r28, 0x2d	; 45
    1cfa:	ae ad       	ldd	r26, Y+62	; 0x3e
    1cfc:	bf ad       	ldd	r27, Y+63	; 0x3f
    1cfe:	ad 97       	sbiw	r28, 0x2d	; 45
    1d00:	0c 92       	st	X, r0
    1d02:	ad 96       	adiw	r28, 0x2d	; 45
    1d04:	ee ad       	ldd	r30, Y+62	; 0x3e
    1d06:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d08:	ad 97       	sbiw	r28, 0x2d	; 45
    1d0a:	31 96       	adiw	r30, 0x01	; 1
    1d0c:	ad 96       	adiw	r28, 0x2d	; 45
    1d0e:	ff af       	std	Y+63, r31	; 0x3f
    1d10:	ee af       	std	Y+62, r30	; 0x3e
    1d12:	ad 97       	sbiw	r28, 0x2d	; 45
    1d14:	e0 96       	adiw	r28, 0x30	; 48
    1d16:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d18:	e0 97       	sbiw	r28, 0x30	; 48
    1d1a:	f1 50       	subi	r31, 0x01	; 1
    1d1c:	e0 96       	adiw	r28, 0x30	; 48
    1d1e:	ff af       	std	Y+63, r31	; 0x3f
    1d20:	e0 97       	sbiw	r28, 0x30	; 48
    1d22:	e0 96       	adiw	r28, 0x30	; 48
    1d24:	2f ad       	ldd	r18, Y+63	; 0x3f
    1d26:	e0 97       	sbiw	r28, 0x30	; 48
    1d28:	22 23       	and	r18, r18
    1d2a:	b9 f6       	brne	.-82     	; 0x1cda <main+0x18c>
	SW_Type sw4 ={DIO_PORTA,DIO_PIN4,SW_INT_PULL_UP};
    1d2c:	ce 01       	movw	r24, r28
    1d2e:	c0 96       	adiw	r24, 0x30	; 48
    1d30:	e2 96       	adiw	r28, 0x32	; 50
    1d32:	9f af       	std	Y+63, r25	; 0x3f
    1d34:	8e af       	std	Y+62, r24	; 0x3e
    1d36:	e2 97       	sbiw	r28, 0x32	; 50
    1d38:	ab e7       	ldi	r26, 0x7B	; 123
    1d3a:	b0 e0       	ldi	r27, 0x00	; 0
    1d3c:	e4 96       	adiw	r28, 0x34	; 52
    1d3e:	bf af       	std	Y+63, r27	; 0x3f
    1d40:	ae af       	std	Y+62, r26	; 0x3e
    1d42:	e4 97       	sbiw	r28, 0x34	; 52
    1d44:	b3 e0       	ldi	r27, 0x03	; 3
    1d46:	e5 96       	adiw	r28, 0x35	; 53
    1d48:	bf af       	std	Y+63, r27	; 0x3f
    1d4a:	e5 97       	sbiw	r28, 0x35	; 53
    1d4c:	e4 96       	adiw	r28, 0x34	; 52
    1d4e:	ee ad       	ldd	r30, Y+62	; 0x3e
    1d50:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d52:	e4 97       	sbiw	r28, 0x34	; 52
    1d54:	00 80       	ld	r0, Z
    1d56:	e4 96       	adiw	r28, 0x34	; 52
    1d58:	2e ad       	ldd	r18, Y+62	; 0x3e
    1d5a:	3f ad       	ldd	r19, Y+63	; 0x3f
    1d5c:	e4 97       	sbiw	r28, 0x34	; 52
    1d5e:	2f 5f       	subi	r18, 0xFF	; 255
    1d60:	3f 4f       	sbci	r19, 0xFF	; 255
    1d62:	e4 96       	adiw	r28, 0x34	; 52
    1d64:	3f af       	std	Y+63, r19	; 0x3f
    1d66:	2e af       	std	Y+62, r18	; 0x3e
    1d68:	e4 97       	sbiw	r28, 0x34	; 52
    1d6a:	e2 96       	adiw	r28, 0x32	; 50
    1d6c:	ae ad       	ldd	r26, Y+62	; 0x3e
    1d6e:	bf ad       	ldd	r27, Y+63	; 0x3f
    1d70:	e2 97       	sbiw	r28, 0x32	; 50
    1d72:	0c 92       	st	X, r0
    1d74:	e2 96       	adiw	r28, 0x32	; 50
    1d76:	ee ad       	ldd	r30, Y+62	; 0x3e
    1d78:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d7a:	e2 97       	sbiw	r28, 0x32	; 50
    1d7c:	31 96       	adiw	r30, 0x01	; 1
    1d7e:	e2 96       	adiw	r28, 0x32	; 50
    1d80:	ff af       	std	Y+63, r31	; 0x3f
    1d82:	ee af       	std	Y+62, r30	; 0x3e
    1d84:	e2 97       	sbiw	r28, 0x32	; 50
    1d86:	e5 96       	adiw	r28, 0x35	; 53
    1d88:	ff ad       	ldd	r31, Y+63	; 0x3f
    1d8a:	e5 97       	sbiw	r28, 0x35	; 53
    1d8c:	f1 50       	subi	r31, 0x01	; 1
    1d8e:	e5 96       	adiw	r28, 0x35	; 53
    1d90:	ff af       	std	Y+63, r31	; 0x3f
    1d92:	e5 97       	sbiw	r28, 0x35	; 53
    1d94:	e5 96       	adiw	r28, 0x35	; 53
    1d96:	2f ad       	ldd	r18, Y+63	; 0x3f
    1d98:	e5 97       	sbiw	r28, 0x35	; 53
    1d9a:	22 23       	and	r18, r18
    1d9c:	b9 f6       	brne	.-82     	; 0x1d4c <main+0x1fe>
	SW_Type sw5 ={DIO_PORTA,DIO_PIN5,SW_INT_PULL_UP};
    1d9e:	ce 01       	movw	r24, r28
    1da0:	c3 96       	adiw	r24, 0x33	; 51
    1da2:	e7 96       	adiw	r28, 0x37	; 55
    1da4:	9f af       	std	Y+63, r25	; 0x3f
    1da6:	8e af       	std	Y+62, r24	; 0x3e
    1da8:	e7 97       	sbiw	r28, 0x37	; 55
    1daa:	a8 e7       	ldi	r26, 0x78	; 120
    1dac:	b0 e0       	ldi	r27, 0x00	; 0
    1dae:	e9 96       	adiw	r28, 0x39	; 57
    1db0:	bf af       	std	Y+63, r27	; 0x3f
    1db2:	ae af       	std	Y+62, r26	; 0x3e
    1db4:	e9 97       	sbiw	r28, 0x39	; 57
    1db6:	b3 e0       	ldi	r27, 0x03	; 3
    1db8:	ea 96       	adiw	r28, 0x3a	; 58
    1dba:	bf af       	std	Y+63, r27	; 0x3f
    1dbc:	ea 97       	sbiw	r28, 0x3a	; 58
    1dbe:	e9 96       	adiw	r28, 0x39	; 57
    1dc0:	ee ad       	ldd	r30, Y+62	; 0x3e
    1dc2:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dc4:	e9 97       	sbiw	r28, 0x39	; 57
    1dc6:	00 80       	ld	r0, Z
    1dc8:	e9 96       	adiw	r28, 0x39	; 57
    1dca:	2e ad       	ldd	r18, Y+62	; 0x3e
    1dcc:	3f ad       	ldd	r19, Y+63	; 0x3f
    1dce:	e9 97       	sbiw	r28, 0x39	; 57
    1dd0:	2f 5f       	subi	r18, 0xFF	; 255
    1dd2:	3f 4f       	sbci	r19, 0xFF	; 255
    1dd4:	e9 96       	adiw	r28, 0x39	; 57
    1dd6:	3f af       	std	Y+63, r19	; 0x3f
    1dd8:	2e af       	std	Y+62, r18	; 0x3e
    1dda:	e9 97       	sbiw	r28, 0x39	; 57
    1ddc:	e7 96       	adiw	r28, 0x37	; 55
    1dde:	ae ad       	ldd	r26, Y+62	; 0x3e
    1de0:	bf ad       	ldd	r27, Y+63	; 0x3f
    1de2:	e7 97       	sbiw	r28, 0x37	; 55
    1de4:	0c 92       	st	X, r0
    1de6:	e7 96       	adiw	r28, 0x37	; 55
    1de8:	ee ad       	ldd	r30, Y+62	; 0x3e
    1dea:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dec:	e7 97       	sbiw	r28, 0x37	; 55
    1dee:	31 96       	adiw	r30, 0x01	; 1
    1df0:	e7 96       	adiw	r28, 0x37	; 55
    1df2:	ff af       	std	Y+63, r31	; 0x3f
    1df4:	ee af       	std	Y+62, r30	; 0x3e
    1df6:	e7 97       	sbiw	r28, 0x37	; 55
    1df8:	ea 96       	adiw	r28, 0x3a	; 58
    1dfa:	ff ad       	ldd	r31, Y+63	; 0x3f
    1dfc:	ea 97       	sbiw	r28, 0x3a	; 58
    1dfe:	f1 50       	subi	r31, 0x01	; 1
    1e00:	ea 96       	adiw	r28, 0x3a	; 58
    1e02:	ff af       	std	Y+63, r31	; 0x3f
    1e04:	ea 97       	sbiw	r28, 0x3a	; 58
    1e06:	ea 96       	adiw	r28, 0x3a	; 58
    1e08:	2f ad       	ldd	r18, Y+63	; 0x3f
    1e0a:	ea 97       	sbiw	r28, 0x3a	; 58
    1e0c:	22 23       	and	r18, r18
    1e0e:	b9 f6       	brne	.-82     	; 0x1dbe <main+0x270>
	SW_Type sw6 ={DIO_PORTA,DIO_PIN6,SW_INT_PULL_UP};
    1e10:	ce 01       	movw	r24, r28
    1e12:	c6 96       	adiw	r24, 0x36	; 54
    1e14:	ec 96       	adiw	r28, 0x3c	; 60
    1e16:	9f af       	std	Y+63, r25	; 0x3f
    1e18:	8e af       	std	Y+62, r24	; 0x3e
    1e1a:	ec 97       	sbiw	r28, 0x3c	; 60
    1e1c:	a5 e7       	ldi	r26, 0x75	; 117
    1e1e:	b0 e0       	ldi	r27, 0x00	; 0
    1e20:	ee 96       	adiw	r28, 0x3e	; 62
    1e22:	bf af       	std	Y+63, r27	; 0x3f
    1e24:	ae af       	std	Y+62, r26	; 0x3e
    1e26:	ee 97       	sbiw	r28, 0x3e	; 62
    1e28:	b3 e0       	ldi	r27, 0x03	; 3
    1e2a:	ef 96       	adiw	r28, 0x3f	; 63
    1e2c:	bf af       	std	Y+63, r27	; 0x3f
    1e2e:	ef 97       	sbiw	r28, 0x3f	; 63
    1e30:	ee 96       	adiw	r28, 0x3e	; 62
    1e32:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e34:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e36:	ee 97       	sbiw	r28, 0x3e	; 62
    1e38:	00 80       	ld	r0, Z
    1e3a:	ee 96       	adiw	r28, 0x3e	; 62
    1e3c:	2e ad       	ldd	r18, Y+62	; 0x3e
    1e3e:	3f ad       	ldd	r19, Y+63	; 0x3f
    1e40:	ee 97       	sbiw	r28, 0x3e	; 62
    1e42:	2f 5f       	subi	r18, 0xFF	; 255
    1e44:	3f 4f       	sbci	r19, 0xFF	; 255
    1e46:	ee 96       	adiw	r28, 0x3e	; 62
    1e48:	3f af       	std	Y+63, r19	; 0x3f
    1e4a:	2e af       	std	Y+62, r18	; 0x3e
    1e4c:	ee 97       	sbiw	r28, 0x3e	; 62
    1e4e:	ec 96       	adiw	r28, 0x3c	; 60
    1e50:	ae ad       	ldd	r26, Y+62	; 0x3e
    1e52:	bf ad       	ldd	r27, Y+63	; 0x3f
    1e54:	ec 97       	sbiw	r28, 0x3c	; 60
    1e56:	0c 92       	st	X, r0
    1e58:	ec 96       	adiw	r28, 0x3c	; 60
    1e5a:	ee ad       	ldd	r30, Y+62	; 0x3e
    1e5c:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e5e:	ec 97       	sbiw	r28, 0x3c	; 60
    1e60:	31 96       	adiw	r30, 0x01	; 1
    1e62:	ec 96       	adiw	r28, 0x3c	; 60
    1e64:	ff af       	std	Y+63, r31	; 0x3f
    1e66:	ee af       	std	Y+62, r30	; 0x3e
    1e68:	ec 97       	sbiw	r28, 0x3c	; 60
    1e6a:	ef 96       	adiw	r28, 0x3f	; 63
    1e6c:	ff ad       	ldd	r31, Y+63	; 0x3f
    1e6e:	ef 97       	sbiw	r28, 0x3f	; 63
    1e70:	f1 50       	subi	r31, 0x01	; 1
    1e72:	ef 96       	adiw	r28, 0x3f	; 63
    1e74:	ff af       	std	Y+63, r31	; 0x3f
    1e76:	ef 97       	sbiw	r28, 0x3f	; 63
    1e78:	ef 96       	adiw	r28, 0x3f	; 63
    1e7a:	2f ad       	ldd	r18, Y+63	; 0x3f
    1e7c:	ef 97       	sbiw	r28, 0x3f	; 63
    1e7e:	22 23       	and	r18, r18
    1e80:	b9 f6       	brne	.-82     	; 0x1e30 <main+0x2e2>
	SW_Type sw7 ={DIO_PORTA,DIO_PIN7,SW_INT_PULL_UP};
    1e82:	ce 01       	movw	r24, r28
    1e84:	c9 96       	adiw	r24, 0x39	; 57
    1e86:	c1 58       	subi	r28, 0x81	; 129
    1e88:	df 4f       	sbci	r29, 0xFF	; 255
    1e8a:	99 83       	std	Y+1, r25	; 0x01
    1e8c:	88 83       	st	Y, r24
    1e8e:	cf 57       	subi	r28, 0x7F	; 127
    1e90:	d0 40       	sbci	r29, 0x00	; 0
    1e92:	a2 e7       	ldi	r26, 0x72	; 114
    1e94:	b0 e0       	ldi	r27, 0x00	; 0
    1e96:	cf 57       	subi	r28, 0x7F	; 127
    1e98:	df 4f       	sbci	r29, 0xFF	; 255
    1e9a:	b9 83       	std	Y+1, r27	; 0x01
    1e9c:	a8 83       	st	Y, r26
    1e9e:	c1 58       	subi	r28, 0x81	; 129
    1ea0:	d0 40       	sbci	r29, 0x00	; 0
    1ea2:	b3 e0       	ldi	r27, 0x03	; 3
    1ea4:	cd 57       	subi	r28, 0x7D	; 125
    1ea6:	df 4f       	sbci	r29, 0xFF	; 255
    1ea8:	b8 83       	st	Y, r27
    1eaa:	c3 58       	subi	r28, 0x83	; 131
    1eac:	d0 40       	sbci	r29, 0x00	; 0
    1eae:	cf 57       	subi	r28, 0x7F	; 127
    1eb0:	df 4f       	sbci	r29, 0xFF	; 255
    1eb2:	e8 81       	ld	r30, Y
    1eb4:	f9 81       	ldd	r31, Y+1	; 0x01
    1eb6:	c1 58       	subi	r28, 0x81	; 129
    1eb8:	d0 40       	sbci	r29, 0x00	; 0
    1eba:	00 80       	ld	r0, Z
    1ebc:	cf 57       	subi	r28, 0x7F	; 127
    1ebe:	df 4f       	sbci	r29, 0xFF	; 255
    1ec0:	28 81       	ld	r18, Y
    1ec2:	39 81       	ldd	r19, Y+1	; 0x01
    1ec4:	c1 58       	subi	r28, 0x81	; 129
    1ec6:	d0 40       	sbci	r29, 0x00	; 0
    1ec8:	2f 5f       	subi	r18, 0xFF	; 255
    1eca:	3f 4f       	sbci	r19, 0xFF	; 255
    1ecc:	cf 57       	subi	r28, 0x7F	; 127
    1ece:	df 4f       	sbci	r29, 0xFF	; 255
    1ed0:	39 83       	std	Y+1, r19	; 0x01
    1ed2:	28 83       	st	Y, r18
    1ed4:	c1 58       	subi	r28, 0x81	; 129
    1ed6:	d0 40       	sbci	r29, 0x00	; 0
    1ed8:	c1 58       	subi	r28, 0x81	; 129
    1eda:	df 4f       	sbci	r29, 0xFF	; 255
    1edc:	a8 81       	ld	r26, Y
    1ede:	b9 81       	ldd	r27, Y+1	; 0x01
    1ee0:	cf 57       	subi	r28, 0x7F	; 127
    1ee2:	d0 40       	sbci	r29, 0x00	; 0
    1ee4:	0c 92       	st	X, r0
    1ee6:	c1 58       	subi	r28, 0x81	; 129
    1ee8:	df 4f       	sbci	r29, 0xFF	; 255
    1eea:	e8 81       	ld	r30, Y
    1eec:	f9 81       	ldd	r31, Y+1	; 0x01
    1eee:	cf 57       	subi	r28, 0x7F	; 127
    1ef0:	d0 40       	sbci	r29, 0x00	; 0
    1ef2:	31 96       	adiw	r30, 0x01	; 1
    1ef4:	c1 58       	subi	r28, 0x81	; 129
    1ef6:	df 4f       	sbci	r29, 0xFF	; 255
    1ef8:	f9 83       	std	Y+1, r31	; 0x01
    1efa:	e8 83       	st	Y, r30
    1efc:	cf 57       	subi	r28, 0x7F	; 127
    1efe:	d0 40       	sbci	r29, 0x00	; 0
    1f00:	cd 57       	subi	r28, 0x7D	; 125
    1f02:	df 4f       	sbci	r29, 0xFF	; 255
    1f04:	f8 81       	ld	r31, Y
    1f06:	c3 58       	subi	r28, 0x83	; 131
    1f08:	d0 40       	sbci	r29, 0x00	; 0
    1f0a:	f1 50       	subi	r31, 0x01	; 1
    1f0c:	cd 57       	subi	r28, 0x7D	; 125
    1f0e:	df 4f       	sbci	r29, 0xFF	; 255
    1f10:	f8 83       	st	Y, r31
    1f12:	c3 58       	subi	r28, 0x83	; 131
    1f14:	d0 40       	sbci	r29, 0x00	; 0
    1f16:	cd 57       	subi	r28, 0x7D	; 125
    1f18:	df 4f       	sbci	r29, 0xFF	; 255
    1f1a:	28 81       	ld	r18, Y
    1f1c:	c3 58       	subi	r28, 0x83	; 131
    1f1e:	d0 40       	sbci	r29, 0x00	; 0
    1f20:	22 23       	and	r18, r18
    1f22:	29 f6       	brne	.-118    	; 0x1eae <main+0x360>

	SSD_Type ssd0 = {SSD_CommonCathod,SSD_PORTD,SSD_PORTC,SSD_PIN0};
    1f24:	1c ae       	std	Y+60, r1	; 0x3c
    1f26:	83 e0       	ldi	r24, 0x03	; 3
    1f28:	8d af       	std	Y+61, r24	; 0x3d
    1f2a:	82 e0       	ldi	r24, 0x02	; 2
    1f2c:	8e af       	std	Y+62, r24	; 0x3e
    1f2e:	1f ae       	std	Y+63, r1	; 0x3f
	SSD_Type ssd1 = {SSD_CommonCathod,SSD_PORTD,SSD_PORTC,SSD_PIN1};
    1f30:	fe 01       	movw	r30, r28
    1f32:	e0 5c       	subi	r30, 0xC0	; 192
    1f34:	ff 4f       	sbci	r31, 0xFF	; 255
    1f36:	10 82       	st	Z, r1
    1f38:	fe 01       	movw	r30, r28
    1f3a:	e0 5c       	subi	r30, 0xC0	; 192
    1f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3e:	83 e0       	ldi	r24, 0x03	; 3
    1f40:	81 83       	std	Z+1, r24	; 0x01
    1f42:	fe 01       	movw	r30, r28
    1f44:	e0 5c       	subi	r30, 0xC0	; 192
    1f46:	ff 4f       	sbci	r31, 0xFF	; 255
    1f48:	82 e0       	ldi	r24, 0x02	; 2
    1f4a:	82 83       	std	Z+2, r24	; 0x02
    1f4c:	fe 01       	movw	r30, r28
    1f4e:	e0 5c       	subi	r30, 0xC0	; 192
    1f50:	ff 4f       	sbci	r31, 0xFF	; 255
    1f52:	81 e0       	ldi	r24, 0x01	; 1
    1f54:	83 83       	std	Z+3, r24	; 0x03

	SW_VoidInital(sw0);
    1f56:	6c a1       	ldd	r22, Y+36	; 0x24
    1f58:	7d a1       	ldd	r23, Y+37	; 0x25
    1f5a:	8e a1       	ldd	r24, Y+38	; 0x26
    1f5c:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <SW_VoidInital>
	SW_VoidInital(sw1);
    1f60:	6f a1       	ldd	r22, Y+39	; 0x27
    1f62:	78 a5       	ldd	r23, Y+40	; 0x28
    1f64:	89 a5       	ldd	r24, Y+41	; 0x29
    1f66:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <SW_VoidInital>
	SW_VoidInital(sw2);
    1f6a:	6a a5       	ldd	r22, Y+42	; 0x2a
    1f6c:	7b a5       	ldd	r23, Y+43	; 0x2b
    1f6e:	8c a5       	ldd	r24, Y+44	; 0x2c
    1f70:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <SW_VoidInital>
	SW_VoidInital(sw3);
    1f74:	6d a5       	ldd	r22, Y+45	; 0x2d
    1f76:	7e a5       	ldd	r23, Y+46	; 0x2e
    1f78:	8f a5       	ldd	r24, Y+47	; 0x2f
    1f7a:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <SW_VoidInital>
	SW_VoidInital(sw4);
    1f7e:	68 a9       	ldd	r22, Y+48	; 0x30
    1f80:	79 a9       	ldd	r23, Y+49	; 0x31
    1f82:	8a a9       	ldd	r24, Y+50	; 0x32
    1f84:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <SW_VoidInital>
	SW_VoidInital(sw5);
    1f88:	6b a9       	ldd	r22, Y+51	; 0x33
    1f8a:	7c a9       	ldd	r23, Y+52	; 0x34
    1f8c:	8d a9       	ldd	r24, Y+53	; 0x35
    1f8e:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <SW_VoidInital>
	SW_VoidInital(sw6);
    1f92:	6e a9       	ldd	r22, Y+54	; 0x36
    1f94:	7f a9       	ldd	r23, Y+55	; 0x37
    1f96:	88 ad       	ldd	r24, Y+56	; 0x38
    1f98:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <SW_VoidInital>
	SW_VoidInital(sw7);
    1f9c:	69 ad       	ldd	r22, Y+57	; 0x39
    1f9e:	7a ad       	ldd	r23, Y+58	; 0x3a
    1fa0:	8b ad       	ldd	r24, Y+59	; 0x3b
    1fa2:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <SW_VoidInital>

	SSD_VoidIntialDataPin(ssd0);
    1fa6:	8c ad       	ldd	r24, Y+60	; 0x3c
    1fa8:	9d ad       	ldd	r25, Y+61	; 0x3d
    1faa:	ae ad       	ldd	r26, Y+62	; 0x3e
    1fac:	bf ad       	ldd	r27, Y+63	; 0x3f
    1fae:	bc 01       	movw	r22, r24
    1fb0:	cd 01       	movw	r24, r26
    1fb2:	0e 94 9a 0c 	call	0x1934	; 0x1934 <SSD_VoidIntialDataPin>
	SSD_VoidIntialDataPin(ssd1);
    1fb6:	fe 01       	movw	r30, r28
    1fb8:	e0 5c       	subi	r30, 0xC0	; 192
    1fba:	ff 4f       	sbci	r31, 0xFF	; 255
    1fbc:	80 81       	ld	r24, Z
    1fbe:	91 81       	ldd	r25, Z+1	; 0x01
    1fc0:	a2 81       	ldd	r26, Z+2	; 0x02
    1fc2:	b3 81       	ldd	r27, Z+3	; 0x03
    1fc4:	bc 01       	movw	r22, r24
    1fc6:	cd 01       	movw	r24, r26
    1fc8:	0e 94 9a 0c 	call	0x1934	; 0x1934 <SSD_VoidIntialDataPin>

	u8 x,y,value;
	SW_Type arrx[]={sw0,sw1,sw2};
    1fcc:	ce 01       	movw	r24, r28
    1fce:	8c 5b       	subi	r24, 0xBC	; 188
    1fd0:	9f 4f       	sbci	r25, 0xFF	; 255
    1fd2:	29 e0       	ldi	r18, 0x09	; 9
    1fd4:	fc 01       	movw	r30, r24
    1fd6:	df 01       	movw	r26, r30
    1fd8:	32 2f       	mov	r19, r18
    1fda:	1d 92       	st	X+, r1
    1fdc:	3a 95       	dec	r19
    1fde:	e9 f7       	brne	.-6      	; 0x1fda <main+0x48c>
    1fe0:	ce 01       	movw	r24, r28
    1fe2:	8c 5b       	subi	r24, 0xBC	; 188
    1fe4:	9f 4f       	sbci	r25, 0xFF	; 255
    1fe6:	cc 57       	subi	r28, 0x7C	; 124
    1fe8:	df 4f       	sbci	r29, 0xFF	; 255
    1fea:	99 83       	std	Y+1, r25	; 0x01
    1fec:	88 83       	st	Y, r24
    1fee:	c4 58       	subi	r28, 0x84	; 132
    1ff0:	d0 40       	sbci	r29, 0x00	; 0
    1ff2:	ce 01       	movw	r24, r28
    1ff4:	84 96       	adiw	r24, 0x24	; 36
    1ff6:	ca 57       	subi	r28, 0x7A	; 122
    1ff8:	df 4f       	sbci	r29, 0xFF	; 255
    1ffa:	99 83       	std	Y+1, r25	; 0x01
    1ffc:	88 83       	st	Y, r24
    1ffe:	c6 58       	subi	r28, 0x86	; 134
    2000:	d0 40       	sbci	r29, 0x00	; 0
    2002:	93 e0       	ldi	r25, 0x03	; 3
    2004:	c8 57       	subi	r28, 0x78	; 120
    2006:	df 4f       	sbci	r29, 0xFF	; 255
    2008:	98 83       	st	Y, r25
    200a:	c8 58       	subi	r28, 0x88	; 136
    200c:	d0 40       	sbci	r29, 0x00	; 0
    200e:	ca 57       	subi	r28, 0x7A	; 122
    2010:	df 4f       	sbci	r29, 0xFF	; 255
    2012:	a8 81       	ld	r26, Y
    2014:	b9 81       	ldd	r27, Y+1	; 0x01
    2016:	c6 58       	subi	r28, 0x86	; 134
    2018:	d0 40       	sbci	r29, 0x00	; 0
    201a:	0c 90       	ld	r0, X
    201c:	ca 57       	subi	r28, 0x7A	; 122
    201e:	df 4f       	sbci	r29, 0xFF	; 255
    2020:	e8 81       	ld	r30, Y
    2022:	f9 81       	ldd	r31, Y+1	; 0x01
    2024:	c6 58       	subi	r28, 0x86	; 134
    2026:	d0 40       	sbci	r29, 0x00	; 0
    2028:	31 96       	adiw	r30, 0x01	; 1
    202a:	ca 57       	subi	r28, 0x7A	; 122
    202c:	df 4f       	sbci	r29, 0xFF	; 255
    202e:	f9 83       	std	Y+1, r31	; 0x01
    2030:	e8 83       	st	Y, r30
    2032:	c6 58       	subi	r28, 0x86	; 134
    2034:	d0 40       	sbci	r29, 0x00	; 0
    2036:	cc 57       	subi	r28, 0x7C	; 124
    2038:	df 4f       	sbci	r29, 0xFF	; 255
    203a:	a8 81       	ld	r26, Y
    203c:	b9 81       	ldd	r27, Y+1	; 0x01
    203e:	c4 58       	subi	r28, 0x84	; 132
    2040:	d0 40       	sbci	r29, 0x00	; 0
    2042:	0c 92       	st	X, r0
    2044:	cc 57       	subi	r28, 0x7C	; 124
    2046:	df 4f       	sbci	r29, 0xFF	; 255
    2048:	e8 81       	ld	r30, Y
    204a:	f9 81       	ldd	r31, Y+1	; 0x01
    204c:	c4 58       	subi	r28, 0x84	; 132
    204e:	d0 40       	sbci	r29, 0x00	; 0
    2050:	31 96       	adiw	r30, 0x01	; 1
    2052:	cc 57       	subi	r28, 0x7C	; 124
    2054:	df 4f       	sbci	r29, 0xFF	; 255
    2056:	f9 83       	std	Y+1, r31	; 0x01
    2058:	e8 83       	st	Y, r30
    205a:	c4 58       	subi	r28, 0x84	; 132
    205c:	d0 40       	sbci	r29, 0x00	; 0
    205e:	c8 57       	subi	r28, 0x78	; 120
    2060:	df 4f       	sbci	r29, 0xFF	; 255
    2062:	f8 81       	ld	r31, Y
    2064:	c8 58       	subi	r28, 0x88	; 136
    2066:	d0 40       	sbci	r29, 0x00	; 0
    2068:	f1 50       	subi	r31, 0x01	; 1
    206a:	c8 57       	subi	r28, 0x78	; 120
    206c:	df 4f       	sbci	r29, 0xFF	; 255
    206e:	f8 83       	st	Y, r31
    2070:	c8 58       	subi	r28, 0x88	; 136
    2072:	d0 40       	sbci	r29, 0x00	; 0
    2074:	c8 57       	subi	r28, 0x78	; 120
    2076:	df 4f       	sbci	r29, 0xFF	; 255
    2078:	28 81       	ld	r18, Y
    207a:	c8 58       	subi	r28, 0x88	; 136
    207c:	d0 40       	sbci	r29, 0x00	; 0
    207e:	22 23       	and	r18, r18
    2080:	31 f6       	brne	.-116    	; 0x200e <main+0x4c0>
    2082:	ce 01       	movw	r24, r28
    2084:	8c 5b       	subi	r24, 0xBC	; 188
    2086:	9f 4f       	sbci	r25, 0xFF	; 255
    2088:	dc 01       	movw	r26, r24
    208a:	13 96       	adiw	r26, 0x03	; 3
    208c:	c7 57       	subi	r28, 0x77	; 119
    208e:	df 4f       	sbci	r29, 0xFF	; 255
    2090:	b9 83       	std	Y+1, r27	; 0x01
    2092:	a8 83       	st	Y, r26
    2094:	c9 58       	subi	r28, 0x89	; 137
    2096:	d0 40       	sbci	r29, 0x00	; 0
    2098:	fe 01       	movw	r30, r28
    209a:	b7 96       	adiw	r30, 0x27	; 39
    209c:	c5 57       	subi	r28, 0x75	; 117
    209e:	df 4f       	sbci	r29, 0xFF	; 255
    20a0:	f9 83       	std	Y+1, r31	; 0x01
    20a2:	e8 83       	st	Y, r30
    20a4:	cb 58       	subi	r28, 0x8B	; 139
    20a6:	d0 40       	sbci	r29, 0x00	; 0
    20a8:	f3 e0       	ldi	r31, 0x03	; 3
    20aa:	c3 57       	subi	r28, 0x73	; 115
    20ac:	df 4f       	sbci	r29, 0xFF	; 255
    20ae:	f8 83       	st	Y, r31
    20b0:	cd 58       	subi	r28, 0x8D	; 141
    20b2:	d0 40       	sbci	r29, 0x00	; 0
    20b4:	c5 57       	subi	r28, 0x75	; 117
    20b6:	df 4f       	sbci	r29, 0xFF	; 255
    20b8:	a8 81       	ld	r26, Y
    20ba:	b9 81       	ldd	r27, Y+1	; 0x01
    20bc:	cb 58       	subi	r28, 0x8B	; 139
    20be:	d0 40       	sbci	r29, 0x00	; 0
    20c0:	0c 90       	ld	r0, X
    20c2:	c5 57       	subi	r28, 0x75	; 117
    20c4:	df 4f       	sbci	r29, 0xFF	; 255
    20c6:	e8 81       	ld	r30, Y
    20c8:	f9 81       	ldd	r31, Y+1	; 0x01
    20ca:	cb 58       	subi	r28, 0x8B	; 139
    20cc:	d0 40       	sbci	r29, 0x00	; 0
    20ce:	31 96       	adiw	r30, 0x01	; 1
    20d0:	c5 57       	subi	r28, 0x75	; 117
    20d2:	df 4f       	sbci	r29, 0xFF	; 255
    20d4:	f9 83       	std	Y+1, r31	; 0x01
    20d6:	e8 83       	st	Y, r30
    20d8:	cb 58       	subi	r28, 0x8B	; 139
    20da:	d0 40       	sbci	r29, 0x00	; 0
    20dc:	c7 57       	subi	r28, 0x77	; 119
    20de:	df 4f       	sbci	r29, 0xFF	; 255
    20e0:	a8 81       	ld	r26, Y
    20e2:	b9 81       	ldd	r27, Y+1	; 0x01
    20e4:	c9 58       	subi	r28, 0x89	; 137
    20e6:	d0 40       	sbci	r29, 0x00	; 0
    20e8:	0c 92       	st	X, r0
    20ea:	c7 57       	subi	r28, 0x77	; 119
    20ec:	df 4f       	sbci	r29, 0xFF	; 255
    20ee:	e8 81       	ld	r30, Y
    20f0:	f9 81       	ldd	r31, Y+1	; 0x01
    20f2:	c9 58       	subi	r28, 0x89	; 137
    20f4:	d0 40       	sbci	r29, 0x00	; 0
    20f6:	31 96       	adiw	r30, 0x01	; 1
    20f8:	c7 57       	subi	r28, 0x77	; 119
    20fa:	df 4f       	sbci	r29, 0xFF	; 255
    20fc:	f9 83       	std	Y+1, r31	; 0x01
    20fe:	e8 83       	st	Y, r30
    2100:	c9 58       	subi	r28, 0x89	; 137
    2102:	d0 40       	sbci	r29, 0x00	; 0
    2104:	c3 57       	subi	r28, 0x73	; 115
    2106:	df 4f       	sbci	r29, 0xFF	; 255
    2108:	f8 81       	ld	r31, Y
    210a:	cd 58       	subi	r28, 0x8D	; 141
    210c:	d0 40       	sbci	r29, 0x00	; 0
    210e:	f1 50       	subi	r31, 0x01	; 1
    2110:	c3 57       	subi	r28, 0x73	; 115
    2112:	df 4f       	sbci	r29, 0xFF	; 255
    2114:	f8 83       	st	Y, r31
    2116:	cd 58       	subi	r28, 0x8D	; 141
    2118:	d0 40       	sbci	r29, 0x00	; 0
    211a:	c3 57       	subi	r28, 0x73	; 115
    211c:	df 4f       	sbci	r29, 0xFF	; 255
    211e:	28 81       	ld	r18, Y
    2120:	cd 58       	subi	r28, 0x8D	; 141
    2122:	d0 40       	sbci	r29, 0x00	; 0
    2124:	22 23       	and	r18, r18
    2126:	31 f6       	brne	.-116    	; 0x20b4 <main+0x566>
    2128:	ce 01       	movw	r24, r28
    212a:	8c 5b       	subi	r24, 0xBC	; 188
    212c:	9f 4f       	sbci	r25, 0xFF	; 255
    212e:	dc 01       	movw	r26, r24
    2130:	16 96       	adiw	r26, 0x06	; 6
    2132:	c2 57       	subi	r28, 0x72	; 114
    2134:	df 4f       	sbci	r29, 0xFF	; 255
    2136:	b9 83       	std	Y+1, r27	; 0x01
    2138:	a8 83       	st	Y, r26
    213a:	ce 58       	subi	r28, 0x8E	; 142
    213c:	d0 40       	sbci	r29, 0x00	; 0
    213e:	fe 01       	movw	r30, r28
    2140:	ba 96       	adiw	r30, 0x2a	; 42
    2142:	c0 57       	subi	r28, 0x70	; 112
    2144:	df 4f       	sbci	r29, 0xFF	; 255
    2146:	f9 83       	std	Y+1, r31	; 0x01
    2148:	e8 83       	st	Y, r30
    214a:	c0 59       	subi	r28, 0x90	; 144
    214c:	d0 40       	sbci	r29, 0x00	; 0
    214e:	f3 e0       	ldi	r31, 0x03	; 3
    2150:	ce 56       	subi	r28, 0x6E	; 110
    2152:	df 4f       	sbci	r29, 0xFF	; 255
    2154:	f8 83       	st	Y, r31
    2156:	c2 59       	subi	r28, 0x92	; 146
    2158:	d0 40       	sbci	r29, 0x00	; 0
    215a:	c0 57       	subi	r28, 0x70	; 112
    215c:	df 4f       	sbci	r29, 0xFF	; 255
    215e:	a8 81       	ld	r26, Y
    2160:	b9 81       	ldd	r27, Y+1	; 0x01
    2162:	c0 59       	subi	r28, 0x90	; 144
    2164:	d0 40       	sbci	r29, 0x00	; 0
    2166:	0c 90       	ld	r0, X
    2168:	c0 57       	subi	r28, 0x70	; 112
    216a:	df 4f       	sbci	r29, 0xFF	; 255
    216c:	e8 81       	ld	r30, Y
    216e:	f9 81       	ldd	r31, Y+1	; 0x01
    2170:	c0 59       	subi	r28, 0x90	; 144
    2172:	d0 40       	sbci	r29, 0x00	; 0
    2174:	31 96       	adiw	r30, 0x01	; 1
    2176:	c0 57       	subi	r28, 0x70	; 112
    2178:	df 4f       	sbci	r29, 0xFF	; 255
    217a:	f9 83       	std	Y+1, r31	; 0x01
    217c:	e8 83       	st	Y, r30
    217e:	c0 59       	subi	r28, 0x90	; 144
    2180:	d0 40       	sbci	r29, 0x00	; 0
    2182:	c2 57       	subi	r28, 0x72	; 114
    2184:	df 4f       	sbci	r29, 0xFF	; 255
    2186:	a8 81       	ld	r26, Y
    2188:	b9 81       	ldd	r27, Y+1	; 0x01
    218a:	ce 58       	subi	r28, 0x8E	; 142
    218c:	d0 40       	sbci	r29, 0x00	; 0
    218e:	0c 92       	st	X, r0
    2190:	c2 57       	subi	r28, 0x72	; 114
    2192:	df 4f       	sbci	r29, 0xFF	; 255
    2194:	e8 81       	ld	r30, Y
    2196:	f9 81       	ldd	r31, Y+1	; 0x01
    2198:	ce 58       	subi	r28, 0x8E	; 142
    219a:	d0 40       	sbci	r29, 0x00	; 0
    219c:	31 96       	adiw	r30, 0x01	; 1
    219e:	c2 57       	subi	r28, 0x72	; 114
    21a0:	df 4f       	sbci	r29, 0xFF	; 255
    21a2:	f9 83       	std	Y+1, r31	; 0x01
    21a4:	e8 83       	st	Y, r30
    21a6:	ce 58       	subi	r28, 0x8E	; 142
    21a8:	d0 40       	sbci	r29, 0x00	; 0
    21aa:	ce 56       	subi	r28, 0x6E	; 110
    21ac:	df 4f       	sbci	r29, 0xFF	; 255
    21ae:	f8 81       	ld	r31, Y
    21b0:	c2 59       	subi	r28, 0x92	; 146
    21b2:	d0 40       	sbci	r29, 0x00	; 0
    21b4:	f1 50       	subi	r31, 0x01	; 1
    21b6:	ce 56       	subi	r28, 0x6E	; 110
    21b8:	df 4f       	sbci	r29, 0xFF	; 255
    21ba:	f8 83       	st	Y, r31
    21bc:	c2 59       	subi	r28, 0x92	; 146
    21be:	d0 40       	sbci	r29, 0x00	; 0
    21c0:	ce 56       	subi	r28, 0x6E	; 110
    21c2:	df 4f       	sbci	r29, 0xFF	; 255
    21c4:	28 81       	ld	r18, Y
    21c6:	c2 59       	subi	r28, 0x92	; 146
    21c8:	d0 40       	sbci	r29, 0x00	; 0
    21ca:	22 23       	and	r18, r18
    21cc:	31 f6       	brne	.-116    	; 0x215a <main+0x60c>
	SW_Type arry[]={sw3,sw4,sw5};
    21ce:	ce 01       	movw	r24, r28
    21d0:	83 5b       	subi	r24, 0xB3	; 179
    21d2:	9f 4f       	sbci	r25, 0xFF	; 255
    21d4:	29 e0       	ldi	r18, 0x09	; 9
    21d6:	fc 01       	movw	r30, r24
    21d8:	df 01       	movw	r26, r30
    21da:	32 2f       	mov	r19, r18
    21dc:	1d 92       	st	X+, r1
    21de:	3a 95       	dec	r19
    21e0:	e9 f7       	brne	.-6      	; 0x21dc <main+0x68e>
    21e2:	ce 01       	movw	r24, r28
    21e4:	83 5b       	subi	r24, 0xB3	; 179
    21e6:	9f 4f       	sbci	r25, 0xFF	; 255
    21e8:	cd 56       	subi	r28, 0x6D	; 109
    21ea:	df 4f       	sbci	r29, 0xFF	; 255
    21ec:	99 83       	std	Y+1, r25	; 0x01
    21ee:	88 83       	st	Y, r24
    21f0:	c3 59       	subi	r28, 0x93	; 147
    21f2:	d0 40       	sbci	r29, 0x00	; 0
    21f4:	ce 01       	movw	r24, r28
    21f6:	8d 96       	adiw	r24, 0x2d	; 45
    21f8:	cb 56       	subi	r28, 0x6B	; 107
    21fa:	df 4f       	sbci	r29, 0xFF	; 255
    21fc:	99 83       	std	Y+1, r25	; 0x01
    21fe:	88 83       	st	Y, r24
    2200:	c5 59       	subi	r28, 0x95	; 149
    2202:	d0 40       	sbci	r29, 0x00	; 0
    2204:	93 e0       	ldi	r25, 0x03	; 3
    2206:	c9 56       	subi	r28, 0x69	; 105
    2208:	df 4f       	sbci	r29, 0xFF	; 255
    220a:	98 83       	st	Y, r25
    220c:	c7 59       	subi	r28, 0x97	; 151
    220e:	d0 40       	sbci	r29, 0x00	; 0
    2210:	cb 56       	subi	r28, 0x6B	; 107
    2212:	df 4f       	sbci	r29, 0xFF	; 255
    2214:	a8 81       	ld	r26, Y
    2216:	b9 81       	ldd	r27, Y+1	; 0x01
    2218:	c5 59       	subi	r28, 0x95	; 149
    221a:	d0 40       	sbci	r29, 0x00	; 0
    221c:	0c 90       	ld	r0, X
    221e:	cb 56       	subi	r28, 0x6B	; 107
    2220:	df 4f       	sbci	r29, 0xFF	; 255
    2222:	e8 81       	ld	r30, Y
    2224:	f9 81       	ldd	r31, Y+1	; 0x01
    2226:	c5 59       	subi	r28, 0x95	; 149
    2228:	d0 40       	sbci	r29, 0x00	; 0
    222a:	31 96       	adiw	r30, 0x01	; 1
    222c:	cb 56       	subi	r28, 0x6B	; 107
    222e:	df 4f       	sbci	r29, 0xFF	; 255
    2230:	f9 83       	std	Y+1, r31	; 0x01
    2232:	e8 83       	st	Y, r30
    2234:	c5 59       	subi	r28, 0x95	; 149
    2236:	d0 40       	sbci	r29, 0x00	; 0
    2238:	cd 56       	subi	r28, 0x6D	; 109
    223a:	df 4f       	sbci	r29, 0xFF	; 255
    223c:	a8 81       	ld	r26, Y
    223e:	b9 81       	ldd	r27, Y+1	; 0x01
    2240:	c3 59       	subi	r28, 0x93	; 147
    2242:	d0 40       	sbci	r29, 0x00	; 0
    2244:	0c 92       	st	X, r0
    2246:	cd 56       	subi	r28, 0x6D	; 109
    2248:	df 4f       	sbci	r29, 0xFF	; 255
    224a:	e8 81       	ld	r30, Y
    224c:	f9 81       	ldd	r31, Y+1	; 0x01
    224e:	c3 59       	subi	r28, 0x93	; 147
    2250:	d0 40       	sbci	r29, 0x00	; 0
    2252:	31 96       	adiw	r30, 0x01	; 1
    2254:	cd 56       	subi	r28, 0x6D	; 109
    2256:	df 4f       	sbci	r29, 0xFF	; 255
    2258:	f9 83       	std	Y+1, r31	; 0x01
    225a:	e8 83       	st	Y, r30
    225c:	c3 59       	subi	r28, 0x93	; 147
    225e:	d0 40       	sbci	r29, 0x00	; 0
    2260:	c9 56       	subi	r28, 0x69	; 105
    2262:	df 4f       	sbci	r29, 0xFF	; 255
    2264:	f8 81       	ld	r31, Y
    2266:	c7 59       	subi	r28, 0x97	; 151
    2268:	d0 40       	sbci	r29, 0x00	; 0
    226a:	f1 50       	subi	r31, 0x01	; 1
    226c:	c9 56       	subi	r28, 0x69	; 105
    226e:	df 4f       	sbci	r29, 0xFF	; 255
    2270:	f8 83       	st	Y, r31
    2272:	c7 59       	subi	r28, 0x97	; 151
    2274:	d0 40       	sbci	r29, 0x00	; 0
    2276:	c9 56       	subi	r28, 0x69	; 105
    2278:	df 4f       	sbci	r29, 0xFF	; 255
    227a:	28 81       	ld	r18, Y
    227c:	c7 59       	subi	r28, 0x97	; 151
    227e:	d0 40       	sbci	r29, 0x00	; 0
    2280:	22 23       	and	r18, r18
    2282:	31 f6       	brne	.-116    	; 0x2210 <main+0x6c2>
    2284:	ce 01       	movw	r24, r28
    2286:	83 5b       	subi	r24, 0xB3	; 179
    2288:	9f 4f       	sbci	r25, 0xFF	; 255
    228a:	dc 01       	movw	r26, r24
    228c:	13 96       	adiw	r26, 0x03	; 3
    228e:	c8 56       	subi	r28, 0x68	; 104
    2290:	df 4f       	sbci	r29, 0xFF	; 255
    2292:	b9 83       	std	Y+1, r27	; 0x01
    2294:	a8 83       	st	Y, r26
    2296:	c8 59       	subi	r28, 0x98	; 152
    2298:	d0 40       	sbci	r29, 0x00	; 0
    229a:	fe 01       	movw	r30, r28
    229c:	f0 96       	adiw	r30, 0x30	; 48
    229e:	c6 56       	subi	r28, 0x66	; 102
    22a0:	df 4f       	sbci	r29, 0xFF	; 255
    22a2:	f9 83       	std	Y+1, r31	; 0x01
    22a4:	e8 83       	st	Y, r30
    22a6:	ca 59       	subi	r28, 0x9A	; 154
    22a8:	d0 40       	sbci	r29, 0x00	; 0
    22aa:	f3 e0       	ldi	r31, 0x03	; 3
    22ac:	c4 56       	subi	r28, 0x64	; 100
    22ae:	df 4f       	sbci	r29, 0xFF	; 255
    22b0:	f8 83       	st	Y, r31
    22b2:	cc 59       	subi	r28, 0x9C	; 156
    22b4:	d0 40       	sbci	r29, 0x00	; 0
    22b6:	c6 56       	subi	r28, 0x66	; 102
    22b8:	df 4f       	sbci	r29, 0xFF	; 255
    22ba:	a8 81       	ld	r26, Y
    22bc:	b9 81       	ldd	r27, Y+1	; 0x01
    22be:	ca 59       	subi	r28, 0x9A	; 154
    22c0:	d0 40       	sbci	r29, 0x00	; 0
    22c2:	0c 90       	ld	r0, X
    22c4:	c6 56       	subi	r28, 0x66	; 102
    22c6:	df 4f       	sbci	r29, 0xFF	; 255
    22c8:	e8 81       	ld	r30, Y
    22ca:	f9 81       	ldd	r31, Y+1	; 0x01
    22cc:	ca 59       	subi	r28, 0x9A	; 154
    22ce:	d0 40       	sbci	r29, 0x00	; 0
    22d0:	31 96       	adiw	r30, 0x01	; 1
    22d2:	c6 56       	subi	r28, 0x66	; 102
    22d4:	df 4f       	sbci	r29, 0xFF	; 255
    22d6:	f9 83       	std	Y+1, r31	; 0x01
    22d8:	e8 83       	st	Y, r30
    22da:	ca 59       	subi	r28, 0x9A	; 154
    22dc:	d0 40       	sbci	r29, 0x00	; 0
    22de:	c8 56       	subi	r28, 0x68	; 104
    22e0:	df 4f       	sbci	r29, 0xFF	; 255
    22e2:	a8 81       	ld	r26, Y
    22e4:	b9 81       	ldd	r27, Y+1	; 0x01
    22e6:	c8 59       	subi	r28, 0x98	; 152
    22e8:	d0 40       	sbci	r29, 0x00	; 0
    22ea:	0c 92       	st	X, r0
    22ec:	c8 56       	subi	r28, 0x68	; 104
    22ee:	df 4f       	sbci	r29, 0xFF	; 255
    22f0:	e8 81       	ld	r30, Y
    22f2:	f9 81       	ldd	r31, Y+1	; 0x01
    22f4:	c8 59       	subi	r28, 0x98	; 152
    22f6:	d0 40       	sbci	r29, 0x00	; 0
    22f8:	31 96       	adiw	r30, 0x01	; 1
    22fa:	c8 56       	subi	r28, 0x68	; 104
    22fc:	df 4f       	sbci	r29, 0xFF	; 255
    22fe:	f9 83       	std	Y+1, r31	; 0x01
    2300:	e8 83       	st	Y, r30
    2302:	c8 59       	subi	r28, 0x98	; 152
    2304:	d0 40       	sbci	r29, 0x00	; 0
    2306:	c4 56       	subi	r28, 0x64	; 100
    2308:	df 4f       	sbci	r29, 0xFF	; 255
    230a:	f8 81       	ld	r31, Y
    230c:	cc 59       	subi	r28, 0x9C	; 156
    230e:	d0 40       	sbci	r29, 0x00	; 0
    2310:	f1 50       	subi	r31, 0x01	; 1
    2312:	c4 56       	subi	r28, 0x64	; 100
    2314:	df 4f       	sbci	r29, 0xFF	; 255
    2316:	f8 83       	st	Y, r31
    2318:	cc 59       	subi	r28, 0x9C	; 156
    231a:	d0 40       	sbci	r29, 0x00	; 0
    231c:	c4 56       	subi	r28, 0x64	; 100
    231e:	df 4f       	sbci	r29, 0xFF	; 255
    2320:	28 81       	ld	r18, Y
    2322:	cc 59       	subi	r28, 0x9C	; 156
    2324:	d0 40       	sbci	r29, 0x00	; 0
    2326:	22 23       	and	r18, r18
    2328:	31 f6       	brne	.-116    	; 0x22b6 <main+0x768>
    232a:	ce 01       	movw	r24, r28
    232c:	83 5b       	subi	r24, 0xB3	; 179
    232e:	9f 4f       	sbci	r25, 0xFF	; 255
    2330:	dc 01       	movw	r26, r24
    2332:	16 96       	adiw	r26, 0x06	; 6
    2334:	c3 56       	subi	r28, 0x63	; 99
    2336:	df 4f       	sbci	r29, 0xFF	; 255
    2338:	b9 83       	std	Y+1, r27	; 0x01
    233a:	a8 83       	st	Y, r26
    233c:	cd 59       	subi	r28, 0x9D	; 157
    233e:	d0 40       	sbci	r29, 0x00	; 0
    2340:	fe 01       	movw	r30, r28
    2342:	f3 96       	adiw	r30, 0x33	; 51
    2344:	c1 56       	subi	r28, 0x61	; 97
    2346:	df 4f       	sbci	r29, 0xFF	; 255
    2348:	f9 83       	std	Y+1, r31	; 0x01
    234a:	e8 83       	st	Y, r30
    234c:	cf 59       	subi	r28, 0x9F	; 159
    234e:	d0 40       	sbci	r29, 0x00	; 0
    2350:	f3 e0       	ldi	r31, 0x03	; 3
    2352:	cf 55       	subi	r28, 0x5F	; 95
    2354:	df 4f       	sbci	r29, 0xFF	; 255
    2356:	f8 83       	st	Y, r31
    2358:	c1 5a       	subi	r28, 0xA1	; 161
    235a:	d0 40       	sbci	r29, 0x00	; 0
    235c:	c1 56       	subi	r28, 0x61	; 97
    235e:	df 4f       	sbci	r29, 0xFF	; 255
    2360:	a8 81       	ld	r26, Y
    2362:	b9 81       	ldd	r27, Y+1	; 0x01
    2364:	cf 59       	subi	r28, 0x9F	; 159
    2366:	d0 40       	sbci	r29, 0x00	; 0
    2368:	0c 90       	ld	r0, X
    236a:	c1 56       	subi	r28, 0x61	; 97
    236c:	df 4f       	sbci	r29, 0xFF	; 255
    236e:	e8 81       	ld	r30, Y
    2370:	f9 81       	ldd	r31, Y+1	; 0x01
    2372:	cf 59       	subi	r28, 0x9F	; 159
    2374:	d0 40       	sbci	r29, 0x00	; 0
    2376:	31 96       	adiw	r30, 0x01	; 1
    2378:	c1 56       	subi	r28, 0x61	; 97
    237a:	df 4f       	sbci	r29, 0xFF	; 255
    237c:	f9 83       	std	Y+1, r31	; 0x01
    237e:	e8 83       	st	Y, r30
    2380:	cf 59       	subi	r28, 0x9F	; 159
    2382:	d0 40       	sbci	r29, 0x00	; 0
    2384:	c3 56       	subi	r28, 0x63	; 99
    2386:	df 4f       	sbci	r29, 0xFF	; 255
    2388:	a8 81       	ld	r26, Y
    238a:	b9 81       	ldd	r27, Y+1	; 0x01
    238c:	cd 59       	subi	r28, 0x9D	; 157
    238e:	d0 40       	sbci	r29, 0x00	; 0
    2390:	0c 92       	st	X, r0
    2392:	c3 56       	subi	r28, 0x63	; 99
    2394:	df 4f       	sbci	r29, 0xFF	; 255
    2396:	e8 81       	ld	r30, Y
    2398:	f9 81       	ldd	r31, Y+1	; 0x01
    239a:	cd 59       	subi	r28, 0x9D	; 157
    239c:	d0 40       	sbci	r29, 0x00	; 0
    239e:	31 96       	adiw	r30, 0x01	; 1
    23a0:	c3 56       	subi	r28, 0x63	; 99
    23a2:	df 4f       	sbci	r29, 0xFF	; 255
    23a4:	f9 83       	std	Y+1, r31	; 0x01
    23a6:	e8 83       	st	Y, r30
    23a8:	cd 59       	subi	r28, 0x9D	; 157
    23aa:	d0 40       	sbci	r29, 0x00	; 0
    23ac:	cf 55       	subi	r28, 0x5F	; 95
    23ae:	df 4f       	sbci	r29, 0xFF	; 255
    23b0:	f8 81       	ld	r31, Y
    23b2:	c1 5a       	subi	r28, 0xA1	; 161
    23b4:	d0 40       	sbci	r29, 0x00	; 0
    23b6:	f1 50       	subi	r31, 0x01	; 1
    23b8:	cf 55       	subi	r28, 0x5F	; 95
    23ba:	df 4f       	sbci	r29, 0xFF	; 255
    23bc:	f8 83       	st	Y, r31
    23be:	c1 5a       	subi	r28, 0xA1	; 161
    23c0:	d0 40       	sbci	r29, 0x00	; 0
    23c2:	cf 55       	subi	r28, 0x5F	; 95
    23c4:	df 4f       	sbci	r29, 0xFF	; 255
    23c6:	28 81       	ld	r18, Y
    23c8:	c1 5a       	subi	r28, 0xA1	; 161
    23ca:	d0 40       	sbci	r29, 0x00	; 0
    23cc:	22 23       	and	r18, r18
    23ce:	31 f6       	brne	.-116    	; 0x235c <main+0x80e>

	while (1)
	{
		x=0;
    23d0:	1b a2       	std	Y+35, r1	; 0x23
		y=0;
    23d2:	1a a2       	std	Y+34, r1	; 0x22
		value=0;
    23d4:	19 a2       	std	Y+33, r1	; 0x21
		// value x
		for(int i=0; i<3 ; i++)
    23d6:	18 a2       	std	Y+32, r1	; 0x20
    23d8:	1f 8e       	std	Y+31, r1	; 0x1f
    23da:	4d c0       	rjmp	.+154    	; 0x2476 <main+0x928>
		{
			if(SW_u8GetPressed(arrx[i]) == SW_NOT_PRESSED )
    23dc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    23de:	38 a1       	ldd	r19, Y+32	; 0x20
    23e0:	ae 01       	movw	r20, r28
    23e2:	4c 5b       	subi	r20, 0xBC	; 188
    23e4:	5f 4f       	sbci	r21, 0xFF	; 255
    23e6:	c9 01       	movw	r24, r18
    23e8:	88 0f       	add	r24, r24
    23ea:	99 1f       	adc	r25, r25
    23ec:	82 0f       	add	r24, r18
    23ee:	93 1f       	adc	r25, r19
    23f0:	fa 01       	movw	r30, r20
    23f2:	e8 0f       	add	r30, r24
    23f4:	f9 1f       	adc	r31, r25
    23f6:	60 81       	ld	r22, Z
    23f8:	71 81       	ldd	r23, Z+1	; 0x01
    23fa:	82 81       	ldd	r24, Z+2	; 0x02
    23fc:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <SW_u8GetPressed>
    2400:	88 23       	and	r24, r24
    2402:	a1 f5       	brne	.+104    	; 0x246c <main+0x91e>
			{
				switch((arrx[i].Pin))
    2404:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2406:	38 a1       	ldd	r19, Y+32	; 0x20
    2408:	ae 01       	movw	r20, r28
    240a:	4c 5b       	subi	r20, 0xBC	; 188
    240c:	5f 4f       	sbci	r21, 0xFF	; 255
    240e:	c9 01       	movw	r24, r18
    2410:	88 0f       	add	r24, r24
    2412:	99 1f       	adc	r25, r25
    2414:	82 0f       	add	r24, r18
    2416:	93 1f       	adc	r25, r19
    2418:	84 0f       	add	r24, r20
    241a:	95 1f       	adc	r25, r21
    241c:	fc 01       	movw	r30, r24
    241e:	31 96       	adiw	r30, 0x01	; 1
    2420:	80 81       	ld	r24, Z
    2422:	a8 2f       	mov	r26, r24
    2424:	b0 e0       	ldi	r27, 0x00	; 0
    2426:	6c 96       	adiw	r28, 0x1c	; 28
    2428:	bf af       	std	Y+63, r27	; 0x3f
    242a:	ae af       	std	Y+62, r26	; 0x3e
    242c:	6c 97       	sbiw	r28, 0x1c	; 28
    242e:	6c 96       	adiw	r28, 0x1c	; 28
    2430:	ee ad       	ldd	r30, Y+62	; 0x3e
    2432:	ff ad       	ldd	r31, Y+63	; 0x3f
    2434:	6c 97       	sbiw	r28, 0x1c	; 28
    2436:	e1 30       	cpi	r30, 0x01	; 1
    2438:	f1 05       	cpc	r31, r1
    243a:	89 f0       	breq	.+34     	; 0x245e <main+0x910>
    243c:	6c 96       	adiw	r28, 0x1c	; 28
    243e:	2e ad       	ldd	r18, Y+62	; 0x3e
    2440:	3f ad       	ldd	r19, Y+63	; 0x3f
    2442:	6c 97       	sbiw	r28, 0x1c	; 28
    2444:	22 30       	cpi	r18, 0x02	; 2
    2446:	31 05       	cpc	r19, r1
    2448:	71 f0       	breq	.+28     	; 0x2466 <main+0x918>
    244a:	6c 96       	adiw	r28, 0x1c	; 28
    244c:	8e ad       	ldd	r24, Y+62	; 0x3e
    244e:	9f ad       	ldd	r25, Y+63	; 0x3f
    2450:	6c 97       	sbiw	r28, 0x1c	; 28
    2452:	00 97       	sbiw	r24, 0x00	; 0
    2454:	59 f4       	brne	.+22     	; 0x246c <main+0x91e>
				{
				case 0:
					x+=1;
    2456:	8b a1       	ldd	r24, Y+35	; 0x23
    2458:	8f 5f       	subi	r24, 0xFF	; 255
    245a:	8b a3       	std	Y+35, r24	; 0x23
    245c:	07 c0       	rjmp	.+14     	; 0x246c <main+0x91e>
					break;
				case 1:
					x+=2;
    245e:	8b a1       	ldd	r24, Y+35	; 0x23
    2460:	8e 5f       	subi	r24, 0xFE	; 254
    2462:	8b a3       	std	Y+35, r24	; 0x23
    2464:	03 c0       	rjmp	.+6      	; 0x246c <main+0x91e>
					break;
				case 2:
					x+=4;
    2466:	8b a1       	ldd	r24, Y+35	; 0x23
    2468:	8c 5f       	subi	r24, 0xFC	; 252
    246a:	8b a3       	std	Y+35, r24	; 0x23
	{
		x=0;
		y=0;
		value=0;
		// value x
		for(int i=0; i<3 ; i++)
    246c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    246e:	98 a1       	ldd	r25, Y+32	; 0x20
    2470:	01 96       	adiw	r24, 0x01	; 1
    2472:	98 a3       	std	Y+32, r25	; 0x20
    2474:	8f 8f       	std	Y+31, r24	; 0x1f
    2476:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2478:	98 a1       	ldd	r25, Y+32	; 0x20
    247a:	83 30       	cpi	r24, 0x03	; 3
    247c:	91 05       	cpc	r25, r1
    247e:	0c f4       	brge	.+2      	; 0x2482 <main+0x934>
    2480:	ad cf       	rjmp	.-166    	; 0x23dc <main+0x88e>
					break;
				}
			}
		}
		// value y
		for(int i=0; i<3 ; i++)
    2482:	1e 8e       	std	Y+30, r1	; 0x1e
    2484:	1d 8e       	std	Y+29, r1	; 0x1d
    2486:	4e c0       	rjmp	.+156    	; 0x2524 <main+0x9d6>
		{
			if(SW_u8GetPressed(arry[i]) == SW_NOT_PRESSED )
    2488:	2d 8d       	ldd	r18, Y+29	; 0x1d
    248a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    248c:	ae 01       	movw	r20, r28
    248e:	43 5b       	subi	r20, 0xB3	; 179
    2490:	5f 4f       	sbci	r21, 0xFF	; 255
    2492:	c9 01       	movw	r24, r18
    2494:	88 0f       	add	r24, r24
    2496:	99 1f       	adc	r25, r25
    2498:	82 0f       	add	r24, r18
    249a:	93 1f       	adc	r25, r19
    249c:	fa 01       	movw	r30, r20
    249e:	e8 0f       	add	r30, r24
    24a0:	f9 1f       	adc	r31, r25
    24a2:	60 81       	ld	r22, Z
    24a4:	71 81       	ldd	r23, Z+1	; 0x01
    24a6:	82 81       	ldd	r24, Z+2	; 0x02
    24a8:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <SW_u8GetPressed>
    24ac:	88 23       	and	r24, r24
    24ae:	a9 f5       	brne	.+106    	; 0x251a <main+0x9cc>
			{
				switch((arry[i].Pin))
    24b0:	2d 8d       	ldd	r18, Y+29	; 0x1d
    24b2:	3e 8d       	ldd	r19, Y+30	; 0x1e
    24b4:	ae 01       	movw	r20, r28
    24b6:	43 5b       	subi	r20, 0xB3	; 179
    24b8:	5f 4f       	sbci	r21, 0xFF	; 255
    24ba:	c9 01       	movw	r24, r18
    24bc:	88 0f       	add	r24, r24
    24be:	99 1f       	adc	r25, r25
    24c0:	82 0f       	add	r24, r18
    24c2:	93 1f       	adc	r25, r19
    24c4:	84 0f       	add	r24, r20
    24c6:	95 1f       	adc	r25, r21
    24c8:	fc 01       	movw	r30, r24
    24ca:	31 96       	adiw	r30, 0x01	; 1
    24cc:	80 81       	ld	r24, Z
    24ce:	a8 2f       	mov	r26, r24
    24d0:	b0 e0       	ldi	r27, 0x00	; 0
    24d2:	6a 96       	adiw	r28, 0x1a	; 26
    24d4:	bf af       	std	Y+63, r27	; 0x3f
    24d6:	ae af       	std	Y+62, r26	; 0x3e
    24d8:	6a 97       	sbiw	r28, 0x1a	; 26
    24da:	6a 96       	adiw	r28, 0x1a	; 26
    24dc:	ee ad       	ldd	r30, Y+62	; 0x3e
    24de:	ff ad       	ldd	r31, Y+63	; 0x3f
    24e0:	6a 97       	sbiw	r28, 0x1a	; 26
    24e2:	e4 30       	cpi	r30, 0x04	; 4
    24e4:	f1 05       	cpc	r31, r1
    24e6:	91 f0       	breq	.+36     	; 0x250c <main+0x9be>
    24e8:	6a 96       	adiw	r28, 0x1a	; 26
    24ea:	2e ad       	ldd	r18, Y+62	; 0x3e
    24ec:	3f ad       	ldd	r19, Y+63	; 0x3f
    24ee:	6a 97       	sbiw	r28, 0x1a	; 26
    24f0:	25 30       	cpi	r18, 0x05	; 5
    24f2:	31 05       	cpc	r19, r1
    24f4:	79 f0       	breq	.+30     	; 0x2514 <main+0x9c6>
    24f6:	6a 96       	adiw	r28, 0x1a	; 26
    24f8:	8e ad       	ldd	r24, Y+62	; 0x3e
    24fa:	9f ad       	ldd	r25, Y+63	; 0x3f
    24fc:	6a 97       	sbiw	r28, 0x1a	; 26
    24fe:	83 30       	cpi	r24, 0x03	; 3
    2500:	91 05       	cpc	r25, r1
    2502:	59 f4       	brne	.+22     	; 0x251a <main+0x9cc>
				{
				case 3:
					y+=1;
    2504:	8a a1       	ldd	r24, Y+34	; 0x22
    2506:	8f 5f       	subi	r24, 0xFF	; 255
    2508:	8a a3       	std	Y+34, r24	; 0x22
    250a:	07 c0       	rjmp	.+14     	; 0x251a <main+0x9cc>
					break;
				case 4:
					y+=2;
    250c:	8a a1       	ldd	r24, Y+34	; 0x22
    250e:	8e 5f       	subi	r24, 0xFE	; 254
    2510:	8a a3       	std	Y+34, r24	; 0x22
    2512:	03 c0       	rjmp	.+6      	; 0x251a <main+0x9cc>
					break;
				case 5:
					y+=4;
    2514:	8a a1       	ldd	r24, Y+34	; 0x22
    2516:	8c 5f       	subi	r24, 0xFC	; 252
    2518:	8a a3       	std	Y+34, r24	; 0x22
					break;
				}
			}
		}
		// value y
		for(int i=0; i<3 ; i++)
    251a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    251c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    251e:	01 96       	adiw	r24, 0x01	; 1
    2520:	9e 8f       	std	Y+30, r25	; 0x1e
    2522:	8d 8f       	std	Y+29, r24	; 0x1d
    2524:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2526:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2528:	83 30       	cpi	r24, 0x03	; 3
    252a:	91 05       	cpc	r25, r1
    252c:	0c f4       	brge	.+2      	; 0x2530 <main+0x9e2>
    252e:	ac cf       	rjmp	.-168    	; 0x2488 <main+0x93a>
			}
		}

		// output

		switch(PINA_R>>6)
    2530:	e9 e3       	ldi	r30, 0x39	; 57
    2532:	f0 e0       	ldi	r31, 0x00	; 0
    2534:	80 81       	ld	r24, Z
    2536:	82 95       	swap	r24
    2538:	86 95       	lsr	r24
    253a:	86 95       	lsr	r24
    253c:	83 70       	andi	r24, 0x03	; 3
    253e:	a8 2f       	mov	r26, r24
    2540:	b0 e0       	ldi	r27, 0x00	; 0
    2542:	68 96       	adiw	r28, 0x18	; 24
    2544:	bf af       	std	Y+63, r27	; 0x3f
    2546:	ae af       	std	Y+62, r26	; 0x3e
    2548:	68 97       	sbiw	r28, 0x18	; 24
    254a:	68 96       	adiw	r28, 0x18	; 24
    254c:	ee ad       	ldd	r30, Y+62	; 0x3e
    254e:	ff ad       	ldd	r31, Y+63	; 0x3f
    2550:	68 97       	sbiw	r28, 0x18	; 24
    2552:	e1 30       	cpi	r30, 0x01	; 1
    2554:	f1 05       	cpc	r31, r1
    2556:	11 f1       	breq	.+68     	; 0x259c <main+0xa4e>
    2558:	68 96       	adiw	r28, 0x18	; 24
    255a:	2e ad       	ldd	r18, Y+62	; 0x3e
    255c:	3f ad       	ldd	r19, Y+63	; 0x3f
    255e:	68 97       	sbiw	r28, 0x18	; 24
    2560:	22 30       	cpi	r18, 0x02	; 2
    2562:	31 05       	cpc	r19, r1
    2564:	3c f4       	brge	.+14     	; 0x2574 <main+0xa26>
    2566:	68 96       	adiw	r28, 0x18	; 24
    2568:	8e ad       	ldd	r24, Y+62	; 0x3e
    256a:	9f ad       	ldd	r25, Y+63	; 0x3f
    256c:	68 97       	sbiw	r28, 0x18	; 24
    256e:	00 97       	sbiw	r24, 0x00	; 0
    2570:	81 f0       	breq	.+32     	; 0x2592 <main+0xa44>
    2572:	26 c0       	rjmp	.+76     	; 0x25c0 <main+0xa72>
    2574:	68 96       	adiw	r28, 0x18	; 24
    2576:	ae ad       	ldd	r26, Y+62	; 0x3e
    2578:	bf ad       	ldd	r27, Y+63	; 0x3f
    257a:	68 97       	sbiw	r28, 0x18	; 24
    257c:	a2 30       	cpi	r26, 0x02	; 2
    257e:	b1 05       	cpc	r27, r1
    2580:	91 f0       	breq	.+36     	; 0x25a6 <main+0xa58>
    2582:	68 96       	adiw	r28, 0x18	; 24
    2584:	ee ad       	ldd	r30, Y+62	; 0x3e
    2586:	ff ad       	ldd	r31, Y+63	; 0x3f
    2588:	68 97       	sbiw	r28, 0x18	; 24
    258a:	e3 30       	cpi	r30, 0x03	; 3
    258c:	f1 05       	cpc	r31, r1
    258e:	91 f0       	breq	.+36     	; 0x25b4 <main+0xa66>
    2590:	17 c0       	rjmp	.+46     	; 0x25c0 <main+0xa72>
				{
				case 0 :
					value = x+y;
    2592:	8b a1       	ldd	r24, Y+35	; 0x23
    2594:	9a a1       	ldd	r25, Y+34	; 0x22
    2596:	89 0f       	add	r24, r25
    2598:	89 a3       	std	Y+33, r24	; 0x21
    259a:	12 c0       	rjmp	.+36     	; 0x25c0 <main+0xa72>
					break;
				case 1 :
					value = x-y;
    259c:	8b a1       	ldd	r24, Y+35	; 0x23
    259e:	9a a1       	ldd	r25, Y+34	; 0x22
    25a0:	89 1b       	sub	r24, r25
    25a2:	89 a3       	std	Y+33, r24	; 0x21
    25a4:	0d c0       	rjmp	.+26     	; 0x25c0 <main+0xa72>
					break;
				case 2 :
					value = x*y;
    25a6:	8b a1       	ldd	r24, Y+35	; 0x23
    25a8:	9a a1       	ldd	r25, Y+34	; 0x22
    25aa:	89 9f       	mul	r24, r25
    25ac:	80 2d       	mov	r24, r0
    25ae:	11 24       	eor	r1, r1
    25b0:	89 a3       	std	Y+33, r24	; 0x21
    25b2:	06 c0       	rjmp	.+12     	; 0x25c0 <main+0xa72>
					break;
				case 3 :
					value = x/y;
    25b4:	8b a1       	ldd	r24, Y+35	; 0x23
    25b6:	9a a1       	ldd	r25, Y+34	; 0x22
    25b8:	69 2f       	mov	r22, r25
    25ba:	0e 94 0d 14 	call	0x281a	; 0x281a <__udivmodqi4>
    25be:	89 a3       	std	Y+33, r24	; 0x21
					break;

				}

		SSD_VoidEnable (ssd0);
    25c0:	8c ad       	ldd	r24, Y+60	; 0x3c
    25c2:	9d ad       	ldd	r25, Y+61	; 0x3d
    25c4:	ae ad       	ldd	r26, Y+62	; 0x3e
    25c6:	bf ad       	ldd	r27, Y+63	; 0x3f
    25c8:	bc 01       	movw	r22, r24
    25ca:	cd 01       	movw	r24, r26
    25cc:	0e 94 af 0c 	call	0x195e	; 0x195e <SSD_VoidEnable>
		SSD_VoidDisable (ssd1);
    25d0:	fe 01       	movw	r30, r28
    25d2:	e0 5c       	subi	r30, 0xC0	; 192
    25d4:	ff 4f       	sbci	r31, 0xFF	; 255
    25d6:	80 81       	ld	r24, Z
    25d8:	91 81       	ldd	r25, Z+1	; 0x01
    25da:	a2 81       	ldd	r26, Z+2	; 0x02
    25dc:	b3 81       	ldd	r27, Z+3	; 0x03
    25de:	bc 01       	movw	r22, r24
    25e0:	cd 01       	movw	r24, r26
    25e2:	0e 94 df 0c 	call	0x19be	; 0x19be <SSD_VoidDisable>
		SSD_VoidSendNumber (ssd0,value/10);
    25e6:	89 a1       	ldd	r24, Y+33	; 0x21
    25e8:	9a e0       	ldi	r25, 0x0A	; 10
    25ea:	69 2f       	mov	r22, r25
    25ec:	0e 94 0d 14 	call	0x281a	; 0x281a <__udivmodqi4>
    25f0:	28 2f       	mov	r18, r24
    25f2:	8c ad       	ldd	r24, Y+60	; 0x3c
    25f4:	9d ad       	ldd	r25, Y+61	; 0x3d
    25f6:	ae ad       	ldd	r26, Y+62	; 0x3e
    25f8:	bf ad       	ldd	r27, Y+63	; 0x3f
    25fa:	bc 01       	movw	r22, r24
    25fc:	cd 01       	movw	r24, r26
    25fe:	42 2f       	mov	r20, r18
    2600:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <SSD_VoidSendNumber>
    2604:	80 e0       	ldi	r24, 0x00	; 0
    2606:	90 e0       	ldi	r25, 0x00	; 0
    2608:	a0 ea       	ldi	r26, 0xA0	; 160
    260a:	b0 e4       	ldi	r27, 0x40	; 64
    260c:	89 8f       	std	Y+25, r24	; 0x19
    260e:	9a 8f       	std	Y+26, r25	; 0x1a
    2610:	ab 8f       	std	Y+27, r26	; 0x1b
    2612:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2614:	69 8d       	ldd	r22, Y+25	; 0x19
    2616:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2618:	8b 8d       	ldd	r24, Y+27	; 0x1b
    261a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    261c:	20 e0       	ldi	r18, 0x00	; 0
    261e:	30 e0       	ldi	r19, 0x00	; 0
    2620:	4a ef       	ldi	r20, 0xFA	; 250
    2622:	54 e4       	ldi	r21, 0x44	; 68
    2624:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2628:	dc 01       	movw	r26, r24
    262a:	cb 01       	movw	r24, r22
    262c:	8d 8b       	std	Y+21, r24	; 0x15
    262e:	9e 8b       	std	Y+22, r25	; 0x16
    2630:	af 8b       	std	Y+23, r26	; 0x17
    2632:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2634:	6d 89       	ldd	r22, Y+21	; 0x15
    2636:	7e 89       	ldd	r23, Y+22	; 0x16
    2638:	8f 89       	ldd	r24, Y+23	; 0x17
    263a:	98 8d       	ldd	r25, Y+24	; 0x18
    263c:	20 e0       	ldi	r18, 0x00	; 0
    263e:	30 e0       	ldi	r19, 0x00	; 0
    2640:	40 e8       	ldi	r20, 0x80	; 128
    2642:	5f e3       	ldi	r21, 0x3F	; 63
    2644:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2648:	88 23       	and	r24, r24
    264a:	2c f4       	brge	.+10     	; 0x2656 <main+0xb08>
		__ticks = 1;
    264c:	81 e0       	ldi	r24, 0x01	; 1
    264e:	90 e0       	ldi	r25, 0x00	; 0
    2650:	9c 8b       	std	Y+20, r25	; 0x14
    2652:	8b 8b       	std	Y+19, r24	; 0x13
    2654:	3f c0       	rjmp	.+126    	; 0x26d4 <main+0xb86>
	else if (__tmp > 65535)
    2656:	6d 89       	ldd	r22, Y+21	; 0x15
    2658:	7e 89       	ldd	r23, Y+22	; 0x16
    265a:	8f 89       	ldd	r24, Y+23	; 0x17
    265c:	98 8d       	ldd	r25, Y+24	; 0x18
    265e:	20 e0       	ldi	r18, 0x00	; 0
    2660:	3f ef       	ldi	r19, 0xFF	; 255
    2662:	4f e7       	ldi	r20, 0x7F	; 127
    2664:	57 e4       	ldi	r21, 0x47	; 71
    2666:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    266a:	18 16       	cp	r1, r24
    266c:	4c f5       	brge	.+82     	; 0x26c0 <main+0xb72>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    266e:	69 8d       	ldd	r22, Y+25	; 0x19
    2670:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2672:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2674:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2676:	20 e0       	ldi	r18, 0x00	; 0
    2678:	30 e0       	ldi	r19, 0x00	; 0
    267a:	40 e2       	ldi	r20, 0x20	; 32
    267c:	51 e4       	ldi	r21, 0x41	; 65
    267e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2682:	dc 01       	movw	r26, r24
    2684:	cb 01       	movw	r24, r22
    2686:	bc 01       	movw	r22, r24
    2688:	cd 01       	movw	r24, r26
    268a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    268e:	dc 01       	movw	r26, r24
    2690:	cb 01       	movw	r24, r22
    2692:	9c 8b       	std	Y+20, r25	; 0x14
    2694:	8b 8b       	std	Y+19, r24	; 0x13
    2696:	0f c0       	rjmp	.+30     	; 0x26b6 <main+0xb68>
    2698:	88 ec       	ldi	r24, 0xC8	; 200
    269a:	90 e0       	ldi	r25, 0x00	; 0
    269c:	9a 8b       	std	Y+18, r25	; 0x12
    269e:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    26a0:	89 89       	ldd	r24, Y+17	; 0x11
    26a2:	9a 89       	ldd	r25, Y+18	; 0x12
    26a4:	01 97       	sbiw	r24, 0x01	; 1
    26a6:	f1 f7       	brne	.-4      	; 0x26a4 <main+0xb56>
    26a8:	9a 8b       	std	Y+18, r25	; 0x12
    26aa:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26ac:	8b 89       	ldd	r24, Y+19	; 0x13
    26ae:	9c 89       	ldd	r25, Y+20	; 0x14
    26b0:	01 97       	sbiw	r24, 0x01	; 1
    26b2:	9c 8b       	std	Y+20, r25	; 0x14
    26b4:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26b6:	8b 89       	ldd	r24, Y+19	; 0x13
    26b8:	9c 89       	ldd	r25, Y+20	; 0x14
    26ba:	00 97       	sbiw	r24, 0x00	; 0
    26bc:	69 f7       	brne	.-38     	; 0x2698 <main+0xb4a>
    26be:	14 c0       	rjmp	.+40     	; 0x26e8 <main+0xb9a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26c0:	6d 89       	ldd	r22, Y+21	; 0x15
    26c2:	7e 89       	ldd	r23, Y+22	; 0x16
    26c4:	8f 89       	ldd	r24, Y+23	; 0x17
    26c6:	98 8d       	ldd	r25, Y+24	; 0x18
    26c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26cc:	dc 01       	movw	r26, r24
    26ce:	cb 01       	movw	r24, r22
    26d0:	9c 8b       	std	Y+20, r25	; 0x14
    26d2:	8b 8b       	std	Y+19, r24	; 0x13
    26d4:	8b 89       	ldd	r24, Y+19	; 0x13
    26d6:	9c 89       	ldd	r25, Y+20	; 0x14
    26d8:	98 8b       	std	Y+16, r25	; 0x10
    26da:	8f 87       	std	Y+15, r24	; 0x0f
    26dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    26de:	98 89       	ldd	r25, Y+16	; 0x10
    26e0:	01 97       	sbiw	r24, 0x01	; 1
    26e2:	f1 f7       	brne	.-4      	; 0x26e0 <main+0xb92>
    26e4:	98 8b       	std	Y+16, r25	; 0x10
    26e6:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(5);
		SSD_VoidEnable (ssd1);
    26e8:	fe 01       	movw	r30, r28
    26ea:	e0 5c       	subi	r30, 0xC0	; 192
    26ec:	ff 4f       	sbci	r31, 0xFF	; 255
    26ee:	80 81       	ld	r24, Z
    26f0:	91 81       	ldd	r25, Z+1	; 0x01
    26f2:	a2 81       	ldd	r26, Z+2	; 0x02
    26f4:	b3 81       	ldd	r27, Z+3	; 0x03
    26f6:	bc 01       	movw	r22, r24
    26f8:	cd 01       	movw	r24, r26
    26fa:	0e 94 af 0c 	call	0x195e	; 0x195e <SSD_VoidEnable>
		SSD_VoidDisable (ssd0);
    26fe:	8c ad       	ldd	r24, Y+60	; 0x3c
    2700:	9d ad       	ldd	r25, Y+61	; 0x3d
    2702:	ae ad       	ldd	r26, Y+62	; 0x3e
    2704:	bf ad       	ldd	r27, Y+63	; 0x3f
    2706:	bc 01       	movw	r22, r24
    2708:	cd 01       	movw	r24, r26
    270a:	0e 94 df 0c 	call	0x19be	; 0x19be <SSD_VoidDisable>
		SSD_VoidSendNumber (ssd1,value%10);
    270e:	89 a1       	ldd	r24, Y+33	; 0x21
    2710:	9a e0       	ldi	r25, 0x0A	; 10
    2712:	69 2f       	mov	r22, r25
    2714:	0e 94 0d 14 	call	0x281a	; 0x281a <__udivmodqi4>
    2718:	89 2f       	mov	r24, r25
    271a:	28 2f       	mov	r18, r24
    271c:	fe 01       	movw	r30, r28
    271e:	e0 5c       	subi	r30, 0xC0	; 192
    2720:	ff 4f       	sbci	r31, 0xFF	; 255
    2722:	80 81       	ld	r24, Z
    2724:	91 81       	ldd	r25, Z+1	; 0x01
    2726:	a2 81       	ldd	r26, Z+2	; 0x02
    2728:	b3 81       	ldd	r27, Z+3	; 0x03
    272a:	bc 01       	movw	r22, r24
    272c:	cd 01       	movw	r24, r26
    272e:	42 2f       	mov	r20, r18
    2730:	0e 94 0f 0d 	call	0x1a1e	; 0x1a1e <SSD_VoidSendNumber>
    2734:	80 e0       	ldi	r24, 0x00	; 0
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	a0 ea       	ldi	r26, 0xA0	; 160
    273a:	b0 e4       	ldi	r27, 0x40	; 64
    273c:	8b 87       	std	Y+11, r24	; 0x0b
    273e:	9c 87       	std	Y+12, r25	; 0x0c
    2740:	ad 87       	std	Y+13, r26	; 0x0d
    2742:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2744:	6b 85       	ldd	r22, Y+11	; 0x0b
    2746:	7c 85       	ldd	r23, Y+12	; 0x0c
    2748:	8d 85       	ldd	r24, Y+13	; 0x0d
    274a:	9e 85       	ldd	r25, Y+14	; 0x0e
    274c:	20 e0       	ldi	r18, 0x00	; 0
    274e:	30 e0       	ldi	r19, 0x00	; 0
    2750:	4a ef       	ldi	r20, 0xFA	; 250
    2752:	54 e4       	ldi	r21, 0x44	; 68
    2754:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2758:	dc 01       	movw	r26, r24
    275a:	cb 01       	movw	r24, r22
    275c:	8f 83       	std	Y+7, r24	; 0x07
    275e:	98 87       	std	Y+8, r25	; 0x08
    2760:	a9 87       	std	Y+9, r26	; 0x09
    2762:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2764:	6f 81       	ldd	r22, Y+7	; 0x07
    2766:	78 85       	ldd	r23, Y+8	; 0x08
    2768:	89 85       	ldd	r24, Y+9	; 0x09
    276a:	9a 85       	ldd	r25, Y+10	; 0x0a
    276c:	20 e0       	ldi	r18, 0x00	; 0
    276e:	30 e0       	ldi	r19, 0x00	; 0
    2770:	40 e8       	ldi	r20, 0x80	; 128
    2772:	5f e3       	ldi	r21, 0x3F	; 63
    2774:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2778:	88 23       	and	r24, r24
    277a:	2c f4       	brge	.+10     	; 0x2786 <main+0xc38>
		__ticks = 1;
    277c:	81 e0       	ldi	r24, 0x01	; 1
    277e:	90 e0       	ldi	r25, 0x00	; 0
    2780:	9e 83       	std	Y+6, r25	; 0x06
    2782:	8d 83       	std	Y+5, r24	; 0x05
    2784:	3f c0       	rjmp	.+126    	; 0x2804 <main+0xcb6>
	else if (__tmp > 65535)
    2786:	6f 81       	ldd	r22, Y+7	; 0x07
    2788:	78 85       	ldd	r23, Y+8	; 0x08
    278a:	89 85       	ldd	r24, Y+9	; 0x09
    278c:	9a 85       	ldd	r25, Y+10	; 0x0a
    278e:	20 e0       	ldi	r18, 0x00	; 0
    2790:	3f ef       	ldi	r19, 0xFF	; 255
    2792:	4f e7       	ldi	r20, 0x7F	; 127
    2794:	57 e4       	ldi	r21, 0x47	; 71
    2796:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    279a:	18 16       	cp	r1, r24
    279c:	4c f5       	brge	.+82     	; 0x27f0 <main+0xca2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    279e:	6b 85       	ldd	r22, Y+11	; 0x0b
    27a0:	7c 85       	ldd	r23, Y+12	; 0x0c
    27a2:	8d 85       	ldd	r24, Y+13	; 0x0d
    27a4:	9e 85       	ldd	r25, Y+14	; 0x0e
    27a6:	20 e0       	ldi	r18, 0x00	; 0
    27a8:	30 e0       	ldi	r19, 0x00	; 0
    27aa:	40 e2       	ldi	r20, 0x20	; 32
    27ac:	51 e4       	ldi	r21, 0x41	; 65
    27ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27b2:	dc 01       	movw	r26, r24
    27b4:	cb 01       	movw	r24, r22
    27b6:	bc 01       	movw	r22, r24
    27b8:	cd 01       	movw	r24, r26
    27ba:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27be:	dc 01       	movw	r26, r24
    27c0:	cb 01       	movw	r24, r22
    27c2:	9e 83       	std	Y+6, r25	; 0x06
    27c4:	8d 83       	std	Y+5, r24	; 0x05
    27c6:	0f c0       	rjmp	.+30     	; 0x27e6 <main+0xc98>
    27c8:	88 ec       	ldi	r24, 0xC8	; 200
    27ca:	90 e0       	ldi	r25, 0x00	; 0
    27cc:	9c 83       	std	Y+4, r25	; 0x04
    27ce:	8b 83       	std	Y+3, r24	; 0x03
    27d0:	8b 81       	ldd	r24, Y+3	; 0x03
    27d2:	9c 81       	ldd	r25, Y+4	; 0x04
    27d4:	01 97       	sbiw	r24, 0x01	; 1
    27d6:	f1 f7       	brne	.-4      	; 0x27d4 <main+0xc86>
    27d8:	9c 83       	std	Y+4, r25	; 0x04
    27da:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    27dc:	8d 81       	ldd	r24, Y+5	; 0x05
    27de:	9e 81       	ldd	r25, Y+6	; 0x06
    27e0:	01 97       	sbiw	r24, 0x01	; 1
    27e2:	9e 83       	std	Y+6, r25	; 0x06
    27e4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27e6:	8d 81       	ldd	r24, Y+5	; 0x05
    27e8:	9e 81       	ldd	r25, Y+6	; 0x06
    27ea:	00 97       	sbiw	r24, 0x00	; 0
    27ec:	69 f7       	brne	.-38     	; 0x27c8 <main+0xc7a>
    27ee:	f0 cd       	rjmp	.-1056   	; 0x23d0 <main+0x882>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27f0:	6f 81       	ldd	r22, Y+7	; 0x07
    27f2:	78 85       	ldd	r23, Y+8	; 0x08
    27f4:	89 85       	ldd	r24, Y+9	; 0x09
    27f6:	9a 85       	ldd	r25, Y+10	; 0x0a
    27f8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27fc:	dc 01       	movw	r26, r24
    27fe:	cb 01       	movw	r24, r22
    2800:	9e 83       	std	Y+6, r25	; 0x06
    2802:	8d 83       	std	Y+5, r24	; 0x05
    2804:	8d 81       	ldd	r24, Y+5	; 0x05
    2806:	9e 81       	ldd	r25, Y+6	; 0x06
    2808:	9a 83       	std	Y+2, r25	; 0x02
    280a:	89 83       	std	Y+1, r24	; 0x01
    280c:	89 81       	ldd	r24, Y+1	; 0x01
    280e:	9a 81       	ldd	r25, Y+2	; 0x02
    2810:	01 97       	sbiw	r24, 0x01	; 1
    2812:	f1 f7       	brne	.-4      	; 0x2810 <main+0xcc2>
    2814:	9a 83       	std	Y+2, r25	; 0x02
    2816:	89 83       	std	Y+1, r24	; 0x01
    2818:	db cd       	rjmp	.-1098   	; 0x23d0 <main+0x882>

0000281a <__udivmodqi4>:
    281a:	99 1b       	sub	r25, r25
    281c:	79 e0       	ldi	r23, 0x09	; 9
    281e:	04 c0       	rjmp	.+8      	; 0x2828 <__udivmodqi4_ep>

00002820 <__udivmodqi4_loop>:
    2820:	99 1f       	adc	r25, r25
    2822:	96 17       	cp	r25, r22
    2824:	08 f0       	brcs	.+2      	; 0x2828 <__udivmodqi4_ep>
    2826:	96 1b       	sub	r25, r22

00002828 <__udivmodqi4_ep>:
    2828:	88 1f       	adc	r24, r24
    282a:	7a 95       	dec	r23
    282c:	c9 f7       	brne	.-14     	; 0x2820 <__udivmodqi4_loop>
    282e:	80 95       	com	r24
    2830:	08 95       	ret

00002832 <__prologue_saves__>:
    2832:	2f 92       	push	r2
    2834:	3f 92       	push	r3
    2836:	4f 92       	push	r4
    2838:	5f 92       	push	r5
    283a:	6f 92       	push	r6
    283c:	7f 92       	push	r7
    283e:	8f 92       	push	r8
    2840:	9f 92       	push	r9
    2842:	af 92       	push	r10
    2844:	bf 92       	push	r11
    2846:	cf 92       	push	r12
    2848:	df 92       	push	r13
    284a:	ef 92       	push	r14
    284c:	ff 92       	push	r15
    284e:	0f 93       	push	r16
    2850:	1f 93       	push	r17
    2852:	cf 93       	push	r28
    2854:	df 93       	push	r29
    2856:	cd b7       	in	r28, 0x3d	; 61
    2858:	de b7       	in	r29, 0x3e	; 62
    285a:	ca 1b       	sub	r28, r26
    285c:	db 0b       	sbc	r29, r27
    285e:	0f b6       	in	r0, 0x3f	; 63
    2860:	f8 94       	cli
    2862:	de bf       	out	0x3e, r29	; 62
    2864:	0f be       	out	0x3f, r0	; 63
    2866:	cd bf       	out	0x3d, r28	; 61
    2868:	09 94       	ijmp

0000286a <__epilogue_restores__>:
    286a:	2a 88       	ldd	r2, Y+18	; 0x12
    286c:	39 88       	ldd	r3, Y+17	; 0x11
    286e:	48 88       	ldd	r4, Y+16	; 0x10
    2870:	5f 84       	ldd	r5, Y+15	; 0x0f
    2872:	6e 84       	ldd	r6, Y+14	; 0x0e
    2874:	7d 84       	ldd	r7, Y+13	; 0x0d
    2876:	8c 84       	ldd	r8, Y+12	; 0x0c
    2878:	9b 84       	ldd	r9, Y+11	; 0x0b
    287a:	aa 84       	ldd	r10, Y+10	; 0x0a
    287c:	b9 84       	ldd	r11, Y+9	; 0x09
    287e:	c8 84       	ldd	r12, Y+8	; 0x08
    2880:	df 80       	ldd	r13, Y+7	; 0x07
    2882:	ee 80       	ldd	r14, Y+6	; 0x06
    2884:	fd 80       	ldd	r15, Y+5	; 0x05
    2886:	0c 81       	ldd	r16, Y+4	; 0x04
    2888:	1b 81       	ldd	r17, Y+3	; 0x03
    288a:	aa 81       	ldd	r26, Y+2	; 0x02
    288c:	b9 81       	ldd	r27, Y+1	; 0x01
    288e:	ce 0f       	add	r28, r30
    2890:	d1 1d       	adc	r29, r1
    2892:	0f b6       	in	r0, 0x3f	; 63
    2894:	f8 94       	cli
    2896:	de bf       	out	0x3e, r29	; 62
    2898:	0f be       	out	0x3f, r0	; 63
    289a:	cd bf       	out	0x3d, r28	; 61
    289c:	ed 01       	movw	r28, r26
    289e:	08 95       	ret

000028a0 <_exit>:
    28a0:	f8 94       	cli

000028a2 <__stop_program>:
    28a2:	ff cf       	rjmp	.-2      	; 0x28a2 <__stop_program>
